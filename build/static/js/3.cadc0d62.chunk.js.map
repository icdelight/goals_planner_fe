{"version":3,"sources":["../../src/OverlayScrollbarsComponent.tsx","../node_modules/overlayscrollbars/js/OverlayScrollbars.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-intl/lib/src/components/useIntl.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/dequal/dist/index.mjs","../node_modules/@restart/hooks/esm/useSafeState.js","../node_modules/@restart/ui/esm/popper.js","../node_modules/@restart/ui/esm/usePopper.js","../node_modules/@restart/ui/esm/useClickOutside.js","../node_modules/@restart/ui/esm/mergeOptionsWithPopperConfig.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"names":["OverlayScrollbarsComponent","props","_osInstance","_osTargetRef","createRef","this","current","osTarget","options","extensions","mergeHostClassNames","className","valid","destroy","prevProps","divProps","ref","children","osInstance","host","getElements","regex","RegExp","replace","osClassNames","split","filter","name","match","join","global","window","define","document","undefined","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","length","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","base","elements","innerHTML","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","elementName","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","doAdd","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory","Container","React","bsPrefix","fluid","as","Component","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","useIntl","intl","Context","invariantIntlContext","DropdownContext","has","prototype","iter","tar","keys","dequal","foo","bar","ctor","len","tmp","Set","size","Map","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","useSafeState","state","isMounted","useMounted","useCallback","nextState","createPopper","popperGenerator","defaultModifiers","popperOffsets","computeStyles","eventListeners","flip","preventOverflow","arrow","_excluded","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","disabledApplyStylesModifier","enabled","phase","ariaDescribedByModifier","effect","reference","popper","ids","trim","_popper$getAttribute","role","EMPTY_MODIFIERS","usePopper","referenceElement","popperElement","_ref","placement","modifiers","config","prevModifiers","useRef","popperInstanceRef","_popperInstanceRef$cu","forceUpdate","_popperInstanceRef$cu2","useState","popperState","setState","updateModifier","useMemo","requires","forEach","nextModifiers","useEffect","assign","noop","isLeftClickEvent","isModifiedEvent","metaKey","altKey","getRefTarget","InitialTriggerEvents","click","mouseup","pointerup","useClickOutside","onClickOutside","disabled","clickTrigger","preventMouseClickOutsideRef","waitingForTrigger","handleMouseCapture","currentTarget","warning","handleInitialMouse","useEventCallback","handleMouse","currentEvent","removeInitialTriggerListener","listen","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","map","toModifierArray","mergeOptionsWithPopperConfig","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","enableEvents","fixed","containerPadding","arrowElement","popperConfig","m","toModifierMap","useDropdownMenu","context","useContext","useCallbackRef","attachArrowRef","hasShownRef","rootCloseEvent","placementOverride","enableEventListeners","shouldUsePopper","handleClose","toggle","setMenu","menuElement","toggleElement","menuProps","metadata","hasShown","arrowProps","DropdownMenu","meta","_Fragment","String","random","createContext","Boolean","isRoleMenu","_el$getAttribute","useDropdownToggle","defaultId","ctx","useSSRSafeId","setToggle","handleClick","onClick","DropdownToggle","makeEventKey","eventKey","href","SelectableContext","NavContext","useDropdownItem","active","onSelectCtx","activeKey","isActive","isPropagationStopped","dataAttr","DropdownItem","Button","dropdownItemProps","useRefWithUpdate","useReducer","attachRef","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","useWindow","useUncontrolledProp","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","handleSelect","focusToggle","maybeFocusFirst","focusType","test","qsa","getNextFocusedChild","items","useEventListener","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","_menuRef$current2","once","Provider","Menu","Toggle","Item","Anchor","useWrappedRefWithWarning","componentName","getDropdownMenuPlacement","alignEnd","dropDirection","align","showProps","renderOnMount","variant","isNavbar","NavbarContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","useMergedRefs","useIsomorphicEffect","close","childBsPrefix","dropdownContext","toggleProps","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","useUncontrolled","autoClose","navbar","useIsRTL","handleToggle","contextValue","BaseDropdown","ItemText","Divider","Header","createChainedFunction","funcs","reduce","acc","Error","MARGINS","getDefaultDimensionValue","dimension","margins","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","forwardRef","onEnter","onEntering","onEntered","onExit","onExiting","computedDimension","handleEnter","handleEntering","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps","cloneElement"],"mappings":"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8B,QACpBS,EAAOvC,EAAUuC,KAGjBoQ,EAAQ,IAAInG,EACZyM,EAAkBjZ,EAAUvK,EAAQI,GAGxC,GAAKqjB,GAAcF,GAAnB,CAIA,GAAI9M,EAAU8M,GAAsB,CAChC,IAAIG,EAAOjN,EAAU8M,GAErB,OADAG,EAAK/lB,QAAQA,GACN+lB,CACV,CAGD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgHAC,EACAC,GACAC,GAOAC,GAEAC,GAMAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAQAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GArOAC,GAAqB,CAAC,EACtBC,GAAwB,CAAC,EACzBC,GAAsB,CAAC,EACvBC,GAAgB,CAAC,EACjBC,GAA0B,CAAC,EAG3BC,GAAkB,UAClBC,GAAkB,UAClBC,GAAmB,WACnBC,GAAkB,UAClBC,GAAU,MACVC,GAAY,QACZC,GAAa,SACbC,GAAW,OACXC,GAAe,OACfC,GAAe,OACfC,GAAY,QACZC,GAAa,SACbC,GAAY,QACZ1hB,GAAY,GACZ2hB,GAAW,OACXC,GAAW,OACXC,G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","file":"static/js/3.cadc0d62.chunk.js","sourcesContent":["import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n\t\t\t\t\tif (!_destroyed) {\r\n\t\t\t\t\t\tvar target = event.target;\r\n\t\t\t\t\t\tvar elm = FRAMEWORK(event.target);\r\n\t\t\t\t\t\tvar index = FRAMEWORK.inArray(target, _updateOnLoadElms);\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\t_updateOnLoadElms.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n\t\t\t\t\t\t\tif (elm.is(updateOnLoadSelector)) {\r\n\t\t\t\t\t\t\t\tupdate({ _contentSizeChanged: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _initialized = false;\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import { useCallback } from 'react';\nimport useMounted from './useMounted';\n\nfunction useSafeState(state) {\n  var isMounted = useMounted();\n  return [state[0], useCallback(function (nextState) {\n    if (!isMounted()) return;\n    return state[1](nextState);\n  }, [isMounted, state[1]])];\n}\n\nexport default useSafeState;","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base'; // For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\n\nexport const createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","const _excluded = [\"enabled\", \"placement\", \"strategy\", \"modifiers\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { dequal } from 'dequal';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\nconst disabledApplyStylesModifier = {\n  name: 'applyStyles',\n  enabled: false,\n  phase: 'afterWrite',\n  fn: () => undefined\n}; // until docjs supports type exports...\n\nconst ariaDescribedByModifier = {\n  name: 'ariaDescribedBy',\n  enabled: true,\n  phase: 'afterWrite',\n  effect: ({\n    state\n  }) => () => {\n    const {\n      reference,\n      popper\n    } = state.elements;\n\n    if ('removeAttribute' in reference) {\n      const ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(id => id.trim() !== popper.id);\n      if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));\n    }\n  },\n  fn: ({\n    state\n  }) => {\n    var _popper$getAttribute;\n\n    const {\n      popper,\n      reference\n    } = state.elements;\n    const role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();\n\n    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {\n      const ids = reference.getAttribute('aria-describedby');\n\n      if (ids && ids.split(',').indexOf(popper.id) !== -1) {\n        return;\n      }\n\n      reference.setAttribute('aria-describedby', ids ? `${ids},${popper.id}` : popper.id);\n    }\n  }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\n\nfunction usePopper(referenceElement, popperElement, _ref = {}) {\n  let {\n    enabled = true,\n    placement = 'bottom',\n    strategy = 'absolute',\n    modifiers = EMPTY_MODIFIERS\n  } = _ref,\n      config = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const prevModifiers = useRef(modifiers);\n  const popperInstanceRef = useRef();\n  const update = useCallback(() => {\n    var _popperInstanceRef$cu;\n\n    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n  }, []);\n  const forceUpdate = useCallback(() => {\n    var _popperInstanceRef$cu2;\n\n    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n  }, []);\n  const [popperState, setState] = useSafeState(useState({\n    placement,\n    update,\n    forceUpdate,\n    attributes: {},\n    styles: {\n      popper: {},\n      arrow: {}\n    }\n  }));\n  const updateModifier = useMemo(() => ({\n    name: 'updateStateModifier',\n    enabled: true,\n    phase: 'write',\n    requires: ['computeStyles'],\n    fn: ({\n      state\n    }) => {\n      const styles = {};\n      const attributes = {};\n      Object.keys(state.elements).forEach(element => {\n        styles[element] = state.styles[element];\n        attributes[element] = state.attributes[element];\n      });\n      setState({\n        state,\n        styles,\n        attributes,\n        update,\n        forceUpdate,\n        placement: state.placement\n      });\n    }\n  }), [update, forceUpdate, setState]);\n  const nextModifiers = useMemo(() => {\n    if (!dequal(prevModifiers.current, modifiers)) {\n      prevModifiers.current = modifiers;\n    }\n\n    return prevModifiers.current;\n  }, [modifiers]);\n  useEffect(() => {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, updateModifier, disabledApplyStylesModifier]\n    });\n  }, [strategy, placement, updateModifier, enabled, nextModifiers]);\n  useEffect(() => {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, Object.assign({}, config, {\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, ariaDescribedByModifier, updateModifier]\n    }));\n    return () => {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(s => Object.assign({}, s, {\n          attributes: {},\n          styles: {\n            popper: {}\n          }\n        }));\n      }\n    }; // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return popperState;\n}\n\nexport default usePopper;","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\n\nconst noop = () => {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\n\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    let removeInitialTriggerListener = null;\n\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    } // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\n\nexport default useClickOutside;","export function toModifierMap(modifiers) {\n  const result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map = {}) {\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig({\n  enabled,\n  enableEvents,\n  placement,\n  flip,\n  offset,\n  fixed,\n  containerPadding,\n  arrowElement,\n  popperConfig = {}\n}) {\n  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}