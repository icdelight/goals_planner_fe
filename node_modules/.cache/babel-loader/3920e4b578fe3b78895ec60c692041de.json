{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { menuChangeBehaviour, menuChangeBreakpoints, menuChangePinButtonEnable, menuChangePlacement, menuChangeUseSidebar, menuResetBreakpoints, menuResetUseSidebar } from 'layout/nav/main-menu/menuSlice';\nimport { settingsChangeColor, settingsChangeLayout, settingsChangeNavColor, settingsChangeRadius, settingsResetLayout } from 'settings/settingsSlice';\n\nconst useCustomLayout = ({\n  placement = null,\n  behaviour = null,\n  layout = null,\n  radius = null,\n  color = null,\n  navColor = null,\n  useSidebar = null,\n  pinEnable = null,\n  fullpage = null,\n  breakpoints = null\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    placement: currentPlacement,\n    behaviour: currentBehaviour,\n    breakpoints: currentBreakpoints,\n    pinButtonEnable: currentPinButtonEnable,\n    useSidebar: currentUseSidebar\n  } = useSelector(state => state.menu);\n  const {\n    layout: currentLayout,\n    radius: currentRadius,\n    color: currentColor,\n    navColor: currentNavColor\n  } = useSelector(state => state.settings);\n  const variables = {\n    placement: placement || currentPlacement,\n    behaviour: behaviour || currentBehaviour,\n    layout: layout || currentLayout,\n    radius: radius || currentRadius,\n    color: color || currentColor,\n    navColor: navColor || currentNavColor,\n    breakpoints: breakpoints || currentBreakpoints,\n    useSidebar: useSidebar || currentUseSidebar\n  };\n  useEffect(() => {\n    const changes = {\n      placement: false,\n      behaviour: false,\n      layout: false,\n      radius: false,\n      color: false,\n      navColor: false,\n      breakpoints: false,\n      pinEnable: false,\n      useSidebar: false\n    };\n\n    if (placement) {\n      changes.placement = true;\n      dispatch(menuChangePlacement(placement));\n    }\n\n    if (behaviour) {\n      changes.behaviour = true;\n      dispatch(menuChangeBehaviour(behaviour));\n    }\n\n    if (layout) {\n      changes.layout = true;\n      dispatch(settingsChangeLayout(layout));\n    }\n\n    if (radius) {\n      changes.radius = true;\n      dispatch(settingsChangeRadius(radius));\n    }\n\n    if (color) {\n      changes.color = true;\n      dispatch(settingsChangeColor(color));\n    }\n\n    if (navColor) {\n      changes.navColor = true;\n      dispatch(settingsChangeNavColor(navColor));\n    }\n\n    if (breakpoints) {\n      changes.breakpoints = true;\n      dispatch(menuChangeBreakpoints(breakpoints));\n    }\n\n    if (pinEnable !== null) {\n      changes.pinEnable = true;\n      dispatch(menuChangePinButtonEnable(pinEnable));\n    }\n\n    if (useSidebar !== null) {\n      changes.useSidebar = true;\n      dispatch(menuChangeUseSidebar(useSidebar));\n    }\n\n    if (fullpage !== null) {\n      changes.fullpage = true;\n      document.documentElement.setAttribute('data-fullpage', fullpage);\n    }\n\n    return () => {\n      if (changes.placement) dispatch(menuChangePlacement(currentPlacement));\n      if (changes.behaviour) dispatch(menuChangeBehaviour(currentBehaviour));\n      if (changes.layout) dispatch(settingsResetLayout());\n      if (changes.radius) dispatch(settingsChangeRadius(currentRadius));\n      if (changes.color) dispatch(settingsChangeColor(currentColor));\n      if (changes.navColor) dispatch(settingsChangeNavColor(currentNavColor));\n      if (changes.breakpoints) dispatch(menuResetBreakpoints());\n      if (changes.pinEnable) dispatch(menuChangePinButtonEnable(currentPinButtonEnable));\n      if (changes.useSidebar) dispatch(menuResetUseSidebar());\n      if (changes.fullpage) document.documentElement.removeAttribute('data-fullpage');\n    }; // eslint-disable-next-line\n  }, []);\n  return variables;\n};\n\n_s(useCustomLayout, \"BmVCIOPCtAElDxKeyoVENMCd7a8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\nexport default useCustomLayout;","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/hooks/useCustomLayout.js"],"names":["useEffect","useDispatch","useSelector","menuChangeBehaviour","menuChangeBreakpoints","menuChangePinButtonEnable","menuChangePlacement","menuChangeUseSidebar","menuResetBreakpoints","menuResetUseSidebar","settingsChangeColor","settingsChangeLayout","settingsChangeNavColor","settingsChangeRadius","settingsResetLayout","useCustomLayout","placement","behaviour","layout","radius","color","navColor","useSidebar","pinEnable","fullpage","breakpoints","dispatch","currentPlacement","currentBehaviour","currentBreakpoints","pinButtonEnable","currentPinButtonEnable","currentUseSidebar","state","menu","currentLayout","currentRadius","currentColor","currentNavColor","settings","variables","changes","document","documentElement","setAttribute","removeAttribute"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  menuChangeBehaviour,\n  menuChangeBreakpoints,\n  menuChangePinButtonEnable,\n  menuChangePlacement,\n  menuChangeUseSidebar,\n  menuResetBreakpoints,\n  menuResetUseSidebar,\n} from 'layout/nav/main-menu/menuSlice';\nimport { settingsChangeColor, settingsChangeLayout, settingsChangeNavColor, settingsChangeRadius, settingsResetLayout } from 'settings/settingsSlice';\n\nconst useCustomLayout = ({\n  placement = null,\n  behaviour = null,\n  layout = null,\n  radius = null,\n  color = null,\n  navColor = null,\n  useSidebar = null,\n  pinEnable = null,\n  fullpage = null,\n  breakpoints = null,\n}) => {\n  const dispatch = useDispatch();\n  const {\n    placement: currentPlacement,\n    behaviour: currentBehaviour,\n    breakpoints: currentBreakpoints,\n    pinButtonEnable: currentPinButtonEnable,\n    useSidebar: currentUseSidebar,\n  } = useSelector((state) => state.menu);\n  const { layout: currentLayout, radius: currentRadius, color: currentColor, navColor: currentNavColor } = useSelector((state) => state.settings);\n  const variables = {\n    placement: placement || currentPlacement,\n    behaviour: behaviour || currentBehaviour,\n    layout: layout || currentLayout,\n    radius: radius || currentRadius,\n    color: color || currentColor,\n    navColor: navColor || currentNavColor,\n    breakpoints: breakpoints || currentBreakpoints,\n    useSidebar: useSidebar || currentUseSidebar,\n  };\n  useEffect(() => {\n    const changes = {\n      placement: false,\n      behaviour: false,\n      layout: false,\n      radius: false,\n      color: false,\n      navColor: false,\n      breakpoints: false,\n      pinEnable: false,\n      useSidebar: false,\n    };\n\n    if (placement) {\n      changes.placement = true;\n      dispatch(menuChangePlacement(placement));\n    }\n\n    if (behaviour) {\n      changes.behaviour = true;\n      dispatch(menuChangeBehaviour(behaviour));\n    }\n\n    if (layout) {\n      changes.layout = true;\n      dispatch(settingsChangeLayout(layout));\n    }\n    if (radius) {\n      changes.radius = true;\n      dispatch(settingsChangeRadius(radius));\n    }\n\n    if (color) {\n      changes.color = true;\n      dispatch(settingsChangeColor(color));\n    }\n    if (navColor) {\n      changes.navColor = true;\n      dispatch(settingsChangeNavColor(navColor));\n    }\n\n    if (breakpoints) {\n      changes.breakpoints = true;\n      dispatch(menuChangeBreakpoints(breakpoints));\n    }\n\n    if (pinEnable !== null) {\n      changes.pinEnable = true;\n      dispatch(menuChangePinButtonEnable(pinEnable));\n    }\n\n    if (useSidebar !== null) {\n      changes.useSidebar = true;\n      dispatch(menuChangeUseSidebar(useSidebar));\n    }\n    if (fullpage !== null) {\n      changes.fullpage = true;\n      document.documentElement.setAttribute('data-fullpage', fullpage);\n    }\n\n    return () => {\n      if (changes.placement) dispatch(menuChangePlacement(currentPlacement));\n      if (changes.behaviour) dispatch(menuChangeBehaviour(currentBehaviour));\n      if (changes.layout) dispatch(settingsResetLayout());\n      if (changes.radius) dispatch(settingsChangeRadius(currentRadius));\n      if (changes.color) dispatch(settingsChangeColor(currentColor));\n      if (changes.navColor) dispatch(settingsChangeNavColor(currentNavColor));\n      if (changes.breakpoints) dispatch(menuResetBreakpoints());\n      if (changes.pinEnable) dispatch(menuChangePinButtonEnable(currentPinButtonEnable));\n      if (changes.useSidebar) dispatch(menuResetUseSidebar());\n      if (changes.fullpage) document.documentElement.removeAttribute('data-fullpage');\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return variables;\n};\n\nexport default useCustomLayout;\n"]},"metadata":{},"sourceType":"module"}