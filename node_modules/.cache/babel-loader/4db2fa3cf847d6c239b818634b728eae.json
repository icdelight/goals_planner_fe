{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/lang/LangProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { messages } from './messages/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LangProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    currentLang\n  } = useSelector(state => state.lang);\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: currentLang.locale,\n    messages: messages[currentLang.locale],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LangProvider, \"sZtnKlfmraqs+6pYWBYSaCEjR14=\", false, function () {\n  return [useSelector];\n});\n\n_c = LangProvider;\nexport default LangProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/lang/LangProvider.js"],"names":["React","IntlProvider","useSelector","messages","LangProvider","children","currentLang","state","lang","locale"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;AACA,sBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEF,WAAW,CAACG,MAAlC;AAA0C,IAAA,QAAQ,EAAEN,QAAQ,CAACG,WAAW,CAACG,MAAb,CAA5D;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;GAAMD,Y;UACoBF,W;;;KADpBE,Y;AAQN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { messages } from './messages/messages';\n\nconst LangProvider = ({ children }) => {\n  const { currentLang } = useSelector((state) => state.lang);\n  return (\n    <IntlProvider locale={currentLang.locale} messages={messages[currentLang.locale]}>\n      {children}\n    </IntlProvider>\n  );\n};\nexport default LangProvider;\n"]},"metadata":{},"sourceType":"module"}