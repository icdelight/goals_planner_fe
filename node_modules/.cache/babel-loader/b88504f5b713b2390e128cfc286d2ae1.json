{"ast":null,"code":"\"use strict\";\n\nvar React = require('react');\n\nvar OrgChart = function OrgChart(_ref) {\n  var tree = _ref.tree,\n      NodeComponent = _ref.NodeComponent;\n\n  var renderChildren = function renderChildren(node) {\n    var hasSiblingRight = function hasSiblingRight(childIndex) {\n      return (node.children || []).length > childIndex + 1;\n    };\n\n    var hasSiblingLeft = function hasSiblingLeft(childIndex) {\n      return childIndex > 0;\n    };\n\n    var nodeLineBelow = React.createElement(\"td\", {\n      colSpan: (node.children || []).length * 2,\n      className: \"nodeGroupCellLines\"\n    }, React.createElement(\"table\", {\n      className: \"nodeLineTable\"\n    }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n      colSpan: 2,\n      className: \"nodeLineCell nodeGroupLineVerticalMiddle\"\n    }), React.createElement(\"td\", {\n      colSpan: 2,\n      className: \"nodeLineCell\"\n    })))));\n    var childrenLinesAbove = (node.children || []).map(function (child, childIndex) {\n      return React.createElement(\"td\", {\n        colSpan: \"2\",\n        className: \"nodeGroupCellLines\",\n        key: childIndex\n      }, React.createElement(\"table\", {\n        className: \"nodeLineTable\"\n      }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        colSpan: 2,\n        className: \"nodeLineCell nodeGroupLineVerticalMiddle\" + (hasSiblingLeft(childIndex) ? ' nodeLineBorderTop' : '')\n      }), React.createElement(\"td\", {\n        colSpan: 2,\n        className: \"nodeLineCell\" + (hasSiblingRight(childIndex) ? \" nodeLineBorderTop\" : \"\")\n      })))));\n    });\n    var children = (node.children || []).map(function (child, childIndex) {\n      return React.createElement(\"td\", {\n        colSpan: \"2\",\n        className: \"nodeGroupCell\",\n        key: childIndex\n      }, renderChildren(child));\n    });\n    return React.createElement(\"table\", {\n      className: \"orgNodeChildGroup\"\n    }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n      className: \"nodeCell\",\n      colSpan: (node.children || []).length * 2\n    }, React.createElement(NodeComponent, {\n      node: node\n    }))), React.createElement(\"tr\", null, (node.children || []).length > 0 && nodeLineBelow), React.createElement(\"tr\", null, childrenLinesAbove), React.createElement(\"tr\", null, children)));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"reactOrgChart\"\n  }, renderChildren(tree));\n};\n\nmodule.exports = OrgChart;","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/goals_planner_fe/goals_planner_fe/node_modules/react-orgchart/index.js"],"names":["React","require","OrgChart","_ref","tree","NodeComponent","renderChildren","node","hasSiblingRight","childIndex","children","length","hasSiblingLeft","nodeLineBelow","createElement","colSpan","className","childrenLinesAbove","map","child","key","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,aAAa,GAAGF,IAAI,CAACE,aADzB;;AAIA,MAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAEjD,QAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,UAAzB,EAAqC;AACzD,aAAO,CAACF,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBC,MAAtB,GAA+BF,UAAU,GAAG,CAAnD;AACD,KAFD;;AAIA,QAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBH,UAAxB,EAAoC;AACvD,aAAOA,UAAU,GAAG,CAApB;AACD,KAFD;;AAIA,QAAII,aAAa,GAAGb,KAAK,CAACc,aAAN,CAClB,IADkB,EAElB;AAAEC,MAAAA,OAAO,EAAE,CAACR,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBC,MAAtB,GAA+B,CAA1C;AAA6CK,MAAAA,SAAS,EAAE;AAAxD,KAFkB,EAGlBhB,KAAK,CAACc,aAAN,CACE,OADF,EAEE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAFF,EAGEhB,KAAK,CAACc,aAAN,CACE,OADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CAAoB,IAApB,EAA0B;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB,KAA1B,CAHF,EAIEhB,KAAK,CAACc,aAAN,CAAoB,IAApB,EAA0B;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB,KAA1B,CAJF,CAHF,CAHF,CAHkB,CAApB;AAmBA,QAAIC,kBAAkB,GAAG,CAACV,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBQ,GAAtB,CAA0B,UAAUC,KAAV,EAAiBV,UAAjB,EAA6B;AAC9E,aAAOT,KAAK,CAACc,aAAN,CACL,IADK,EAEL;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,SAAS,EAAE,oBAA3B;AAAiDI,QAAAA,GAAG,EAAEX;AAAtD,OAFK,EAGLT,KAAK,CAACc,aAAN,CACE,OADF,EAEE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAFF,EAGEhB,KAAK,CAACc,aAAN,CACE,OADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CAAoB,IAApB,EAA0B;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,SAAS,EAAE,8CAA8CJ,cAAc,CAACH,UAAD,CAAd,GAA6B,oBAA7B,GAAoD,EAAlG;AAAzB,OAA1B,CAHF,EAIET,KAAK,CAACc,aAAN,CAAoB,IAApB,EAA0B;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,SAAS,EAAE,kBAAkBR,eAAe,CAACC,UAAD,CAAf,GAA8B,oBAA9B,GAAqD,EAAvE;AAAzB,OAA1B,CAJF,CAHF,CAHF,CAHK,CAAP;AAkBD,KAnBwB,CAAzB;AAqBA,QAAIC,QAAQ,GAAG,CAACH,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBQ,GAAtB,CAA0B,UAAUC,KAAV,EAAiBV,UAAjB,EAA6B;AACpE,aAAOT,KAAK,CAACc,aAAN,CACL,IADK,EAEL;AAAEC,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,SAAS,EAAE,eAA3B;AAA4CI,QAAAA,GAAG,EAAEX;AAAjD,OAFK,EAGLH,cAAc,CAACa,KAAD,CAHT,CAAP;AAKD,KANc,CAAf;AAQA,WAAOnB,KAAK,CAACc,aAAN,CACL,OADK,EAEL;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGLhB,KAAK,CAACc,aAAN,CACE,OADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGEd,KAAK,CAACc,aAAN,CACE,IADF,EAEE;AAAEE,MAAAA,SAAS,EAAE,UAAb;AAAyBD,MAAAA,OAAO,EAAE,CAACR,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBC,MAAtB,GAA+B;AAAjE,KAFF,EAGEX,KAAK,CAACc,aAAN,CAAoBT,aAApB,EAAmC;AAAEE,MAAAA,IAAI,EAAEA;AAAR,KAAnC,CAHF,CAHF,CAHF,EAYEP,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGE,CAACP,IAAI,CAACG,QAAL,IAAiB,EAAlB,EAAsBC,MAAtB,GAA+B,CAA/B,IAAoCE,aAHtC,CAZF,EAiBEb,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGEG,kBAHF,CAjBF,EAsBEjB,KAAK,CAACc,aAAN,CACE,IADF,EAEE,IAFF,EAGEJ,QAHF,CAtBF,CAHK,CAAP;AAgCD,GA1FD;;AA4FA,SAAOV,KAAK,CAACc,aAAN,CACL,KADK,EAEL;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAFK,EAGLV,cAAc,CAACF,IAAD,CAHT,CAAP;AAKD,CAtGD;;AAwGAiB,MAAM,CAACC,OAAP,GAAiBpB,QAAjB","sourcesContent":["\"use strict\";\n\nvar React = require('react');\n\nvar OrgChart = function OrgChart(_ref) {\n  var tree = _ref.tree,\n      NodeComponent = _ref.NodeComponent;\n\n\n  var renderChildren = function renderChildren(node) {\n\n    var hasSiblingRight = function hasSiblingRight(childIndex) {\n      return (node.children || []).length > childIndex + 1;\n    };\n\n    var hasSiblingLeft = function hasSiblingLeft(childIndex) {\n      return childIndex > 0;\n    };\n\n    var nodeLineBelow = React.createElement(\n      \"td\",\n      { colSpan: (node.children || []).length * 2, className: \"nodeGroupCellLines\" },\n      React.createElement(\n        \"table\",\n        { className: \"nodeLineTable\" },\n        React.createElement(\n          \"tbody\",\n          null,\n          React.createElement(\n            \"tr\",\n            null,\n            React.createElement(\"td\", { colSpan: 2, className: \"nodeLineCell nodeGroupLineVerticalMiddle\" }),\n            React.createElement(\"td\", { colSpan: 2, className: \"nodeLineCell\" })\n          )\n        )\n      )\n    );\n\n    var childrenLinesAbove = (node.children || []).map(function (child, childIndex) {\n      return React.createElement(\n        \"td\",\n        { colSpan: \"2\", className: \"nodeGroupCellLines\", key: childIndex },\n        React.createElement(\n          \"table\",\n          { className: \"nodeLineTable\" },\n          React.createElement(\n            \"tbody\",\n            null,\n            React.createElement(\n              \"tr\",\n              null,\n              React.createElement(\"td\", { colSpan: 2, className: \"nodeLineCell nodeGroupLineVerticalMiddle\" + (hasSiblingLeft(childIndex) ? ' nodeLineBorderTop' : '') }),\n              React.createElement(\"td\", { colSpan: 2, className: \"nodeLineCell\" + (hasSiblingRight(childIndex) ? \" nodeLineBorderTop\" : \"\") })\n            )\n          )\n        )\n      );\n    });\n\n    var children = (node.children || []).map(function (child, childIndex) {\n      return React.createElement(\n        \"td\",\n        { colSpan: \"2\", className: \"nodeGroupCell\", key: childIndex },\n        renderChildren(child)\n      );\n    });\n\n    return React.createElement(\n      \"table\",\n      { className: \"orgNodeChildGroup\" },\n      React.createElement(\n        \"tbody\",\n        null,\n        React.createElement(\n          \"tr\",\n          null,\n          React.createElement(\n            \"td\",\n            { className: \"nodeCell\", colSpan: (node.children || []).length * 2 },\n            React.createElement(NodeComponent, { node: node })\n          )\n        ),\n        React.createElement(\n          \"tr\",\n          null,\n          (node.children || []).length > 0 && nodeLineBelow\n        ),\n        React.createElement(\n          \"tr\",\n          null,\n          childrenLinesAbove\n        ),\n        React.createElement(\n          \"tr\",\n          null,\n          children\n        )\n      )\n    );\n  };\n\n  return React.createElement(\n    \"div\",\n    { className: \"reactOrgChart\" },\n    renderChildren(tree)\n  );\n};\n\nmodule.exports = OrgChart;"]},"metadata":{},"sourceType":"script"}