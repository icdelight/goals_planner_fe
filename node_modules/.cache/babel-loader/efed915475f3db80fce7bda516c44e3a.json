{"ast":null,"code":"import { SERVICE_URL } from 'config';\nimport api from '../api';\nconst datatableData = [{\n  id: 1,\n  name: 'Anadama',\n  sales: '675',\n  stock: '115',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 2,\n  name: 'Anpan',\n  sales: '1395',\n  stock: '208',\n  category: 'Sourdough',\n  tag: 'Done'\n}, {\n  id: 3,\n  name: 'Bagel',\n  sales: '1436',\n  stock: '180',\n  category: 'Whole Wheat',\n  tag: 'Sale'\n}, {\n  id: 4,\n  name: 'Bammy',\n  sales: '512',\n  stock: '57',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 5,\n  name: 'Bara Brith',\n  sales: '1485',\n  stock: '150',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 6,\n  name: 'Barmbrack',\n  sales: '985',\n  stock: '68',\n  category: 'Whole Wheat',\n  tag: 'Done'\n}, {\n  id: 7,\n  name: 'Bazin',\n  sales: '1279',\n  stock: '247',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 8,\n  name: 'Bialy',\n  sales: '653',\n  stock: '249',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 9,\n  name: 'Biscotti',\n  sales: '904',\n  stock: '77',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 10,\n  name: 'Blaa',\n  sales: '1224',\n  stock: '51',\n  category: 'Sourdough',\n  tag: 'New'\n}, {\n  id: 11,\n  name: 'Boule',\n  sales: '1007',\n  stock: '162',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 12,\n  name: 'Česnica',\n  sales: '967',\n  stock: '166',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 13,\n  name: 'Cholermüs',\n  sales: '1244',\n  stock: '83',\n  category: 'Whole Wheat',\n  tag: 'Sale'\n}, {\n  id: 14,\n  name: 'Cornbread',\n  sales: '2524',\n  stock: '214',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 15,\n  name: 'Crisp Bread',\n  sales: '1398',\n  stock: '75',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 16,\n  name: 'Crumpet',\n  sales: '1049',\n  stock: '103',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 17,\n  name: 'Damper',\n  sales: '779',\n  stock: '195',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 18,\n  name: 'Dorayaki',\n  sales: '1106',\n  stock: '69',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 19,\n  name: 'Farl',\n  sales: '958',\n  stock: '170',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 20,\n  name: 'Flatbrød',\n  sales: '377',\n  stock: '114',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 21,\n  name: 'Fougasse',\n  sales: '2920',\n  stock: '136',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 22,\n  name: 'Himbasha',\n  sales: '1112',\n  stock: '305',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 23,\n  name: 'Kalach',\n  sales: '401',\n  stock: '38',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 24,\n  name: 'Kifli',\n  sales: '291',\n  stock: '130',\n  category: 'Multigrain',\n  tag: 'Sale'\n}, {\n  id: 25,\n  name: 'Kulcha',\n  sales: '545',\n  stock: '180',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 26,\n  name: 'Lángos',\n  sales: '2253',\n  stock: '224',\n  category: 'Whole Wheat',\n  tag: 'Done'\n}, {\n  id: 27,\n  name: 'Lefse',\n  sales: '934',\n  stock: '52',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 28,\n  name: 'Mantou',\n  sales: '592',\n  stock: '276',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 29,\n  name: 'Matzo',\n  sales: '203',\n  stock: '191',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 30,\n  name: 'Melonpan',\n  sales: '693',\n  stock: '146',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 31,\n  name: 'Michetta',\n  sales: '863',\n  stock: '92',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 32,\n  name: 'Mohnflesserl',\n  sales: '555',\n  stock: '111',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 33,\n  name: 'Naan',\n  sales: '994',\n  stock: '21',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 34,\n  name: 'Pan Dulce',\n  sales: '2061',\n  stock: '224',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 35,\n  name: 'Panbrioche',\n  sales: '1410',\n  stock: '77',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 36,\n  name: 'Pane Ticinese',\n  sales: '1323',\n  stock: '39',\n  category: 'Whole Wheat',\n  tag: 'New'\n}, {\n  id: 37,\n  name: 'Panettone',\n  sales: '219',\n  stock: '291',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 38,\n  name: 'Paratha',\n  sales: '304',\n  stock: '232',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 39,\n  name: 'Peg Bread',\n  sales: '416',\n  stock: '65',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 40,\n  name: 'Piadina',\n  sales: '1051',\n  stock: '98',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 41,\n  name: 'Pistolet',\n  sales: '1323',\n  stock: '23',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 42,\n  name: 'Qistibi',\n  sales: '386',\n  stock: '104',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 43,\n  name: 'Rewena',\n  sales: '2383',\n  stock: '309',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 44,\n  name: 'Rice Bread',\n  sales: '1279',\n  stock: '266',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 45,\n  name: 'Rieska',\n  sales: '1323',\n  stock: '23',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 46,\n  name: 'Roti',\n  sales: '853',\n  stock: '60',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 47,\n  name: 'Rugbrød',\n  sales: '771',\n  stock: '114',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 48,\n  name: 'Rye Bread',\n  sales: '603',\n  stock: '171',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 49,\n  name: 'Saj Bread',\n  sales: '1224',\n  stock: '49',\n  category: 'Whole Wheat',\n  tag: 'New'\n}, {\n  id: 50,\n  name: 'Samoon',\n  sales: '853',\n  stock: '294',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 51,\n  name: 'Shirmal',\n  sales: '304',\n  stock: '23',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 52,\n  name: 'Spelt Bread',\n  sales: '2524',\n  stock: '271',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 53,\n  name: 'Teacake',\n  sales: '757',\n  stock: '85',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 54,\n  name: 'Tiger Bread',\n  sales: '934',\n  stock: '49',\n  category: 'Whole Wheat',\n  tag: 'New'\n}, {\n  id: 55,\n  name: 'Tunnbröd',\n  sales: '1724',\n  stock: '41',\n  category: 'Multigrain',\n  tag: ''\n}, {\n  id: 56,\n  name: 'Vánočka',\n  sales: '1801',\n  stock: '173',\n  category: 'Whole Wheat',\n  tag: 'Done'\n}, {\n  id: 57,\n  name: 'Vienna Bread',\n  sales: '2668',\n  stock: '240',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 58,\n  name: 'Yufka',\n  sales: '917',\n  stock: '126',\n  category: 'Sourdough',\n  tag: ''\n}, {\n  id: 59,\n  name: 'Zopf',\n  sales: '750',\n  stock: '119',\n  category: 'Whole Wheat',\n  tag: ''\n}, {\n  id: 60,\n  name: 'Zwieback',\n  sales: '686',\n  stock: '64',\n  category: 'Whole Wheat',\n  tag: ''\n}];\napi.onGet(`${SERVICE_URL}/datatable`).reply(config => {\n  const {\n    term,\n    sortBy,\n    pageSize,\n    pageIndex\n  } = config.params;\n  let dataList = [...datatableData];\n\n  if (term && term.length > 1) {\n    dataList = datatableData.filter(data => data.name.toLowerCase().includes(term.toLowerCase()) || data.tag.toLowerCase().includes(term.toLowerCase()) || data.sales.toLowerCase().includes(term.toLowerCase()) || data.stock.toLowerCase().includes(term.toLowerCase()) || data.category.toLowerCase().includes(term.toLowerCase()));\n  }\n\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: []\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n  return [200, { ...data\n  }];\n});\napi.onPost(`${SERVICE_URL}/datatable`).reply(config => {\n  const requestData = JSON.parse(config.data);\n  const {\n    item,\n    sortBy,\n    pageSize,\n    pageIndex\n  } = requestData;\n  const dataList = [...datatableData]; // Add item\n\n  dataList.push({ ...item,\n    id: dataList.length + 1\n  });\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: []\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n  return [200, { ...data\n  }];\n});\napi.onPut(`${SERVICE_URL}/datatable`).reply(config => {\n  const requestData = JSON.parse(config.data);\n  const {\n    item,\n    sortBy,\n    pageSize,\n    pageIndex\n  } = requestData;\n  let dataList = [...datatableData]; // Update item\n\n  dataList = dataList.map(x => x.id === item.id ? item : x);\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: []\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n  return [200, { ...data\n  }];\n});\napi.onDelete(`${SERVICE_URL}/datatable`).reply(config => {\n  const {\n    ids,\n    sortBy,\n    pageSize,\n    pageIndex\n  } = config;\n  let dataList = [...datatableData]; // Delete item\n\n  dataList = dataList.filter(x => !ids.includes(x.id));\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: []\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n  return [200, { ...data\n  }];\n});","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/@mock-api/data/datatable.js"],"names":["SERVICE_URL","api","datatableData","id","name","sales","stock","category","tag","onGet","reply","config","term","sortBy","pageSize","pageIndex","params","dataList","length","filter","data","toLowerCase","includes","pageCount","Math","ceil","items","Array","isArray","sort","a","b","i","desc","startRow","endRow","slice","onPost","requestData","JSON","parse","item","push","onPut","map","x","onDelete","ids"],"mappings":"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","sourcesContent":["import { SERVICE_URL } from 'config';\nimport api from '../api';\n\nconst datatableData = [\n  { id: 1, name: 'Anadama', sales: '675', stock: '115', category: 'Whole Wheat', tag: '' },\n  { id: 2, name: 'Anpan', sales: '1395', stock: '208', category: 'Sourdough', tag: 'Done' },\n  { id: 3, name: 'Bagel', sales: '1436', stock: '180', category: 'Whole Wheat', tag: 'Sale' },\n  { id: 4, name: 'Bammy', sales: '512', stock: '57', category: 'Multigrain', tag: '' },\n  { id: 5, name: 'Bara Brith', sales: '1485', stock: '150', category: 'Multigrain', tag: '' },\n  { id: 6, name: 'Barmbrack', sales: '985', stock: '68', category: 'Whole Wheat', tag: 'Done' },\n  { id: 7, name: 'Bazin', sales: '1279', stock: '247', category: 'Sourdough', tag: '' },\n  { id: 8, name: 'Bialy', sales: '653', stock: '249', category: 'Multigrain', tag: '' },\n  { id: 9, name: 'Biscotti', sales: '904', stock: '77', category: 'Whole Wheat', tag: '' },\n  { id: 10, name: 'Blaa', sales: '1224', stock: '51', category: 'Sourdough', tag: 'New' },\n  { id: 11, name: 'Boule', sales: '1007', stock: '162', category: 'Sourdough', tag: '' },\n  { id: 12, name: 'Česnica', sales: '967', stock: '166', category: 'Multigrain', tag: '' },\n  { id: 13, name: 'Cholermüs', sales: '1244', stock: '83', category: 'Whole Wheat', tag: 'Sale' },\n  { id: 14, name: 'Cornbread', sales: '2524', stock: '214', category: 'Sourdough', tag: '' },\n  { id: 15, name: 'Crisp Bread', sales: '1398', stock: '75', category: 'Whole Wheat', tag: '' },\n  { id: 16, name: 'Crumpet', sales: '1049', stock: '103', category: 'Sourdough', tag: '' },\n  { id: 17, name: 'Damper', sales: '779', stock: '195', category: 'Multigrain', tag: '' },\n  { id: 18, name: 'Dorayaki', sales: '1106', stock: '69', category: 'Whole Wheat', tag: '' },\n  { id: 19, name: 'Farl', sales: '958', stock: '170', category: 'Multigrain', tag: '' },\n  { id: 20, name: 'Flatbrød', sales: '377', stock: '114', category: 'Sourdough', tag: '' },\n  { id: 21, name: 'Fougasse', sales: '2920', stock: '136', category: 'Sourdough', tag: '' },\n  { id: 22, name: 'Himbasha', sales: '1112', stock: '305', category: 'Multigrain', tag: '' },\n  { id: 23, name: 'Kalach', sales: '401', stock: '38', category: 'Sourdough', tag: '' },\n  { id: 24, name: 'Kifli', sales: '291', stock: '130', category: 'Multigrain', tag: 'Sale' },\n  { id: 25, name: 'Kulcha', sales: '545', stock: '180', category: 'Whole Wheat', tag: '' },\n  { id: 26, name: 'Lángos', sales: '2253', stock: '224', category: 'Whole Wheat', tag: 'Done' },\n  { id: 27, name: 'Lefse', sales: '934', stock: '52', category: 'Sourdough', tag: '' },\n  { id: 28, name: 'Mantou', sales: '592', stock: '276', category: 'Multigrain', tag: '' },\n  { id: 29, name: 'Matzo', sales: '203', stock: '191', category: 'Sourdough', tag: '' },\n  { id: 30, name: 'Melonpan', sales: '693', stock: '146', category: 'Sourdough', tag: '' },\n  { id: 31, name: 'Michetta', sales: '863', stock: '92', category: 'Whole Wheat', tag: '' },\n  { id: 32, name: 'Mohnflesserl', sales: '555', stock: '111', category: 'Whole Wheat', tag: '' },\n  { id: 33, name: 'Naan', sales: '994', stock: '21', category: 'Multigrain', tag: '' },\n  { id: 34, name: 'Pan Dulce', sales: '2061', stock: '224', category: 'Sourdough', tag: '' },\n  { id: 35, name: 'Panbrioche', sales: '1410', stock: '77', category: 'Multigrain', tag: '' },\n  { id: 36, name: 'Pane Ticinese', sales: '1323', stock: '39', category: 'Whole Wheat', tag: 'New' },\n  { id: 37, name: 'Panettone', sales: '219', stock: '291', category: 'Multigrain', tag: '' },\n  { id: 38, name: 'Paratha', sales: '304', stock: '232', category: 'Sourdough', tag: '' },\n  { id: 39, name: 'Peg Bread', sales: '416', stock: '65', category: 'Multigrain', tag: '' },\n  { id: 40, name: 'Piadina', sales: '1051', stock: '98', category: 'Whole Wheat', tag: '' },\n  { id: 41, name: 'Pistolet', sales: '1323', stock: '23', category: 'Multigrain', tag: '' },\n  { id: 42, name: 'Qistibi', sales: '386', stock: '104', category: 'Whole Wheat', tag: '' },\n  { id: 43, name: 'Rewena', sales: '2383', stock: '309', category: 'Multigrain', tag: '' },\n  { id: 44, name: 'Rice Bread', sales: '1279', stock: '266', category: 'Sourdough', tag: '' },\n  { id: 45, name: 'Rieska', sales: '1323', stock: '23', category: 'Sourdough', tag: '' },\n  { id: 46, name: 'Roti', sales: '853', stock: '60', category: 'Whole Wheat', tag: '' },\n  { id: 47, name: 'Rugbrød', sales: '771', stock: '114', category: 'Multigrain', tag: '' },\n  { id: 48, name: 'Rye Bread', sales: '603', stock: '171', category: 'Sourdough', tag: '' },\n  { id: 49, name: 'Saj Bread', sales: '1224', stock: '49', category: 'Whole Wheat', tag: 'New' },\n  { id: 50, name: 'Samoon', sales: '853', stock: '294', category: 'Multigrain', tag: '' },\n  { id: 51, name: 'Shirmal', sales: '304', stock: '23', category: 'Sourdough', tag: '' },\n  { id: 52, name: 'Spelt Bread', sales: '2524', stock: '271', category: 'Sourdough', tag: '' },\n  { id: 53, name: 'Teacake', sales: '757', stock: '85', category: 'Multigrain', tag: '' },\n  { id: 54, name: 'Tiger Bread', sales: '934', stock: '49', category: 'Whole Wheat', tag: 'New' },\n  { id: 55, name: 'Tunnbröd', sales: '1724', stock: '41', category: 'Multigrain', tag: '' },\n  { id: 56, name: 'Vánočka', sales: '1801', stock: '173', category: 'Whole Wheat', tag: 'Done' },\n  { id: 57, name: 'Vienna Bread', sales: '2668', stock: '240', category: 'Sourdough', tag: '' },\n  { id: 58, name: 'Yufka', sales: '917', stock: '126', category: 'Sourdough', tag: '' },\n  { id: 59, name: 'Zopf', sales: '750', stock: '119', category: 'Whole Wheat', tag: '' },\n  { id: 60, name: 'Zwieback', sales: '686', stock: '64', category: 'Whole Wheat', tag: '' },\n];\n\napi.onGet(`${SERVICE_URL}/datatable`).reply((config) => {\n  const { term, sortBy, pageSize, pageIndex } = config.params;\n\n  let dataList = [...datatableData];\n\n  if (term && term.length > 1) {\n    dataList = datatableData.filter(\n      (data) =>\n        data.name.toLowerCase().includes(term.toLowerCase()) ||\n        data.tag.toLowerCase().includes(term.toLowerCase()) ||\n        data.sales.toLowerCase().includes(term.toLowerCase()) ||\n        data.stock.toLowerCase().includes(term.toLowerCase()) ||\n        data.category.toLowerCase().includes(term.toLowerCase())\n    );\n  }\n\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: [],\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n\n  return [200, { ...data }];\n});\napi.onPost(`${SERVICE_URL}/datatable`).reply((config) => {\n  const requestData = JSON.parse(config.data);\n  const { item, sortBy, pageSize, pageIndex } = requestData;\n\n  const dataList = [...datatableData];\n  // Add item\n  dataList.push({ ...item, id: dataList.length + 1 });\n\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: [],\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n\n  return [200, { ...data }];\n});\napi.onPut(`${SERVICE_URL}/datatable`).reply((config) => {\n  const requestData = JSON.parse(config.data);\n  const { item, sortBy, pageSize, pageIndex } = requestData;\n  let dataList = [...datatableData];\n  // Update item\n  dataList = dataList.map((x) => (x.id === item.id ? item : x));\n\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: [],\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n\n  return [200, { ...data }];\n});\napi.onDelete(`${SERVICE_URL}/datatable`).reply((config) => {\n  const { ids, sortBy, pageSize, pageIndex } = config;\n\n  let dataList = [...datatableData];\n  // Delete item\n  dataList = dataList.filter((x) => !ids.includes(x.id));\n\n  const data = {\n    pageSize,\n    pageIndex,\n    pageCount: Math.ceil(dataList.length / pageSize),\n    items: [],\n  };\n\n  if (Array.isArray(sortBy) && sortBy.length === 1) {\n    dataList.sort((a, b) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < sortBy.length; ++i) {\n        if (a[sortBy[i].id] > b[sortBy[i].id]) return sortBy[i].desc ? -1 : 1;\n        if (a[sortBy[i].id] < b[sortBy[i].id]) return sortBy[i].desc ? 1 : -1;\n      }\n      return 0;\n    });\n  }\n  const startRow = pageSize * pageIndex;\n  const endRow = startRow + pageSize;\n  data.items = dataList.slice(startRow, endRow);\n\n  return [200, { ...data }];\n});\n"]},"metadata":{},"sourceType":"module"}