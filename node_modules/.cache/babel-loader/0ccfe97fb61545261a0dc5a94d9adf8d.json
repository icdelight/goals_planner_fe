{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { DEFAULT_SETTINGS } from 'config.js';\n\nconst getComputedValues = () => {\n  const rootStyle = window.getComputedStyle(document.body);\n  return {\n    primary: rootStyle.getPropertyValue('--primary').trim(),\n    secondary: rootStyle.getPropertyValue('--secondary').trim(),\n    tertiary: rootStyle.getPropertyValue('--tertiary').trim(),\n    quaternary: rootStyle.getPropertyValue('--quaternary').trim(),\n    body: rootStyle.getPropertyValue('--body').trim(),\n    alternate: rootStyle.getPropertyValue('--alternate').trim(),\n    lightText: rootStyle.getPropertyValue('--light-text').trim(),\n    warning: rootStyle.getPropertyValue('--warning').trim(),\n    danger: rootStyle.getPropertyValue('--danger').trim(),\n    success: rootStyle.getPropertyValue('--success').trim(),\n    info: rootStyle.getPropertyValue('--info').trim(),\n    font: rootStyle.getPropertyValue('--font').trim(),\n    fontHeading: rootStyle.getPropertyValue('--font-heading').trim(),\n    background: rootStyle.getPropertyValue('--background').trim(),\n    foreground: rootStyle.getPropertyValue('--foreground').trim(),\n    separator: rootStyle.getPropertyValue('--separator').trim(),\n    separatorLight: rootStyle.getPropertyValue('--separator-light').trim(),\n    primaryrgb: rootStyle.getPropertyValue('--primary-rgb').trim(),\n    secondaryrgb: rootStyle.getPropertyValue('--secondary-rgb').trim(),\n    tertiaryrgb: rootStyle.getPropertyValue('--tertiary-rgb').trim(),\n    quaternaryrgb: rootStyle.getPropertyValue('--quaternary-rgb').trim(),\n    transitionTimeShort: rootStyle.getPropertyValue('--transition-time-short').trim().replace('ms', ''),\n    transitionTime: rootStyle.getPropertyValue('--transition-time').trim().replace('ms', ''),\n    navSizeSlim: rootStyle.getPropertyValue('--nav-size-slim').trim(),\n    borderRadiusXl: rootStyle.getPropertyValue('--border-radius-xl').trim(),\n    borderRadiusLg: rootStyle.getPropertyValue('--border-radius-lg').trim(),\n    borderRadiusMd: rootStyle.getPropertyValue('--border-radius-md').trim(),\n    borderRadiusSm: rootStyle.getPropertyValue('--border-radius-sm').trim(),\n    spacingHorizontal: rootStyle.getPropertyValue('--main-spacing-horizontal').trim(),\n    sm: rootStyle.getPropertyValue('--sm').trim(),\n    md: rootStyle.getPropertyValue('--md').trim(),\n    lg: rootStyle.getPropertyValue('--lg').trim(),\n    xl: rootStyle.getPropertyValue('--xl').trim(),\n    xxl: rootStyle.getPropertyValue('--xxl').trim(),\n    direction: 'ltr'\n  };\n};\n\nconst wait = timeToDelay => new Promise(resolve => setTimeout(resolve, timeToDelay));\n\nconst initialState = {\n  color: DEFAULT_SETTINGS.COLOR,\n  layout: DEFAULT_SETTINGS.LAYOUT,\n  radius: DEFAULT_SETTINGS.RADIUS,\n  navColor: DEFAULT_SETTINGS.NAV_COLOR,\n  themeValues: getComputedValues()\n};\nconst settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    setColor(state, action) {\n      state.color = action.payload;\n    },\n\n    setThemeValues(state) {\n      state.themeValues = getComputedValues();\n    },\n\n    settingsChangeRadius(state, action) {\n      state.radius = action.payload;\n    },\n\n    settingsChangeNavColor(state, action) {\n      state.navColor = action.payload;\n    },\n\n    settingsChangeLayout(state, action) {\n      state.layout = action.payload;\n    },\n\n    settingsResetLayout(state) {\n      state.layout = DEFAULT_SETTINGS.LAYOUT;\n    }\n\n  }\n});\nexport const {\n  setColor,\n  setThemeValues\n} = settingsSlice.actions;\nexport const settingsChangeColor = color => async dispatch => {\n  dispatch(setColor(color));\n  await wait(10);\n  dispatch(setThemeValues());\n};\nexport const {\n  settingsChangeRadius,\n  settingsChangeNavColor,\n  settingsChangeLayout,\n  settingsResetLayout\n} = settingsSlice.actions;\nconst settingsReducer = settingsSlice.reducer;\nexport default settingsReducer;","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/goals_planner_fe/goals_planner_fe/src/settings/settingsSlice.js"],"names":["createSlice","DEFAULT_SETTINGS","getComputedValues","rootStyle","window","getComputedStyle","document","body","primary","getPropertyValue","trim","secondary","tertiary","quaternary","alternate","lightText","warning","danger","success","info","font","fontHeading","background","foreground","separator","separatorLight","primaryrgb","secondaryrgb","tertiaryrgb","quaternaryrgb","transitionTimeShort","replace","transitionTime","navSizeSlim","borderRadiusXl","borderRadiusLg","borderRadiusMd","borderRadiusSm","spacingHorizontal","sm","md","lg","xl","xxl","direction","wait","timeToDelay","Promise","resolve","setTimeout","initialState","color","COLOR","layout","LAYOUT","radius","RADIUS","navColor","NAV_COLOR","themeValues","settingsSlice","name","reducers","setColor","state","action","payload","setThemeValues","settingsChangeRadius","settingsChangeNavColor","settingsChangeLayout","settingsResetLayout","actions","settingsChangeColor","dispatch","settingsReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { DEFAULT_SETTINGS } from 'config.js';\n\nconst getComputedValues = () => {\n  const rootStyle = window.getComputedStyle(document.body);\n  return {\n    primary: rootStyle.getPropertyValue('--primary').trim(),\n    secondary: rootStyle.getPropertyValue('--secondary').trim(),\n    tertiary: rootStyle.getPropertyValue('--tertiary').trim(),\n    quaternary: rootStyle.getPropertyValue('--quaternary').trim(),\n    body: rootStyle.getPropertyValue('--body').trim(),\n    alternate: rootStyle.getPropertyValue('--alternate').trim(),\n    lightText: rootStyle.getPropertyValue('--light-text').trim(),\n    warning: rootStyle.getPropertyValue('--warning').trim(),\n    danger: rootStyle.getPropertyValue('--danger').trim(),\n    success: rootStyle.getPropertyValue('--success').trim(),\n    info: rootStyle.getPropertyValue('--info').trim(),\n\n    font: rootStyle.getPropertyValue('--font').trim(),\n    fontHeading: rootStyle.getPropertyValue('--font-heading').trim(),\n\n    background: rootStyle.getPropertyValue('--background').trim(),\n    foreground: rootStyle.getPropertyValue('--foreground').trim(),\n    separator: rootStyle.getPropertyValue('--separator').trim(),\n    separatorLight: rootStyle.getPropertyValue('--separator-light').trim(),\n\n    primaryrgb: rootStyle.getPropertyValue('--primary-rgb').trim(),\n    secondaryrgb: rootStyle.getPropertyValue('--secondary-rgb').trim(),\n    tertiaryrgb: rootStyle.getPropertyValue('--tertiary-rgb').trim(),\n    quaternaryrgb: rootStyle.getPropertyValue('--quaternary-rgb').trim(),\n\n    transitionTimeShort: rootStyle.getPropertyValue('--transition-time-short').trim().replace('ms', ''),\n    transitionTime: rootStyle.getPropertyValue('--transition-time').trim().replace('ms', ''),\n    navSizeSlim: rootStyle.getPropertyValue('--nav-size-slim').trim(),\n\n    borderRadiusXl: rootStyle.getPropertyValue('--border-radius-xl').trim(),\n    borderRadiusLg: rootStyle.getPropertyValue('--border-radius-lg').trim(),\n    borderRadiusMd: rootStyle.getPropertyValue('--border-radius-md').trim(),\n    borderRadiusSm: rootStyle.getPropertyValue('--border-radius-sm').trim(),\n    spacingHorizontal: rootStyle.getPropertyValue('--main-spacing-horizontal').trim(),\n\n    sm: rootStyle.getPropertyValue('--sm').trim(),\n    md: rootStyle.getPropertyValue('--md').trim(),\n    lg: rootStyle.getPropertyValue('--lg').trim(),\n    xl: rootStyle.getPropertyValue('--xl').trim(),\n    xxl: rootStyle.getPropertyValue('--xxl').trim(),\n    direction: 'ltr',\n  };\n};\nconst wait = (timeToDelay) => new Promise((resolve) => setTimeout(resolve, timeToDelay));\n\nconst initialState = {\n  color: DEFAULT_SETTINGS.COLOR,\n  layout: DEFAULT_SETTINGS.LAYOUT,\n  radius: DEFAULT_SETTINGS.RADIUS,\n  navColor: DEFAULT_SETTINGS.NAV_COLOR,\n  themeValues: getComputedValues(),\n};\n\nconst settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    setColor(state, action) {\n      state.color = action.payload;\n    },\n    setThemeValues(state) {\n      state.themeValues = getComputedValues();\n    },\n    settingsChangeRadius(state, action) {\n      state.radius = action.payload;\n    },\n    settingsChangeNavColor(state, action) {\n      state.navColor = action.payload;\n    },\n    settingsChangeLayout(state, action) {\n      state.layout = action.payload;\n    },\n    settingsResetLayout(state) {\n      state.layout = DEFAULT_SETTINGS.LAYOUT;\n    },\n  },\n});\nexport const { setColor, setThemeValues } = settingsSlice.actions;\n\nexport const settingsChangeColor = (color) => async (dispatch) => {\n  dispatch(setColor(color));\n  await wait(10);\n  dispatch(setThemeValues());\n};\nexport const { settingsChangeRadius, settingsChangeNavColor, settingsChangeLayout, settingsResetLayout } = settingsSlice.actions;\nconst settingsReducer = settingsSlice.reducer;\n\nexport default settingsReducer;\n"]},"metadata":{},"sourceType":"module"}