{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const languages = [{\n  code: 'EN',\n  locale: 'en-US',\n  direction: 'ltr'\n}, {\n  code: 'ES',\n  locale: 'es-ES',\n  direction: 'ltr'\n}, {\n  code: 'DE',\n  locale: 'de-DE',\n  direction: 'ltr'\n}];\nconst navigatorLang = navigator.languages && navigator.languages[0] || navigator.language || navigator.userLanguage;\n\nconst findOrDefault = key => {\n  return languages.find(x => x.locale === key || x.code === key) || languages[0];\n};\n\nconst initialState = {\n  languages,\n  currentLang: findOrDefault(navigatorLang)\n};\nconst langSlice = createSlice({\n  name: 'lang',\n  initialState,\n  reducers: {\n    changeLang(state, action) {\n      state.currentLang = findOrDefault(action.payload);\n    }\n\n  }\n});\nexport const {\n  changeLang\n} = langSlice.actions;\nconst langReducer = langSlice.reducer;\nexport default langReducer;","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/lang/langSlice.js"],"names":["createSlice","languages","code","locale","direction","navigatorLang","navigator","language","userLanguage","findOrDefault","key","find","x","initialState","currentLang","langSlice","name","reducers","changeLang","state","action","payload","actions","langReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,CACvB;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,MAAM,EAAE,OAAtB;AAA+BC,EAAAA,SAAS,EAAE;AAA1C,CADuB,EAEvB;AAAEF,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,MAAM,EAAE,OAAtB;AAA+BC,EAAAA,SAAS,EAAE;AAA1C,CAFuB,EAGvB;AAAEF,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,MAAM,EAAE,OAAtB;AAA+BC,EAAAA,SAAS,EAAE;AAA1C,CAHuB,CAAlB;AAKP,MAAMC,aAAa,GAAIC,SAAS,CAACL,SAAV,IAAuBK,SAAS,CAACL,SAAV,CAAoB,CAApB,CAAxB,IAAmDK,SAAS,CAACC,QAA7D,IAAyED,SAAS,CAACE,YAAzG;;AAEA,MAAMC,aAAa,GAAIC,GAAD,IAAS;AAC7B,SAAOT,SAAS,CAACU,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACT,MAAF,KAAaO,GAAb,IAAoBE,CAAC,CAACV,IAAF,KAAWQ,GAArD,KAA6DT,SAAS,CAAC,CAAD,CAA7E;AACD,CAFD;;AAIA,MAAMY,YAAY,GAAG;AACnBZ,EAAAA,SADmB;AAEnBa,EAAAA,WAAW,EAAEL,aAAa,CAACJ,aAAD;AAFP,CAArB;AAKA,MAAMU,SAAS,GAAGf,WAAW,CAAC;AAC5BgB,EAAAA,IAAI,EAAE,MADsB;AAE5BH,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACL,WAAN,GAAoBL,aAAa,CAACW,MAAM,CAACC,OAAR,CAAjC;AACD;;AAHO;AAHkB,CAAD,CAA7B;AASA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBH,SAAS,CAACO,OAAjC;AACP,MAAMC,WAAW,GAAGR,SAAS,CAACS,OAA9B;AAEA,eAAeD,WAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const languages = [\n  { code: 'EN', locale: 'en-US', direction: 'ltr' },\n  { code: 'ES', locale: 'es-ES', direction: 'ltr' },\n  { code: 'DE', locale: 'de-DE', direction: 'ltr' },\n];\nconst navigatorLang = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\n\nconst findOrDefault = (key) => {\n  return languages.find((x) => x.locale === key || x.code === key) || languages[0];\n};\n\nconst initialState = {\n  languages,\n  currentLang: findOrDefault(navigatorLang),\n};\n\nconst langSlice = createSlice({\n  name: 'lang',\n  initialState,\n  reducers: {\n    changeLang(state, action) {\n      state.currentLang = findOrDefault(action.payload);\n    },\n  },\n});\nexport const { changeLang } = langSlice.actions;\nconst langReducer = langSlice.reducer;\n\nexport default langReducer;\n"]},"metadata":{},"sourceType":"module"}