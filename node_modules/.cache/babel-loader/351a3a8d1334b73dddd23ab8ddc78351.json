{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/index.js\",\n    _s = $RefreshSig$();\n\n// cra imports\nimport React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from 'reportWebVitals.js'; // import redux requirements\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\nimport { store, persistedStore } from 'store.js'; // import html head tags requirements\n\nimport { Helmet } from 'react-helmet';\nimport { REACT_HELMET_PROPS } from 'config.js'; // import multi language\n\nimport LangProvider from 'lang/LangProvider'; // import routing modules\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteIdentifier from 'routing/components/RouteIdentifier';\nimport Loading from 'components/loading/Loading'; // import routes\n\nimport { getLayoutlessRoutes } from 'routing/helper';\nimport defaultRoutes from 'routing/default-routes';\nimport routesAndMenuItems from 'routes.js'; // import toastify for notification\n\nimport { Slide, ToastContainer } from 'react-toastify'; // mock server register for demo\n\nimport '@mock-api';\nimport 'react-sortable-tree/style.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const layoutlessRoutes = useMemo(() => getLayoutlessRoutes({\n    data: routesAndMenuItems\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistedStore,\n      children: [/*#__PURE__*/_jsxDEV(Helmet, { ...REACT_HELMET_PROPS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        transition: Slide,\n        newestOnTop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        basename: process.env.REACT_APP_BASENAME,\n        children: /*#__PURE__*/_jsxDEV(LangProvider, {\n          children: /*#__PURE__*/_jsxDEV(RouteIdentifier, {\n            routes: [...layoutlessRoutes, ...defaultRoutes],\n            fallback: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"UnRd21ZmbcMj3AKK8ZwrHExnSqE=\");\n\n_c = Main;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n/*\n * If you want to start measuring performance in your app, pass a function\n * to log results (for example: reportWebVitals(console.log))\n * or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n */\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/index.js"],"names":["React","useMemo","ReactDOM","reportWebVitals","Provider","PersistGate","store","persistedStore","Helmet","REACT_HELMET_PROPS","LangProvider","BrowserRouter","Router","RouteIdentifier","Loading","getLayoutlessRoutes","defaultRoutes","routesAndMenuItems","Slide","ToastContainer","Main","layoutlessRoutes","data","process","env","REACT_APP_BASENAME","render","document","getElementById"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,2CAA5B;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,UAAtC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,kBAAT,QAAmC,WAAnC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,mBAAzB,C,CAEA;;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,OAAP,MAAoB,4BAApB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,kBAAP,MAA+B,WAA/B,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC,C,CAEA;;AACA,OAAO,WAAP;AAEA,OAAO,+BAAP;AACA,OAAO,uCAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,gBAAgB,GAAGpB,OAAO,CAAC,MAAMc,mBAAmB,CAAC;AAAEO,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAA1B,EAA0D,EAA1D,CAAhC;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEX,KAAjB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,SAAS,EAAEC,cAAvC;AAAA,8BACE,QAAC,MAAD,OAAYE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAES,KAA5B;AAAmC,QAAA,WAAW;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEK,OAAO,CAACC,GAAR,CAAYC,kBAA9B;AAAA,+BACE,QAAC,YAAD;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,MAAM,EAAE,CAAC,GAAGJ,gBAAJ,EAAsB,GAAGL,aAAzB,CAAzB;AAAkE,YAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;GAAMI,I;;KAAAA,I;AAiBNlB,QAAQ,CAACwB,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B;AAEA;AACA;AACA;AACA;AACA;;AACAzB,eAAe","sourcesContent":["// cra imports\nimport React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from 'reportWebVitals.js';\n\n// import redux requirements\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\nimport { store, persistedStore } from 'store.js';\n\n// import html head tags requirements\nimport { Helmet } from 'react-helmet';\nimport { REACT_HELMET_PROPS } from 'config.js';\n\n// import multi language\nimport LangProvider from 'lang/LangProvider';\n\n// import routing modules\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteIdentifier from 'routing/components/RouteIdentifier';\nimport Loading from 'components/loading/Loading';\n\n// import routes\nimport { getLayoutlessRoutes } from 'routing/helper';\nimport defaultRoutes from 'routing/default-routes';\nimport routesAndMenuItems from 'routes.js';\n\n// import toastify for notification\nimport { Slide, ToastContainer } from 'react-toastify';\n\n// mock server register for demo\nimport '@mock-api';\n\nimport 'react-sortable-tree/style.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Main = () => {\n  const layoutlessRoutes = useMemo(() => getLayoutlessRoutes({ data: routesAndMenuItems }), []);\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistedStore}>\n        <Helmet {...REACT_HELMET_PROPS} />\n        <ToastContainer transition={Slide} newestOnTop />\n        <Router basename={process.env.REACT_APP_BASENAME}>\n          <LangProvider>\n            <RouteIdentifier routes={[...layoutlessRoutes, ...defaultRoutes]} fallback={<Loading />} />\n          </LangProvider>\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n/*\n * If you want to start measuring performance in your app, pass a function\n * to log results (for example: reportWebVitals(console.log))\n * or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n */\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}