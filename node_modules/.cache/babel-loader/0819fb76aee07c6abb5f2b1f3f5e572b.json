{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/UserSetting.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { GetAllUsers } from '../services/userservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowInd = function (propss) {\n  const {\n    name,\n    firstname,\n    role,\n    createDate,\n    onClick\n  } = propss; // console.log(props);\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"g-0 sh-13 sh-md-6 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/profile/profile-12.gif\",\n        className: \"card-img rounded-xl sh-6 sw-6\",\n        alt: \"thumb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"pt-0 pb-0 pe-0 h-100\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          className: \"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"5\",\n          className: \"d-flex align-items-center mb-md-0\",\n          children: firstname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"pt-0 pb-0 pe-0 h-100\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"g-0 h-100 align-items-start align-content-start align-content-md-center align-items-md-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            className: \"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\",\n            children: role === '1' ? 'Admin' : 'Viewer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            className: \"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\",\n            children: createDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            className: \"d-flex align-items-center justify-content-md-end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              variant: \"outline-muted\",\n              className: \"btn-icon btn-icon-only hover-outline me-1\",\n              children: /*#__PURE__*/_jsxDEV(CsLineIcons, {\n                icon: \"edit-square\",\n                onClick: onClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RowInd;\n\nconst UserSettingPage = () => {\n  _s();\n\n  const title = 'User Setting Page';\n  const description = 'List of Users.';\n  const {\n    currentUser,\n    isLogin\n  } = useSelector(state => state.auth);\n  const rowsId = [];\n  const [rowState, setRowState] = useState(rowsId);\n  const [ds, getUsers] = useState(rowsId);\n  const [isLoading, setLoading] = useState(true);\n  const breadcrumbs = [{\n    to: '',\n    text: 'Home'\n  }];\n\n  const onSubmit = values => {// console.log(values);\n    // const chart = document.getElementsByClassName('myChart');\n    // // chart[0].classLiss;\n    // // console.log(chart[0].getAttribute('class'));\n    // chart[0].setAttribute('class',`${chart[0].getAttribute('class')} noncollapsable`);\n    // // console.log(chart[0]);\n    // chart[0].querySelectorAll([\"classname=node\"]).forEach();\n  };\n\n  const getAllUsers = () => {\n    setLoading(true);\n    let result = null;\n    const Signups = GetAllUsers(currentUser.token).then(function (response) {\n      if (response) {\n        console.log(response);\n\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // console.log(response.responseData);\n\n          result = response.responseData; // console.log(result.type_goals);\n\n          getUsers(result);\n          setLoading(false);\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // if(response.responseCode === 401) {\n          //   // dispatch(setCurrentUser(''));\n          //   const path = `${appRoot}/login`; \n          //   history.push(path);\n          // }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const clickRows = val => {\n    console.log(val);\n  };\n\n  const initialValues = {\n    searchField: ''\n  };\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required')\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = formik;\n  useCustomLayout({\n    placement: MENU_PLACEMENT.Vertical,\n    layout: LAYOUT.Boxed\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"scroll-section\",\n          id: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0 pb-0 display-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n              items: breadcrumbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-5\",\n            body: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-data-Container\",\n              children: ds.map((row, idx) => {\n                return /*#__PURE__*/_jsxDEV(RowInd, {\n                  name: row.name,\n                  firstname: row.firstName,\n                  role: row.role,\n                  createDate: row.createdAt,\n                  onClick: e => clickRows(row)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSettingPage, \"bg1H5sYl8UtfBe2/8bDfJsXCB7E=\", false, function () {\n  return [useSelector, useFormik, useCustomLayout];\n});\n\n_c2 = UserSettingPage;\nexport default UserSettingPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowInd\");\n$RefreshReg$(_c2, \"UserSettingPage\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/UserSetting.js"],"names":["React","useState","useEffect","Row","Col","Card","Form","Button","Yup","useFormik","HtmlHead","BreadcrumbList","useCustomLayout","MENU_PLACEMENT","LAYOUT","CsLineIcons","useSelector","toast","GetAllUsers","RowInd","propss","name","firstname","role","createDate","onClick","UserSettingPage","title","description","currentUser","isLogin","state","auth","rowsId","rowState","setRowState","ds","getUsers","isLoading","setLoading","breadcrumbs","to","text","onSubmit","values","getAllUsers","result","Signups","token","then","response","console","log","responseCode","success","responseDesc","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","responseData","error","clickRows","val","initialValues","searchField","validationSchema","object","shape","string","required","formik","handleSubmit","handleChange","touched","errors","placement","Vertical","layout","Boxed","map","row","idx","firstName","createdAt","e"],"mappings":"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","sourcesContent":["import {React,useState,useEffect} from 'react';\nimport { Row, Col, Card, Form , Button} from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { GetAllUsers } from '../services/userservice';\n\nconst RowInd = function(propss){\n    const {name, firstname, role, createDate, onClick} = propss;\n    \n    // console.log(props);\n    return (\n        <Row className=\"g-0 sh-13 sh-md-6 mb-3\">\n          <Col xs=\"auto\">\n            <img src=\"/img/profile/profile-12.gif\" className=\"card-img rounded-xl sh-6 sw-6\" alt=\"thumb\" />\n          </Col>\n          <Col>\n                <Card.Body className=\"pt-0 pb-0 pe-0 h-100\">\n                    <Col md=\"4\" className=\"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\">\n                    {/* Project Manager */}\n                    {name}\n                    </Col>\n                    <Col md=\"5\" className=\"d-flex align-items-center mb-md-0\">\n                    {/* Winry Rockbell */}\n                    {firstname}\n                    </Col>\n                </Card.Body>\n          </Col>\n          <Col>\n            <Card.Body className=\"pt-0 pb-0 pe-0 h-100\">\n              <Row className=\"g-0 h-100 align-items-start align-content-start align-content-md-center align-items-md-center\">\n                <Col md=\"4\" className=\"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\">\n                  {/* Project Manager */}\n                  {role === '1' ? 'Admin' : 'Viewer'}\n                </Col>\n                <Col md=\"4\" className=\"d-flex align-items-center text-muted pe-2 mb-2 mb-md-0\">\n                  {/* Project Manager */}\n                  {createDate}\n                </Col>\n                <Col md=\"3\" className=\"d-flex align-items-center justify-content-md-end\">\n                    <Button size=\"sm\" variant=\"outline-muted\" className=\"btn-icon btn-icon-only hover-outline me-1\">\n                        <CsLineIcons icon=\"edit-square\" onClick={onClick}/>\n                    </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Col>\n        </Row>\n    );\n}\n\nconst UserSettingPage = () => {\n  const title = 'User Setting Page';\n  const description = 'List of Users.';\n  const { currentUser, isLogin } = useSelector((state) => state.auth);\n\n  const rowsId = [];\n  const [rowState, setRowState] = useState(rowsId);\n  const [ds, getUsers] = useState(rowsId);\n  const [isLoading, setLoading] = useState(true);\n\n  const breadcrumbs = [{ to: '', text: 'Home' }];\n\n  const onSubmit = (values) => {\n    // console.log(values);\n    // const chart = document.getElementsByClassName('myChart');\n    // // chart[0].classLiss;\n    // // console.log(chart[0].getAttribute('class'));\n    // chart[0].setAttribute('class',`${chart[0].getAttribute('class')} noncollapsable`);\n    // // console.log(chart[0]);\n    // chart[0].querySelectorAll([\"classname=node\"]).forEach();\n  }\n\n  const getAllUsers = () => {\n      \n    setLoading(true);\n    let result = null;\n    const Signups  =  GetAllUsers(currentUser.token).then(function(response) {\n      if(response) {\n        console.log(response);\n        if(response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          // console.log(response.responseData);\n          result = response.responseData;\n          // console.log(result.type_goals);\n          getUsers(result);\n          setLoading(false);\n        }else{  \n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          // if(response.responseCode === 401) {\n          //   // dispatch(setCurrentUser(''));\n          //   const path = `${appRoot}/login`; \n          //   history.push(path);\n          // }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const clickRows = (val) => {\n    console.log(val);\n  };\n\n  const initialValues = { searchField: '' };\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required'),\n  });\n  const formik = useFormik({ initialValues, validationSchema, onSubmit });\n  const { handleSubmit, handleChange, values, touched, errors } = formik;\n\n  useCustomLayout({ placement: MENU_PLACEMENT.Vertical, layout: LAYOUT.Boxed });\n\n  return (\n    <>\n      <HtmlHead title={title} description={description} />\n      <Row>\n        <Col>\n          {/* Title Start */}\n          <section className=\"scroll-section\" id=\"title\">\n            <div className=\"page-title-container\">\n              <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n              <BreadcrumbList items={breadcrumbs} />\n            </div>\n            {/* <Row>\n                <Col>\n                <Card className=\"mb-5\" body>\n                    <div className=\"g-0 row\">\n                        <div className=\"d-flex align-items-start justify-content-end justify-content-lg-start col-md col-12\">\n                            <form id=\"searchForm\" className=\"tooltip-end-bottom me-lg-auto w-md-auto search-input-container border border-separator \" onSubmit={handleSubmit}>\n                            <div className=\"input-group\">\n                            <Form.Control id=\"searchField\" className=\"\" placeholder=\"Search\" value={values.searchField} onChange={handleChange} />\n                            <button id=\"button-addon\" type=\"submit\" className=\"btn btn-outline-secondary\">\n                                <span className=\"search-magnifier-icon pe-none\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"cs-icon search \">\n                                    <circle cx=\"9\" cy=\"9\" r=\"7\"> </circle>\n                                    <path d=\"M14 14L17.5 17.5\"> </path>\n                                    </svg>\n                                </span>\n                            </button>\n                            </div>\n                            </form> \n                        </div>\n                    </div> \n                </Card>\n                </Col>\n            </Row> */}\n            <Card className=\"mb-5\" body>\n                <Card.Text>{description}</Card.Text>\n                <div className=\"display-data-Container\">\n                    {ds.map((row, idx) => {\n                        return(\n                            <RowInd \n                            key={idx}\n                            name={row.name}\n                            firstname={row.firstName}\n                            role={row.role}\n                            createDate={row.createdAt}\n                            onClick={(e) => clickRows(row)}\n                            /> \n                        )\n                    })\n                    }\n                </div>\n            </Card>\n          </section>\n          {/* Title End */}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default UserSettingPage;\n"]},"metadata":{},"sourceType":"module"}