{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { menuChangeMenuPadding } from 'layout/nav/main-menu/menuSlice';\nimport { useMutationObservable } from './useMutationObservable';\n\nconst useModalPaddingFix = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const onListMutation = useCallback(mutationList => {\n    if (Array.isArray(mutationList)) {\n      // eslint-disable-next-line array-callback-return\n      mutationList.map(mutation => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n          dispatch(menuChangeMenuPadding(mutation.target.style.paddingRight.indexOf('px') > -1 ? parseInt(mutation.target.style.paddingRight.replace('px', ''), 10) : ''));\n        }\n      });\n    }\n  }, [dispatch]);\n  useMutationObservable(document.body, onListMutation);\n  return true;\n};\n\n_s(useModalPaddingFix, \"duRKilWFgtdwqiuU85YuANT58As=\", false, function () {\n  return [useDispatch, useMutationObservable];\n});\n\nexport default useModalPaddingFix;","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/goals_planner_fe/goals_planner_fe/src/hooks/useModalPaddingFix.js"],"names":["useCallback","useDispatch","menuChangeMenuPadding","useMutationObservable","useModalPaddingFix","dispatch","onListMutation","mutationList","Array","isArray","map","mutation","type","attributeName","target","style","paddingRight","indexOf","parseInt","replace","document","body"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,cAAc,GAAGN,WAAW,CAC/BO,YAAD,IAAkB;AAChB,QAAIC,KAAK,CAACC,OAAN,CAAcF,YAAd,CAAJ,EAAiC;AAC/B;AACAA,MAAAA,YAAY,CAACG,GAAb,CAAkBC,QAAD,IAAc;AAC7B,YAAIA,QAAQ,CAACC,IAAT,KAAkB,YAAlB,IAAkCD,QAAQ,CAACE,aAAT,KAA2B,OAAjE,EAA0E;AACxER,UAAAA,QAAQ,CACNH,qBAAqB,CACnBS,QAAQ,CAACG,MAAT,CAAgBC,KAAhB,CAAsBC,YAAtB,CAAmCC,OAAnC,CAA2C,IAA3C,IAAmD,CAAC,CAApD,GAAwDC,QAAQ,CAACP,QAAQ,CAACG,MAAT,CAAgBC,KAAhB,CAAsBC,YAAtB,CAAmCG,OAAnC,CAA2C,IAA3C,EAAiD,EAAjD,CAAD,EAAuD,EAAvD,CAAhE,GAA6H,EAD1G,CADf,CAAR;AAKD;AACF,OARD;AASD;AACF,GAd+B,EAehC,CAACd,QAAD,CAfgC,CAAlC;AAiBAF,EAAAA,qBAAqB,CAACiB,QAAQ,CAACC,IAAV,EAAgBf,cAAhB,CAArB;AAEA,SAAO,IAAP;AACD,CAvBD;;GAAMF,kB;UACaH,W,EAmBjBE,qB;;;AAIF,eAAeC,kBAAf","sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { menuChangeMenuPadding } from 'layout/nav/main-menu/menuSlice';\nimport { useMutationObservable } from './useMutationObservable';\n\nconst useModalPaddingFix = () => {\n  const dispatch = useDispatch();\n\n  const onListMutation = useCallback(\n    (mutationList) => {\n      if (Array.isArray(mutationList)) {\n        // eslint-disable-next-line array-callback-return\n        mutationList.map((mutation) => {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n            dispatch(\n              menuChangeMenuPadding(\n                mutation.target.style.paddingRight.indexOf('px') > -1 ? parseInt(mutation.target.style.paddingRight.replace('px', ''), 10) : ''\n              )\n            );\n          }\n        });\n      }\n    },\n    [dispatch]\n  );\n  useMutationObservable(document.body, onListMutation);\n\n  return true;\n};\nexport default useModalPaddingFix;\n"]},"metadata":{},"sourceType":"module"}