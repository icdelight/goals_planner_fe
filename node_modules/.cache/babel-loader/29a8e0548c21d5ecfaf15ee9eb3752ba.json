{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/addChildTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Button, Row, Col, Card, Nav, Form, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { DEFAULT_PATHS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddChildTree = () => {\n  _s();\n\n  const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n  console.log(appRoot);\n  const history = useHistory(); // const states = state;\n  // const parent = states.location.state;\n  // console.log(parent.id);\n  // console.log(parent.title);\n\n  useCustomLayout({\n    layout: LAYOUT.Boxed\n  });\n  const {\n    width\n  } = useWindowSize();\n  const {\n    themeValues\n  } = useSelector(state => state.settings);\n  const lgBreakpoint = parseInt(themeValues.lg.replace('px', ''), 10);\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  const title = 'Add Child Page';\n  const description = 'An page for adding child the tree view node.';\n  const breadcrumbs = [{\n    to: ``,\n    text: 'Home'\n  }, {\n    to: `tree/treeadmf`,\n    text: 'Tree Admin'\n  }, {\n    to: `tree/treeadmf/addchild`,\n    text: 'Add Child'\n  }];\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required')\n  });\n  const initialValues = {\n    searchField: ''\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"scroll-section\",\n          id: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0 pb-0 display-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n              items: breadcrumbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), width && width < lgBreakpoint && /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        sm: \"auto\",\n        className: \"d-flex align-items-start justify-content-end d-block d-lg-none\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          align: \"end\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            as: Button,\n            variant: \"outline-primary\",\n            className: \"btn-icon btn-icon-start btn-icon w-100 w-sm-auto\",\n            children: [/*#__PURE__*/_jsxDEV(CsLineIcons, {\n              icon: \"gear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Settings \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            className: \"sw-25 py-3 px-4\",\n            children: /*#__PURE__*/_jsxDEV(NavContent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddChildTree, \"LrJds4FQreicsceumr6gubu/EA4=\", true, function () {\n  return [useHistory, useSelector, useFormik];\n});\n\n_c = AddChildTree;\nexport default AddChildTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddChildTree\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/addChildTree.js"],"names":["React","useEffect","useState","useHistory","Button","Row","Col","Card","Nav","Form","Dropdown","DatePicker","Select","useSelector","Yup","useFormik","HtmlHead","BreadcrumbList","DEFAULT_PATHS","AddChildTree","appRoot","APP","endsWith","slice","length","console","log","history","useCustomLayout","layout","LAYOUT","Boxed","width","useWindowSize","themeValues","state","settings","lgBreakpoint","parseInt","lg","replace","onSubmit","values","title","description","breadcrumbs","to","text","validationSchema","object","shape","searchField","string","required","initialValues","formik","handleSubmit","handleChange","touched","errors","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Button, Row, Col, Card, Nav, Form, Dropdown } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { DEFAULT_PATHS } from '../config';\n\nconst AddChildTree = () => {\n    const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n    console.log(appRoot);\n    const history = useHistory();\n    // const states = state;\n    // const parent = states.location.state;\n    // console.log(parent.id);\n    // console.log(parent.title);\n    useCustomLayout({ layout: LAYOUT.Boxed });\n    const { width } = useWindowSize();\n\n    const { themeValues } = useSelector((state) => state.settings);\n    const lgBreakpoint = parseInt(themeValues.lg.replace('px', ''), 10);\n\n    const onSubmit = (values) => {\n        console.log(values);\n    };\n\n    const title = 'Add Child Page';\n    const description = 'An page for adding child the tree view node.';\n    const breadcrumbs = [\n        { to: ``, text: 'Home' },\n        { to: `tree/treeadmf`, text: 'Tree Admin' },\n        { to: `tree/treeadmf/addchild`, text: 'Add Child' },\n    ];\n    const validationSchema = Yup.object().shape({\n        searchField: Yup.string().required('Search is required'),\n    });\n    const initialValues = { searchField: '' };\n    const formik = useFormik({ initialValues, validationSchema, onSubmit });\n    const { handleSubmit, handleChange, values, touched, errors } = formik;\n\n    return (\n        <div className=\"App\" style={{ height: 500 }}>\n            <HtmlHead title={title} description={description} />\n            <Row>\n                <Col>\n                    {/* Title Start */}\n                    <section className=\"scroll-section\" id=\"title\">\n                    <div className=\"page-title-container\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </div>\n                    </section>\n                </Col>\n                {/* Top Buttons Start */}\n                {width && width < lgBreakpoint && (\n                    <Col xs=\"12\" sm=\"auto\" className=\"d-flex align-items-start justify-content-end d-block d-lg-none\">\n                    <Dropdown align=\"end\">\n                        <Dropdown.Toggle as={Button} variant=\"outline-primary\" className=\"btn-icon btn-icon-start btn-icon w-100 w-sm-auto\">\n                        <CsLineIcons icon=\"gear\" /> <span>Settings </span>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"sw-25 py-3 px-4\">\n                        <NavContent />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    </Col>\n                )}\n            </Row>\n        </div>\n    );\n}\n\nexport default AddChildTree;\n"]},"metadata":{},"sourceType":"module"}