{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/addChildTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, Form } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { DEFAULT_PATHS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddChildTree = () => {\n  _s();\n\n  const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n  console.log(appRoot);\n  const history = useHistory(); // const states = state;\n  // const parent = states.location.state;\n  // console.log(parent.id);\n  // console.log(parent.title);\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  const title = 'Add Child Page';\n  const description = 'An page for adding child the tree view node.';\n  const breadcrumbs = [{\n    to: ``,\n    text: 'Home'\n  }, {\n    to: `tree/treeadmf`,\n    text: 'Tree Admin'\n  }, {\n    to: `tree/treeadmf/addchild`,\n    text: 'Add Child'\n  }];\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required')\n  });\n  const initialValues = {\n    searchField: ''\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"scroll-section\",\n          id: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0 pb-0 display-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n              items: breadcrumbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddChildTree, \"lhXjV0UxVlq3kCDKc+nZHPRTWII=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = AddChildTree;\nexport default AddChildTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddChildTree\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/addChildTree.js"],"names":["React","useEffect","useState","useHistory","Row","Col","Card","Form","Yup","useFormik","HtmlHead","BreadcrumbList","DEFAULT_PATHS","AddChildTree","appRoot","APP","endsWith","slice","length","console","log","history","onSubmit","values","title","description","breadcrumbs","to","text","validationSchema","object","shape","searchField","string","required","initialValues","formik","handleSubmit","handleChange","touched","errors","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card , Form} from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { DEFAULT_PATHS } from '../config';\n\nconst AddChildTree = () => {\n    const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n    console.log(appRoot);\n    const history = useHistory();\n    // const states = state;\n    // const parent = states.location.state;\n    // console.log(parent.id);\n    // console.log(parent.title);\n\n    const onSubmit = (values) => {\n        console.log(values);\n    };\n\n    const title = 'Add Child Page';\n    const description = 'An page for adding child the tree view node.';\n    const breadcrumbs = [\n        { to: ``, text: 'Home' },\n        { to: `tree/treeadmf`, text: 'Tree Admin' },\n        { to: `tree/treeadmf/addchild`, text: 'Add Child' },\n    ];\n    const validationSchema = Yup.object().shape({\n        searchField: Yup.string().required('Search is required'),\n    });\n    const initialValues = { searchField: '' };\n    const formik = useFormik({ initialValues, validationSchema, onSubmit });\n    const { handleSubmit, handleChange, values, touched, errors } = formik;\n\n    return (\n        <div className=\"App\" style={{ height: 500 }}>\n            <HtmlHead title={title} description={description} />\n            <Row>\n                <Col>\n                    {/* Title Start */}\n                    <section className=\"scroll-section\" id=\"title\">\n                    <div className=\"page-title-container\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </div>\n                    </section>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default AddChildTree;\n"]},"metadata":{},"sourceType":"module"}