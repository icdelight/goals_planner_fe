{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js';\nlet response = {\n  responseCode: 999,\n  responseDesc: \"\",\n  responseData: null\n};\nexport const TreeView = async token => {\n  const header = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const result = await axios.post(`${URL_SERVICE}goals/allgoals`, {}, header).then(res => {\n    if (res) {\n      if (res.data) {\n        if (res.data.statusCode) {\n          // console.log(res.data.data);\n          response = {\n            responseCode: res.data.statusCode,\n            responseDesc: res.data.message,\n            responseData: res.data.data\n          };\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  });\n  return result;\n};\n_c = TreeView;\nexport const TreeAdmin = async token => {\n  const header = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const result = await axios.post(`${URL_SERVICE}goals/allgoalsadmin`, {}, header).then(res => {\n    if (res) {\n      if (res.data) {\n        if (res.data.statusCode) {\n          // console.log(res.data.data);\n          response = {\n            responseCode: res.data.statusCode,\n            responseDesc: res.data.message,\n            responseData: res.data.data\n          };\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  });\n  return result;\n};\n_c2 = TreeAdmin;\nexport const AddChildTreeService = async (token, titleReq, descReq, picReq, startReq, endReq, parentReq) => {\n  const header = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      'Authorization': `Bearer ${token}`\n    },\n    params: {\n      title_goals: titleReq,\n      desc_goals: descReq,\n      pic: picReq,\n      start_date: startReq,\n      due_date: endReq,\n      parent_goals: parentReq\n    }\n  };\n  const result = await axios.post(`${URL_SERVICE}goals/addgoals`, {}, header).then(res => {\n    if (res) {\n      if (res.data) {\n        if (res.data.statusCode) {\n          // console.log(res.data.data);\n          response = {\n            responseCode: res.data.statusCode,\n            responseDesc: res.data.message,\n            responseData: res.data.data\n          };\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  });\n  return result;\n};\n_c3 = AddChildTreeService;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TreeView\");\n$RefreshReg$(_c2, \"TreeAdmin\");\n$RefreshReg$(_c3, \"AddChildTreeService\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/services/treeservice.js"],"names":["React","axios","authReducer","setCurrentUser","LAYOUT","MENU_BEHAVIOUR","NAV_COLOR","MENU_PLACEMENT","RADIUS","THEME_COLOR","USER_ROLE","URL_SERVICE","response","responseCode","responseDesc","responseData","TreeView","token","header","headers","result","post","then","res","data","statusCode","message","catch","error","status","request","TreeAdmin","AddChildTreeService","titleReq","descReq","picReq","startReq","endReq","parentReq","params","title_goals","desc_goals","pic","start_date","due_date","parent_goals","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js';\n\nlet response = {\n    responseCode : 999,\n    responseDesc : \"\",\n    responseData : null,\n};\n\nexport const TreeView = async (token) => {\n    const header = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Authorization': `Bearer ${token}`,\n        },\n    };\n    const result = await axios.post( `${URL_SERVICE}goals/allgoals`, { }, header)\n    .then(res => {\n        if(res) {\n            if(res.data) {\n                if(res.data.statusCode) {\n                    // console.log(res.data.data);\n                    response = {\n                        responseCode : res.data.statusCode,\n                        responseDesc : res.data.message,\n                        responseData : res.data.data,\n                    };\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    return result;\n}\n\nexport const TreeAdmin = async (token) => {\n    const header = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Authorization': `Bearer ${token}`,\n        }\n    };\n    const result = await axios.post( `${URL_SERVICE}goals/allgoalsadmin`, { }, header)\n    .then(res => {\n        if(res) {\n            if(res.data) {\n                if(res.data.statusCode) {\n                    // console.log(res.data.data);\n                    response = {\n                        responseCode : res.data.statusCode,\n                        responseDesc : res.data.message,\n                        responseData : res.data.data,\n                    };\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    return result;\n}\n\nexport const AddChildTreeService = async (token,titleReq,descReq,picReq,startReq,endReq,parentReq) => {\n    const header = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Authorization': `Bearer ${token}`,\n        },\n        params : {\n            title_goals: titleReq, \n            desc_goals: descReq, \n            pic: picReq, \n            start_date: startReq, \n            due_date: endReq, \n            parent_goals: parentReq\n        }\n    };\n    const result = await axios.post( `${URL_SERVICE}goals/addgoals`, { }, header)\n    .then(res => {\n        if(res) {\n            if(res.data) {\n                if(res.data.statusCode) {\n                    // console.log(res.data.data);\n                    response = {\n                        responseCode : res.data.statusCode,\n                        responseDesc : res.data.message,\n                        responseData : res.data.data,\n                    };\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    return result;\n}"]},"metadata":{},"sourceType":"module"}