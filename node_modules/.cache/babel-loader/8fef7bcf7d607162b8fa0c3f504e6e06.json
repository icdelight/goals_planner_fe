{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js';\nimport { useSelector } from 'react-redux';\nlet response = {\n  responseCode: 999,\n  responseDesc: \"\",\n  responseData: null\n};\nexport const TreeView = async () => {\n  _s();\n\n  const {\n    currentUser,\n    isLogin\n  } = useSelector(state => state.auth);\n  const header = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      'Authorization': `Bearer ${currentUser.token}`\n    }\n  };\n  const result = await axios.post(`${URL_SERVICE}goals/allgoals`, {}, header).then(res => {\n    if (res) {\n      if (res.data) {\n        if (res.data.statusCode) {\n          console.log(res.data.data);\n          response = {\n            responseCode: res.data.statusCode,\n            responseDesc: res.data.message,\n            responseData: null\n          };\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  });\n  return result;\n};\n\n_s(TreeView, \"vDa96HvDGWGU1mFLMwhQI6y9sXA=\", false, function () {\n  return [useSelector];\n});\n\n_c = TreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/services/treeservice.js"],"names":["React","axios","authReducer","setCurrentUser","LAYOUT","MENU_BEHAVIOUR","NAV_COLOR","MENU_PLACEMENT","RADIUS","THEME_COLOR","USER_ROLE","URL_SERVICE","useSelector","response","responseCode","responseDesc","responseData","TreeView","currentUser","isLogin","state","auth","header","headers","token","result","post","then","res","data","statusCode","console","log","message","catch","error","status","request"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js';\nimport { useSelector } from 'react-redux';\n\nlet response = {\n    responseCode : 999,\n    responseDesc : \"\",\n    responseData : null,\n};\n\nexport const TreeView = async () => {\n    const { currentUser, isLogin } = useSelector((state) => state.auth);\n    const header = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            'Authorization': `Bearer ${currentUser.token}`,\n        }\n    };\n    const result = await axios.post( `${URL_SERVICE}goals/allgoals`, { }, header)\n    .then(res => {\n        if(res) {\n            if(res.data) {\n                if(res.data.statusCode) {\n                    console.log(res.data.data);\n                    response = {\n                        responseCode : res.data.statusCode,\n                        responseDesc : res.data.message,\n                        responseData : null,\n                    };\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    return result;\n}"]},"metadata":{},"sourceType":"module"}