{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeViewMap.js\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport OrganizationChart from \"@dabeng/react-orgchart\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { Signup } from '../services/signin';\nimport MyNode from \"../components/node/mynode\";\nimport { TreeView } from '../services/treeservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = 'Tree Admin Page';\nconst description = 'An page for configure the tree view.';\nconst breadcrumbs = [{\n  to: '',\n  text: 'Home'\n}];\nconst {\n  currentUser,\n  isLogin\n} = useSelector(state => state.auth);\nexport default class TreeAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      goals: null\n    };\n  }\n\n  componentDidMount() {\n    const Signups = TreeView(currentUser.token).then(function (response) {\n      if (response) {\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // getGoals(response.responseData);\n\n          this.setState({\n            goals: response.responseData\n          });\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    useCustomLayout({\n      placement: MENU_PLACEMENT.Vertical,\n      layout: LAYOUT.Boxed\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App2\",\n      children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n        title: title,\n        description: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"scroll-section\",\n            id: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-title-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"mb-0 pb-0 display-4\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n                items: breadcrumbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EmptyDiv\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(OrganizationChart, {\n              datasource: goals,\n              chartClass: \"myChart\",\n              NodeTemplate: MyNode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClick,\n            children: \"Click Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeViewMap.js"],"names":["React","useEffect","useState","Component","OrganizationChart","Row","Col","Card","HtmlHead","BreadcrumbList","useCustomLayout","MENU_PLACEMENT","LAYOUT","toast","useSelector","Signup","MyNode","TreeView","title","description","breadcrumbs","to","text","currentUser","isLogin","state","auth","TreeAdmin","constructor","props","goals","componentDidMount","Signups","token","then","response","responseCode","success","responseDesc","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setState","responseData","error","render","placement","Vertical","layout","Boxed","handleClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component} from \"react\";\nimport OrganizationChart from \"@dabeng/react-orgchart\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { Signup } from '../services/signin';\nimport MyNode from \"../components/node/mynode\";\nimport { TreeView } from '../services/treeservice';\n\n\nconst title = 'Tree Admin Page';\nconst description = 'An page for configure the tree view.';\n\nconst breadcrumbs = [{ to: '', text: 'Home' }];\nconst { currentUser, isLogin } = useSelector((state) => state.auth);\n\nexport default class TreeAdmin extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n          goals: null,\n        };\n    };\n\n    componentDidMount() {\n        const Signups  =  TreeView(currentUser.token).then(function(response) {\n            if(response) {\n              if(response.responseCode === 200) {\n                toast.success(response.responseDesc, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n                // getGoals(response.responseData);\n                this.setState({goals: response.responseData})\n              }else{  \n                toast.error(response.responseDesc, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n              }\n            }\n        });\n    }\n\n    \n\n    render() {\n        useCustomLayout({ placement: MENU_PLACEMENT.Vertical, layout: LAYOUT.Boxed });\n        return (\n            <div className=\"App2\">\n                <HtmlHead title={title} description={description} />\n                <Row>\n                    <Col>\n                        {/* Title Start */}\n                        <section className=\"scroll-section\" id=\"title\">\n                        <div className=\"page-title-container\">\n                            <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                            <BreadcrumbList items={breadcrumbs} />\n                        </div>\n                        {/* <Card className=\"mb-5\" body>\n                            <Card.Text>{description}</Card.Text> */}\n                            <div className=\"EmptyDiv\"> </div>\n                            <OrganizationChart\n                                datasource={goals}\n                                chartClass=\"myChart\"\n                                NodeTemplate={MyNode}\n                            />\n                            {/* </Card> */}\n                        </section>\n                    {/* Title End */}\n                    <button type=\"button\" onClick={handleClick}>\n                        Click Me\n                    </button>\n                    </Col>\n                </Row>\n            </div>\n          \n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}