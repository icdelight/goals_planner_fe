{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeAdminFun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport SortableTree from \"react-sortable-tree\";\nimport { Alert, Row, Col, Card, Form, ButtonGroup } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { TreeAdmin, RemapNode } from '../services/treeservice';\nimport { DEFAULT_PATHS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TreeContainer = function () {};\n\n_c = TreeContainer;\n\nconst TreeAdminFun = () => {\n  _s();\n\n  const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n  const history = useHistory();\n  const {\n    currentUser,\n    isLogin\n  } = useSelector(state => state.auth);\n  const [treeData, getGoals] = useState('');\n  const [canvas, setCanvas] = useState('');\n  const [isLoading, setLoading] = useState(true);\n  const [nodeClicked, clickNode] = useState(true);\n  const [show, setShow] = useState(false);\n  const [dismissingAlertShow, setDismissingAlertShow] = useState(true);\n  const [styleBackround, setStyleBack] = useState(true);\n  const [styleColor, setStyleCol] = useState(true);\n  const [indData, setInd] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const getAllGoals = () => {\n    let result = [];\n    const Signups = TreeAdmin(currentUser.token).then(function (response) {\n      if (response) {\n        console.log(response);\n\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // console.log(response.responseData);\n\n          result = response.responseData; // console.log(result);\n\n          getGoals(result); // setShowBtn(false);\n\n          setLoading(false);\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          getGoals(result);\n          setDismissingAlertShow(true);\n          setLoading(false);\n        }\n      } // console.log(result);\n\n    });\n  };\n\n  const handleNodeClick = node => {\n    // setState({\n    //     // nodeClicked: node\n    // });\n    clickNode(node);\n  };\n\n  const handleTreeOnChange = treeDataS => {\n    // setState({ treeData });\n    getGoals(treeDataS);\n  };\n\n  const alertNodeInfo = ({\n    node,\n    path,\n    treeIndex\n  }) => {\n    // console.log(node);\n    // console.log(path);\n    // console.log(treeIndex);\n    const objectString = Object.keys(node).map(k => k === \"children\" ? \"children: Array\" : `${k}: '${node[k]}'`).join(\",\\n   \"); // alert(\n    //   \"Info passed to the button generator:\\n\\n\" +\n    //     `node: {\\n   ${objectString}\\n},\\n` +\n    //     `path: [${path.join(\", \")}],\\n` +\n    //     `treeIndex: ${treeIndex}`\n    // );\n\n    setCanvas(node);\n    const ind = [];\n    node.indikator.forEach(el => {\n      ind.push( /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-0 py-1\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sw-3 d-inline-block d-flex justify-content-start align-items-center h-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sh-3\",\n              children: /*#__PURE__*/_jsxDEV(CsLineIcons, {\n                icon: \"dashboard-1\",\n                className: \"text-primary align-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column pt-0 pb-0 ps-3 pe-4 h-100 justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-alternate mt-n1 lh-1-25\",\n                style: {\n                  fontSize: '12px'\n                },\n                children: el.indikator\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, el.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this));\n    });\n    const styBack = node.type_goals.background !== null && node.type_goals.background !== \"\" ? node.type_goals.background : \"\";\n    const styCol = node.type_goals.color !== null && node.type_goals.color !== \"\" ? node.type_goals.color : \"\";\n    setStyleBack(styBack);\n    setStyleCol(styCol);\n    setInd(ind);\n    handleShow();\n  };\n\n  const resJson = [];\n\n  const loopParseData = (res, data, parent) => {\n    if (data) {\n      let obj = {};\n      data.forEach(function (d, idx, arr) {\n        if (d.expanded) {\n          // this.loopParseData(d);\n          obj = {\n            id_goals: d.id,\n            parent_goals: parent,\n            title_goals: d.title,\n            pic_goals: currentUser.email\n          }; // console.log(`${d.title}, id : ${d.id}, parent : ${parent} Parent of : `);\n          // resJson += `${d.title} Parent of : `;\n          // console.log(obj);\n\n          loopParseData(res, d.children, d.id);\n        } else {\n          obj = {\n            id_goals: d.id,\n            parent_goals: parent,\n            title_goals: d.title,\n            pic_goals: currentUser.email\n          }; // resJson += `${d.title}, id : ${d.id}, parent : ${parent}`;\n          // console.log(`${d.title}, id : ${d.id}, parent : ${parent}`);\n          // console.log(obj);\n        }\n\n        res.push(obj);\n      });\n    }\n\n    return res;\n  };\n\n  const handleClickButton = () => {\n    // const { treeData } = this.state;\n    // const loopData = '';\n    // console.log(treeData.keys(\"children\"));\n    // treeData.forEach(\n    //     function(d) {\n    //         console.log(d);\n    //         if(d.expanded) {\n    //         }\n    //     }\n    // );\n    loopParseData(resJson, treeData, 0);\n  };\n\n  const handleClickRemapButton = () => {\n    const newMap = loopParseData(resJson, treeData, 0); // console.log(newMap);\n\n    const Remap = RemapNode(currentUser.token, newMap).then(function (response) {\n      if (response) {\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // console.log(response.responseData);\n          // result = response.responseData;\n          // console.log(result);\n          // getGoals(result);\n          // setLoading(false);\n\n          getAllGoals();\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n    });\n  };\n\n  const handleClickCancleButton = () => {\n    // const treeDatas = [...treeData];\n    // console.log(treeDatas);\n    // getGoals(treeDatas);\n    getAllGoals();\n  };\n\n  const handleClickAddParentButton = parentCanvas => {\n    // console.log(`${appRoot}/tree/treeadmf/addchild`);\n    const path = `${appRoot}/tree/treeadmf/addchild`; // console.log(path);\n\n    history.push(path, {\n      id: parentCanvas.id,\n      title: parentCanvas.title\n    });\n  };\n\n  const handleClicUpdkButton = parentCanvas => {\n    const path = `${appRoot}/tree/treeadmf/updnode`; // console.log(path);\n\n    history.push(path, {\n      id: parentCanvas.id,\n      title: parentCanvas.title,\n      desc: parentCanvas.description,\n      startDate: parentCanvas.start_date,\n      dueDate: parentCanvas.due_date,\n      typeGoals: parentCanvas.type_goals,\n      indikator: parentCanvas.indikator\n    });\n  };\n\n  const handleClickAddButton = parentCanvas => {\n    // console.log(`${appRoot}/tree/treeadmf/addchild`);\n    const path = `${appRoot}/tree/treeadmf/addchild`; // console.log(path);\n\n    history.push(path, {\n      id: parentCanvas.id,\n      title: parentCanvas.title\n    });\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    getAllGoals();\n  }, []); // const maxDepth = 5; \n\n  const title = 'Tree Admin Page';\n  const description = 'An page for configure the tree view.';\n  const breadcrumbs = [{\n    to: '',\n    text: 'Home'\n  }];\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required')\n  });\n  const initialValues = {\n    searchField: ''\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = formik;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App scroll-out\",\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"override-native overflow-auto sh-100 pe-3\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"scroll-section\",\n            id: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-title-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"mb-0 pb-0 display-4\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n                items: breadcrumbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this), dismissingAlertShow && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"alert\",\n              onClose: () => setDismissingAlertShow(false),\n              dismissible: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Data goals is empty! \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 29\n              }, this), \" You should add Parent Node.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-3\",\n              body: true,\n              children: [/*#__PURE__*/_jsxDEV(SortableTree, {\n                className: \"mb-3\",\n                treeData: treeData,\n                onChange: handleTreeOnChange,\n                isVirtualized: false // maxDepth={maxDepth}\n                ,\n                generateNodeProps: rowInfo => {\n                  const {\n                    node\n                  } = rowInfo; // console.log(node);\n\n                  return {\n                    buttons: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn-xs btn-outline-default\",\n                      style: {\n                        verticalAlign: \"middle\",\n                        background: node.type_goals.background !== null && node.type_goals.background !== \"\" ? node.type_goals.background : \"\",\n                        color: node.type_goals.color !== null && node.type_goals.color !== \"\" ? node.type_goals.color : \"\",\n                        width: \"50px\"\n                      },\n                      onClick: () => alertNodeInfo(rowInfo),\n                      children: \"\\u2139\"\n                    }, node, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 37\n                    }, this)],\n                    onClick: () => {\n                      handleNodeClick(node);\n                    },\n                    style: node === nodeClicked ? {\n                      border: \"3px solid yellow\"\n                    } : {}\n                  };\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                \"aria-label\": \"Basic outlined example\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleClickRemapButton(),\n                  className: \"btn-icon btn-icon-start ms-1 btn btn-outline-primary\",\n                  children: \"Submit New Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleClickCancleButton(),\n                  className: \"btn-icon btn-icon-start ms-1 btn btn-outline-warning\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 33\n                }, this), dismissingAlertShow && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleClickAddParentButton(),\n                  className: \"btn-icon btn-icon-start ms-1 btn btn-outline-primary\",\n                  children: \"Add Parent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n        show: show,\n        onHide: handleClose,\n        placement: \"end\",\n        name: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n          closeButton: true,\n          className: \"row\",\n          style: {\n            backgroundColor: styleBackround,\n            color: styleColor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"passwordHelpBlock\",\n            className: \"form-text text-muted sm-12\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n            className: \"sm-12\",\n            children: canvas.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n          style: {\n            background: \"var(--background-navcolor-dark)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            body: true,\n            style: {\n              background: \"rgba(255,255,255,.05) !important\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"pt-0 pb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0 d-flex align-items-start justify-content-end justify-content-lg-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12\",\n                  children: \"PIC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-md col-6 sm-6\",\n                  children: canvas.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-md col-6 sm-6\",\n                  children: canvas.pic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: canvas.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12\",\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: canvas.progress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"pt-0 pb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12 col-md col-6\",\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-md col-6 sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: canvas.start_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 70\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12 col-md col-6\",\n                  children: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-md col-6 sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: canvas.due_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 70\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            body: true,\n            style: {\n              background: \"rgba(255,255,255,.05) !important\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"pt-0 pb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mt-0 mb-0 d-flex align-items-start justify-content-end justify-content-lg-start\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  id: \"passwordHelpBlock\",\n                  className: \"form-text text-muted sm-12\",\n                  children: \"Indikator : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"mb-n2 py-1\",\n              children: indData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                handleClickAddButton(canvas);\n              },\n              className: \"btn-icon btn-icon-start ms-1 btn btn-outline-primary\",\n              children: \"Add Child\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                handleClicUpdkButton(canvas);\n              },\n              className: \"btn-icon btn-icon-start ms-1 btn btn-outline-warning\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeAdminFun, \"8c0IRyRtNgqurEjvw/fWrQnVMkw=\", false, function () {\n  return [useHistory, useSelector, useFormik];\n});\n\n_c2 = TreeAdminFun;\nexport default TreeAdminFun;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TreeContainer\");\n$RefreshReg$(_c2, \"TreeAdminFun\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeAdminFun.js"],"names":["React","useEffect","useState","useHistory","SortableTree","Alert","Row","Col","Card","Form","ButtonGroup","Offcanvas","CsLineIcons","Yup","useFormik","HtmlHead","BreadcrumbList","toast","useSelector","TreeAdmin","RemapNode","DEFAULT_PATHS","TreeContainer","TreeAdminFun","appRoot","APP","endsWith","slice","length","history","currentUser","isLogin","state","auth","treeData","getGoals","canvas","setCanvas","isLoading","setLoading","nodeClicked","clickNode","show","setShow","dismissingAlertShow","setDismissingAlertShow","styleBackround","setStyleBack","styleColor","setStyleCol","indData","setInd","handleClose","handleShow","getAllGoals","result","Signups","token","then","response","console","log","responseCode","success","responseDesc","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","responseData","error","handleNodeClick","node","handleTreeOnChange","treeDataS","alertNodeInfo","path","treeIndex","objectString","Object","keys","map","k","join","ind","indikator","forEach","el","push","fontSize","key","styBack","type_goals","background","styCol","color","resJson","loopParseData","res","data","parent","obj","d","idx","arr","expanded","id_goals","id","parent_goals","title_goals","title","pic_goals","email","children","handleClickButton","handleClickRemapButton","newMap","Remap","handleClickCancleButton","handleClickAddParentButton","parentCanvas","handleClicUpdkButton","desc","description","startDate","start_date","dueDate","due_date","typeGoals","handleClickAddButton","onSubmit","values","breadcrumbs","to","text","validationSchema","object","shape","searchField","string","required","initialValues","formik","handleSubmit","handleChange","touched","errors","rowInfo","buttons","verticalAlign","width","onClick","style","border","backgroundColor","firstName","pic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAiCC,IAAjC,EAAuCC,WAAvC,QAAyD,iBAAzD;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,yBAArC;AACA,SAASC,aAAT,QAA8B,WAA9B;;;AAEA,MAAMC,aAAa,GAAG,YAAW,CAEhC,CAFD;;KAAMA,a;;AAGN,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGH,aAAa,CAACI,GAAd,CAAkBC,QAAlB,CAA2B,GAA3B,IAAkCL,aAAa,CAACI,GAAd,CAAkBE,KAAlB,CAAwB,CAAxB,EAA2BN,aAAa,CAACI,GAAd,CAAkBG,MAA7C,CAAlC,GAAyFP,aAAa,CAACI,GAAvH;AACA,QAAMI,OAAO,GAAG1B,UAAU,EAA1B;AACA,QAAM;AAAE2B,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA2Bb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5C;AACA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBjC,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoC,SAAD,EAAYC,UAAZ,IAA0BrC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACsC,WAAD,EAAcC,SAAd,IAA2BvC,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACwC,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC0C,mBAAD,EAAsBC,sBAAtB,IAAgD3C,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAM,CAAC4C,cAAD,EAAiBC,YAAjB,IAAiC7C,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAM,CAAC8C,UAAD,EAAaC,WAAb,IAA4B/C,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgD,OAAD,EAAUC,MAAV,IAAoBjD,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMkD,WAAW,GAAG,MAAMT,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMU,UAAU,GAAG,MAAMV,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AAExB,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,OAAO,GAAKrC,SAAS,CAACW,WAAW,CAAC2B,KAAb,CAAT,CAA6BC,IAA7B,CAAkC,UAASC,QAAT,EAAmB;AACrE,UAAGA,QAAH,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACF,YAAGA,QAAQ,CAACG,YAAT,KAA0B,GAA7B,EAAkC;AAChC7C,UAAAA,KAAK,CAAC8C,OAAN,CAAcJ,QAAQ,CAACK,YAAvB,EAAqC;AACnCC,YAAAA,QAAQ,EAAE,WADyB;AAEnCC,YAAAA,SAAS,EAAE,IAFwB;AAGnCC,YAAAA,eAAe,EAAE,KAHkB;AAInCC,YAAAA,YAAY,EAAE,IAJqB;AAKnCC,YAAAA,YAAY,EAAE,IALqB;AAMnCC,YAAAA,SAAS,EAAE,IANwB;AAOnCC,YAAAA,QAAQ,EAAEC;AAPyB,WAArC,EADgC,CAUhC;;AACAjB,UAAAA,MAAM,GAAGI,QAAQ,CAACc,YAAlB,CAXgC,CAYhC;;AACAtC,UAAAA,QAAQ,CAACoB,MAAD,CAAR,CAbgC,CAchC;;AACAhB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAhBD,MAgBK;AACHtB,UAAAA,KAAK,CAACyD,KAAN,CAAYf,QAAQ,CAACK,YAArB,EAAmC;AACjCC,YAAAA,QAAQ,EAAE,WADuB;AAEjCC,YAAAA,SAAS,EAAE,IAFsB;AAGjCC,YAAAA,eAAe,EAAE,KAHgB;AAIjCC,YAAAA,YAAY,EAAE,IAJmB;AAKjCC,YAAAA,YAAY,EAAE,IALmB;AAMjCC,YAAAA,SAAS,EAAE,IANsB;AAOjCC,YAAAA,QAAQ,EAAEC;AAPuB,WAAnC;AASArC,UAAAA,QAAQ,CAACoB,MAAD,CAAR;AACAV,UAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAN,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAjCoE,CAkCrE;;AACD,KAnCiB,CAAlB;AAoCD,GAvCD;;AAyCA,QAAMoC,eAAe,GAAIC,IAAD,IAAU;AAC9B;AACA;AAEA;AACAnC,IAAAA,SAAS,CAACmC,IAAD,CAAT;AACH,GAND;;AAQA,QAAMC,kBAAkB,GAAIC,SAAD,IAAe;AACtC;AACA3C,IAAAA,QAAQ,CAAC2C,SAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,CAAC;AAAEH,IAAAA,IAAF;AAAQI,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAD,KAA+B;AACjD;AACA;AACA;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAClBS,GADkB,CACbC,CAAD,IAAQA,CAAC,KAAK,UAAN,GAAmB,iBAAnB,GAAwC,GAAEA,CAAE,MAAKV,IAAI,CAACU,CAAD,CAAI,GADnD,EAElBC,IAFkB,CAEb,QAFa,CAArB,CAJiD,CAQjD;AACA;AACA;AACA;AACA;AACA;;AACAlD,IAAAA,SAAS,CAACuC,IAAD,CAAT;AACA,UAAMY,GAAG,GAAG,EAAZ;AACAZ,IAAAA,IAAI,CAACa,SAAL,CAAeC,OAAf,CAAwBC,EAAD,IAAQ;AAC3BH,MAAAA,GAAG,CAACI,IAAJ,eACA,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,2EAAf;AAAA,mCACA;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAC,aAAlB;AAAgC,gBAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAQA,QAAC,GAAD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,qEAAf;AAAA,mCACA;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,8BAAf;AAA8C,gBAAA,KAAK,EAAE;AAACC,kBAAAA,QAAQ,EAAE;AAAX,iBAArD;AAAA,0BAA0EF,EAAE,CAACF;AAA7E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA,SAA+BE,EAAE,CAACG,GAAlC;AAAA;AAAA;AAAA;AAAA,cADA;AAkBH,KAnBD;AAqBA,UAAMC,OAAO,GAAGnB,IAAI,CAACoB,UAAL,CAAgBC,UAAhB,KAA+B,IAA/B,IAAuCrB,IAAI,CAACoB,UAAL,CAAgBC,UAAhB,KAA+B,EAAtE,GAA2ErB,IAAI,CAACoB,UAAL,CAAgBC,UAA3F,GAAwG,EAAxH;AACA,UAAMC,MAAM,GAAGtB,IAAI,CAACoB,UAAL,CAAgBG,KAAhB,KAA0B,IAA1B,IAAkCvB,IAAI,CAACoB,UAAL,CAAgBG,KAAhB,KAA0B,EAA5D,GAAiEvB,IAAI,CAACoB,UAAL,CAAgBG,KAAjF,GAAyF,EAAxG;AACApD,IAAAA,YAAY,CAACgD,OAAD,CAAZ;AACA9C,IAAAA,WAAW,CAACiD,MAAD,CAAX;AACA/C,IAAAA,MAAM,CAACqC,GAAD,CAAN;AACAnC,IAAAA,UAAU;AACb,GA3CD;;AA6CA,QAAM+C,OAAO,GAAG,EAAhB;;AACA,QAAMC,aAAa,GAAG,CAACC,GAAD,EAAKC,IAAL,EAAUC,MAAV,KAAqB;AACvC,QAAGD,IAAH,EAAS;AACL,UAAIE,GAAG,GAAG,EAAV;AACAF,MAAAA,IAAI,CAACb,OAAL,CAEI,UAASgB,CAAT,EAAWC,GAAX,EAAeC,GAAf,EAAoB;AAChB,YAAGF,CAAC,CAACG,QAAL,EAAe;AACX;AACAJ,UAAAA,GAAG,GAAG;AACFK,YAAAA,QAAQ,EAACJ,CAAC,CAAEK,EADV;AAEFC,YAAAA,YAAY,EAAER,MAFZ;AAGFS,YAAAA,WAAW,EAAEP,CAAC,CAACQ,KAHb;AAIFC,YAAAA,SAAS,EAAErF,WAAW,CAACsF;AAJrB,WAAN,CAFW,CAQX;AACA;AACA;;AACAf,UAAAA,aAAa,CAACC,GAAD,EAAKI,CAAC,CAACW,QAAP,EAAgBX,CAAC,CAACK,EAAlB,CAAb;AACH,SAZD,MAYK;AACDN,UAAAA,GAAG,GAAG;AACFK,YAAAA,QAAQ,EAAEJ,CAAC,CAAEK,EADX;AAEFC,YAAAA,YAAY,EAAER,MAFZ;AAGFS,YAAAA,WAAW,EAAEP,CAAC,CAACQ,KAHb;AAIFC,YAAAA,SAAS,EAAErF,WAAW,CAACsF;AAJrB,WAAN,CADC,CAOD;AACA;AACA;AACH;;AAEDd,QAAAA,GAAG,CAACV,IAAJ,CAASa,GAAT;AACH,OA5BL;AA+BH;;AACD,WAAOH,GAAP;AACH,GApCD;;AAsCA,QAAMgB,iBAAiB,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACAjB,IAAAA,aAAa,CAACD,OAAD,EAASlE,QAAT,EAAkB,CAAlB,CAAb;AAEH,GAdD;;AAgBA,QAAMqF,sBAAsB,GAAG,MAAM;AACjC,UAAMC,MAAM,GAAGnB,aAAa,CAACD,OAAD,EAASlE,QAAT,EAAkB,CAAlB,CAA5B,CADiC,CAEjC;;AACA,UAAMuF,KAAK,GAAKrG,SAAS,CAACU,WAAW,CAAC2B,KAAb,EAAmB+D,MAAnB,CAAT,CAAoC9D,IAApC,CAAyC,UAASC,QAAT,EAAmB;AACxE,UAAGA,QAAH,EAAa;AACX,YAAGA,QAAQ,CAACG,YAAT,KAA0B,GAA7B,EAAkC;AAChC7C,UAAAA,KAAK,CAAC8C,OAAN,CAAcJ,QAAQ,CAACK,YAAvB,EAAqC;AACnCC,YAAAA,QAAQ,EAAE,WADyB;AAEnCC,YAAAA,SAAS,EAAE,IAFwB;AAGnCC,YAAAA,eAAe,EAAE,KAHkB;AAInCC,YAAAA,YAAY,EAAE,IAJqB;AAKnCC,YAAAA,YAAY,EAAE,IALqB;AAMnCC,YAAAA,SAAS,EAAE,IANwB;AAOnCC,YAAAA,QAAQ,EAAEC;AAPyB,WAArC,EADgC,CAUhC;AACA;AACA;AACA;AACA;;AACAlB,UAAAA,WAAW;AACZ,SAhBD,MAgBK;AACHrC,UAAAA,KAAK,CAACyD,KAAN,CAAYf,QAAQ,CAACK,YAArB,EAAmC;AACjCC,YAAAA,QAAQ,EAAE,WADuB;AAEjCC,YAAAA,SAAS,EAAE,IAFsB;AAGjCC,YAAAA,eAAe,EAAE,KAHgB;AAIjCC,YAAAA,YAAY,EAAE,IAJmB;AAKjCC,YAAAA,YAAY,EAAE,IALmB;AAMjCC,YAAAA,SAAS,EAAE,IANsB;AAOjCC,YAAAA,QAAQ,EAAEC;AAPuB,WAAnC;AASD;AACF;AACF,KA9Ba,CAAhB;AA+BH,GAlCD;;AAoCA,QAAMkD,uBAAuB,GAAG,MAAM;AAClC;AACA;AACA;AACApE,IAAAA,WAAW;AACd,GALD;;AAOA,QAAMqE,0BAA0B,GAAIC,YAAD,IAAkB;AACjD;AACA,UAAM5C,IAAI,GAAI,GAAExD,OAAQ,yBAAxB,CAFiD,CAGjD;;AACAK,IAAAA,OAAO,CAAC+D,IAAR,CAAaZ,IAAb,EAAkB;AACd+B,MAAAA,EAAE,EAAEa,YAAY,CAACb,EADH;AAEdG,MAAAA,KAAK,EAAEU,YAAY,CAACV;AAFN,KAAlB;AAIH,GARD;;AAUA,QAAMW,oBAAoB,GAAID,YAAD,IAAkB;AAC3C,UAAM5C,IAAI,GAAI,GAAExD,OAAQ,wBAAxB,CAD2C,CAE3C;;AACAK,IAAAA,OAAO,CAAC+D,IAAR,CAAaZ,IAAb,EAAkB;AACd+B,MAAAA,EAAE,EAAEa,YAAY,CAACb,EADH;AAEdG,MAAAA,KAAK,EAAEU,YAAY,CAACV,KAFN;AAGdY,MAAAA,IAAI,EAAEF,YAAY,CAACG,WAHL;AAIdC,MAAAA,SAAS,EAAEJ,YAAY,CAACK,UAJV;AAKdC,MAAAA,OAAO,EAAEN,YAAY,CAACO,QALR;AAMdC,MAAAA,SAAS,EAAER,YAAY,CAAC5B,UANV;AAOdP,MAAAA,SAAS,EAAEmC,YAAY,CAACnC;AAPV,KAAlB;AASH,GAZD;;AAcA,QAAM4C,oBAAoB,GAAIT,YAAD,IAAkB;AAC3C;AACA,UAAM5C,IAAI,GAAI,GAAExD,OAAQ,yBAAxB,CAF2C,CAG3C;;AACAK,IAAAA,OAAO,CAAC+D,IAAR,CAAaZ,IAAb,EAAkB;AACd+B,MAAAA,EAAE,EAAEa,YAAY,CAACb,EADH;AAEdG,MAAAA,KAAK,EAAEU,YAAY,CAACV;AAFN,KAAlB;AAIH,GARD;;AAWA,QAAMoB,QAAQ,GAAIC,MAAD,IAAY;AACzB3E,IAAAA,OAAO,CAACC,GAAR,CAAY0E,MAAZ;AACH,GAFD;;AAKAtI,EAAAA,SAAS,CAAC,MAAM;AACZqD,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT,CA9PuB,CAkQvB;;AACA,QAAM4D,KAAK,GAAG,iBAAd;AACA,QAAMa,WAAW,GAAG,sCAApB;AACA,QAAMS,WAAW,GAAG,CAAC;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAApB;AACA,QAAMC,gBAAgB,GAAG9H,GAAG,CAAC+H,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,WAAW,EAAEjI,GAAG,CAACkI,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB;AAD2B,GAAnB,CAAzB;AAGA,QAAMC,aAAa,GAAG;AAAEH,IAAAA,WAAW,EAAE;AAAf,GAAtB;AACA,QAAMI,MAAM,GAAGpI,SAAS,CAAC;AAAEmI,IAAAA,aAAF;AAAiBN,IAAAA,gBAAjB;AAAmCL,IAAAA;AAAnC,GAAD,CAAxB;AACA,QAAM;AAAEa,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8Bb,IAAAA,MAA9B;AAAsCc,IAAAA,OAAtC;AAA+CC,IAAAA;AAA/C,MAA0DJ,MAAhE;;AAEA,MAAI5G,SAAJ,EAAe;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE4E,KAAjB;AAAwB,MAAA,WAAW,EAAEa;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,8BACA,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCAEI;AAAS,YAAA,SAAS,EAAC,gBAAnB;AAAoC,YAAA,EAAE,EAAC,OAAvC;AAAA,oCACA;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,qBAAd;AAAA,0BAAqCb;AAArC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,cAAD;AAAgB,gBAAA,KAAK,EAAEsB;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAiCK5F,mBAAmB,iBAChB,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,OAAf;AAAuB,cAAA,OAAO,EAAE,MAAMC,sBAAsB,CAAC,KAAD,CAA5D;AAAqE,cAAA,WAAW,MAAhF;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlCR,eAuCA,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,IAAI,MAA3B;AAAA,sCAEI,QAAC,YAAD;AACI,gBAAA,SAAS,EAAC,MADd;AAEI,gBAAA,QAAQ,EAAEX,QAFd;AAGI,gBAAA,QAAQ,EAAE2C,kBAHd;AAII,gBAAA,aAAa,EAAG,KAJpB,CAKI;AALJ;AAMI,gBAAA,iBAAiB,EAAG0E,OAAD,IAAa;AAC5B,wBAAM;AAAE3E,oBAAAA;AAAF,sBAAW2E,OAAjB,CAD4B,CAE5B;;AACA,yBAAO;AACHC,oBAAAA,OAAO,EAAE,cACT;AACI,sBAAA,IAAI,EAAC,QADT;AAGI,sBAAA,SAAS,EAAC,4BAHd;AAII,sBAAA,KAAK,EAAE;AACHC,wBAAAA,aAAa,EAAE,QADZ;AAEHxD,wBAAAA,UAAU,EAAErB,IAAI,CAACoB,UAAL,CAAgBC,UAAhB,KAA+B,IAA/B,IAAuCrB,IAAI,CAACoB,UAAL,CAAgBC,UAAhB,KAA+B,EAAtE,GAA2ErB,IAAI,CAACoB,UAAL,CAAgBC,UAA3F,GAAwG,EAFjH;AAGHE,wBAAAA,KAAK,EAAEvB,IAAI,CAACoB,UAAL,CAAgBG,KAAhB,KAA0B,IAA1B,IAAkCvB,IAAI,CAACoB,UAAL,CAAgBG,KAAhB,KAA0B,EAA5D,GAAiEvB,IAAI,CAACoB,UAAL,CAAgBG,KAAjF,GAAyF,EAH7F;AAIHuD,wBAAAA,KAAK,EAAE;AAJJ,uBAJX;AAUI,sBAAA,OAAO,EAAE,MAAM3E,aAAa,CAACwE,OAAD,CAVhC;AAAA;AAAA,uBAES3E,IAFT;AAAA;AAAA;AAAA;AAAA,4BADS,CADN;AAiBH+E,oBAAAA,OAAO,EAAE,MAAM;AACXhF,sBAAAA,eAAe,CAACC,IAAD,CAAf;AACH,qBAnBE;AAoBHgF,oBAAAA,KAAK,EACLhF,IAAI,KAAKpC,WAAT,GACM;AACEqH,sBAAAA,MAAM,EAAE;AADV,qBADN,GAIM;AAzBH,mBAAP;AA6BH;AAtCL;AAAA;AAAA;AAAA;AAAA,sBAFJ,eA0CQ,QAAC,WAAD;AAAa,8BAAW,wBAAxB;AAAA,wCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAE,MAAMtC,sBAAsB,EAA3D;AAA+D,kBAAA,SAAS,EAAC,sDAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAE,MAAMG,uBAAuB,EAA5D;AAAgE,kBAAA,SAAS,EAAC,sDAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAOK9E,mBAAmB,iBAChB;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAE,MAAM+E,0BAA0B,EAA/D;AAAmE,kBAAA,SAAS,EAAC,sDAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARR;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1CR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAuGA,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEjF,IAAjB;AAAuB,QAAA,MAAM,EAAEU,WAA/B;AAA4C,QAAA,SAAS,EAAC,KAAtD;AAA4D,QAAA,IAAI,EAAC,KAAjE;AAAA,gCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,WAAW,MAA7B;AAA8B,UAAA,SAAS,EAAC,KAAxC;AAA8C,UAAA,KAAK,EAAE;AAAE0G,YAAAA,eAAe,EAAChH,cAAlB;AAAkCqD,YAAAA,KAAK,EAAEnD;AAAzC,WAArD;AAAA,kCACI;AAAO,YAAA,EAAE,EAAC,mBAAV;AAA8B,YAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD,CAAW,KAAX;AAAiB,YAAA,SAAS,EAAC,OAA3B;AAAA,sBACKZ,MAAM,CAAC8E;AADZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,KAAK,EAAE;AAACjB,YAAAA,UAAU,EAAC;AAAZ,WAAvB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAuB,YAAA,IAAI,MAA3B;AAA4B,YAAA,KAAK,EAAE;AAACA,cAAAA,UAAU,EAAC;AAAZ,aAAnC;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,WAAvB;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,qFAAf;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,mBAAhB;AAAA,4BAAqC7D,MAAM,CAAC2H;AAA5C;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAM,kBAAA,SAAS,EAAC,mBAAhB;AAAA,4BAAqC3H,MAAM,CAAC4H;AAA5C;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,OAAhB;AAAA,yCAAwB,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAY5H,MAAM,CAAC2F;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ,eAcI,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,OAAhB;AAAA,yCAAwB,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAY3F,MAAM,CAACmC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAoBI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,WAAvB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,yCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,oBAAhB;AAAA,yCAAqC,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAYnC,MAAM,CAAC6F;AAAnB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,yCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,oBAAhB;AAAA,yCAAqC,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAY7F,MAAM,CAAC+F;AAAnB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgCI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAuB,YAAA,IAAI,MAA3B;AAA4B,YAAA,KAAK,EAAE;AAAClC,cAAAA,UAAU,EAAC;AAAZ,aAAnC;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,WAAvB;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,qFAAf;AAAA,uCACI;AAAO,kBAAA,EAAE,EAAC,mBAAV;AAA8B,kBAAA,SAAS,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA,wBACC/C;AADD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCJ,eA0CI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAM;AAACmF,gBAAAA,oBAAoB,CAACjG,MAAD,CAApB;AAA6B,eAAnE;AAAqE,cAAA,SAAS,EAAC,sDAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAM;AAACyF,gBAAAA,oBAAoB,CAACzF,MAAD,CAApB;AAA6B,eAAnE;AAAqE,cAAA,SAAS,EAAC,sDAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvGA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyKH,CA1bD;;GAAMb,Y;UAEcpB,U,EACiBe,W,EAuQlBJ,S;;;MA1QbS,Y;AA4bN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport SortableTree from \"react-sortable-tree\";\nimport { Alert, Row, Col, Card , Form, ButtonGroup} from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { TreeAdmin, RemapNode } from '../services/treeservice';\nimport { DEFAULT_PATHS } from '../config';\n\nconst TreeContainer = function() {\n\n}\nconst TreeAdminFun = () => {\n    const appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n    const history = useHistory();\n    const { currentUser, isLogin } = useSelector((state) => state.auth);\n    const [treeData, getGoals] = useState('');\n    const [canvas, setCanvas] = useState('');\n    const [isLoading, setLoading] = useState(true);\n    const [nodeClicked, clickNode] = useState(true);\n    const [show, setShow] = useState(false);\n    const [dismissingAlertShow, setDismissingAlertShow] = useState(true);\n    const [styleBackround, setStyleBack] = useState(true);\n    const [styleColor, setStyleCol] = useState(true);\n    const [indData, setInd] = useState(true);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getAllGoals = () => {\n      \n      let result = [];\n      const Signups  =  TreeAdmin(currentUser.token).then(function(response) {\n        if(response) {\n            console.log(response);\n          if(response.responseCode === 200) {\n            toast.success(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            // console.log(response.responseData);\n            result = response.responseData;\n            // console.log(result);\n            getGoals(result);\n            // setShowBtn(false);\n            setLoading(false);\n          }else{  \n            toast.error(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            getGoals(result);\n            setDismissingAlertShow(true);\n            setLoading(false);\n          }\n        }\n        // console.log(result);\n      });\n    }\n\n    const handleNodeClick = (node) => {\n        // setState({\n        //     // nodeClicked: node\n            \n        // });\n        clickNode(node);\n    };\n\n    const handleTreeOnChange = (treeDataS) => {\n        // setState({ treeData });\n        getGoals(treeDataS);\n    };\n\n    const alertNodeInfo = ({ node, path, treeIndex }) => {\n        // console.log(node);\n        // console.log(path);\n        // console.log(treeIndex);\n        const objectString = Object.keys(node)\n          .map((k) => (k === \"children\" ? \"children: Array\" : `${k}: '${node[k]}'`))\n          .join(\",\\n   \");\n      \n        // alert(\n        //   \"Info passed to the button generator:\\n\\n\" +\n        //     `node: {\\n   ${objectString}\\n},\\n` +\n        //     `path: [${path.join(\", \")}],\\n` +\n        //     `treeIndex: ${treeIndex}`\n        // );\n        setCanvas(node);\n        const ind = [];\n        node.indikator.forEach((el) => {\n            ind.push(\n            <Row className=\"g-0 py-1\" key={el.key}>\n            <Col xs=\"auto\">\n                <div className=\"sw-3 d-inline-block d-flex justify-content-start align-items-center h-100\">\n                <div className=\"sh-3\">\n                    <CsLineIcons icon=\"dashboard-1\" className=\"text-primary align-top\" />\n                </div>\n                </div>\n            </Col>\n            <Col>\n                <div className=\"d-flex flex-column pt-0 pb-0 ps-3 pe-4 h-100 justify-content-center\">\n                <div className=\"d-flex flex-column\">\n                    <div className=\"text-alternate mt-n1 lh-1-25\" style={{fontSize: '12px'}}>{el.indikator}</div>\n                </div>\n                </div>\n            </Col>\n            </Row>\n            );\n        });\n\n        const styBack = node.type_goals.background !== null && node.type_goals.background !== \"\" ? node.type_goals.background : \"\";\n        const styCol = node.type_goals.color !== null && node.type_goals.color !== \"\" ? node.type_goals.color : \"\";\n        setStyleBack(styBack);\n        setStyleCol(styCol);\n        setInd(ind);\n        handleShow();\n    };\n\n    const resJson = [];\n    const loopParseData = (res,data,parent) => {\n        if(data) {\n            let obj = {};\n            data.forEach(\n                \n                function(d,idx,arr) {\n                    if(d.expanded) {\n                        // this.loopParseData(d);\n                        obj = {\n                            id_goals:d. id,\n                            parent_goals: parent,\n                            title_goals: d.title,\n                            pic_goals: currentUser.email,\n                        };\n                        // console.log(`${d.title}, id : ${d.id}, parent : ${parent} Parent of : `);\n                        // resJson += `${d.title} Parent of : `;\n                        // console.log(obj);\n                        loopParseData(res,d.children,d.id);\n                    }else{\n                        obj = {\n                            id_goals: d. id,\n                            parent_goals: parent,\n                            title_goals: d.title,\n                            pic_goals: currentUser.email,\n                        };\n                        // resJson += `${d.title}, id : ${d.id}, parent : ${parent}`;\n                        // console.log(`${d.title}, id : ${d.id}, parent : ${parent}`);\n                        // console.log(obj);\n                    }\n\n                    res.push(obj);\n                }\n\n            );\n        }\n        return res;\n    }\n\n    const handleClickButton = () => {\n        // const { treeData } = this.state;\n        // const loopData = '';\n        // console.log(treeData.keys(\"children\"));\n        // treeData.forEach(\n        //     function(d) {\n        //         console.log(d);\n        //         if(d.expanded) {\n                    \n        //         }\n        //     }\n        // );\n        loopParseData(resJson,treeData,0);\n\n    };\n\n    const handleClickRemapButton = () => {\n        const newMap = loopParseData(resJson,treeData,0);\n        // console.log(newMap);\n        const Remap  =  RemapNode(currentUser.token,newMap).then(function(response) {\n            if(response) {\n              if(response.responseCode === 200) {\n                toast.success(response.responseDesc, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n                // console.log(response.responseData);\n                // result = response.responseData;\n                // console.log(result);\n                // getGoals(result);\n                // setLoading(false);\n                getAllGoals();\n              }else{  \n                toast.error(response.responseDesc, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n              }\n            }\n          });\n    };\n\n    const handleClickCancleButton = () => {\n        // const treeDatas = [...treeData];\n        // console.log(treeDatas);\n        // getGoals(treeDatas);\n        getAllGoals();\n    };\n\n    const handleClickAddParentButton = (parentCanvas) => {\n        // console.log(`${appRoot}/tree/treeadmf/addchild`);\n        const path = `${appRoot}/tree/treeadmf/addchild`; \n        // console.log(path);\n        history.push(path,{\n            id: parentCanvas.id,\n            title: parentCanvas.title\n        });\n    };\n\n    const handleClicUpdkButton = (parentCanvas) => {\n        const path = `${appRoot}/tree/treeadmf/updnode`; \n        // console.log(path);\n        history.push(path,{\n            id: parentCanvas.id,\n            title: parentCanvas.title,\n            desc: parentCanvas.description,\n            startDate: parentCanvas.start_date,\n            dueDate: parentCanvas.due_date,\n            typeGoals: parentCanvas.type_goals,\n            indikator: parentCanvas.indikator,\n        });\n    };\n\n    const handleClickAddButton = (parentCanvas) => {\n        // console.log(`${appRoot}/tree/treeadmf/addchild`);\n        const path = `${appRoot}/tree/treeadmf/addchild`; \n        // console.log(path);\n        history.push(path,{\n            id: parentCanvas.id,\n            title: parentCanvas.title\n        });\n    };\n\n    \n    const onSubmit = (values) => {\n        console.log(values);\n    };\n\n\n    useEffect(() => {\n        getAllGoals();\n    }, []);\n    \n    // const maxDepth = 5; \n    const title = 'Tree Admin Page';\n    const description = 'An page for configure the tree view.';\n    const breadcrumbs = [{ to: '', text: 'Home' }];\n    const validationSchema = Yup.object().shape({\n        searchField: Yup.string().required('Search is required'),\n    });\n    const initialValues = { searchField: '' };\n    const formik = useFormik({ initialValues, validationSchema, onSubmit });\n    const { handleSubmit, handleChange, values, touched, errors } = formik;\n\n    if (isLoading) {\n        return <div className=\"App\">Loading...</div>;\n    }\n\n    return (    \n        <div className=\"App scroll-out\">\n            <HtmlHead title={title} description={description} />\n            <div className=\"override-native overflow-auto sh-100 pe-3\">\n            <Row>\n                <Col>\n                    {/* Title Start */}\n                    <section className=\"scroll-section\" id=\"title\">\n                    <div className=\"page-title-container\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </div>\n                    {/* <Card className=\"mb-2\" body>\n                        <Card.Text>{description}</Card.Text>\n\n                        <div className=\"g-0 row\">\n                            <div className=\"d-flex align-items-start justify-content-end justify-content-lg-start col-md col-12 mb-1\">\n                                <form id=\"searchForm\" className=\"tooltip-end-bottom me-lg-auto w-100 w-md-auto search-input-container border border-separator \" onSubmit={handleSubmit}>\n                                <div className=\"input-group\">\n                                <Form.Control id=\"searchField\" className=\"\" placeholder=\"Search Node\" value={values.searchField} onChange={handleChange} />\n                                <button id=\"button-addon\" type=\"submit\" className=\"btn btn-outline-secondary\">\n                                    <span className=\"search-magnifier-icon pe-none\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"cs-icon search \">\n                                        <circle cx=\"9\" cy=\"9\" r=\"7\"> </circle>\n                                        <path d=\"M14 14L17.5 17.5\"> </path>\n                                        </svg>\n                                    </span>\n                                </button>\n                                </div>\n                                </form> \n                                <button type=\"button\" className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"cs-icon plus \">\n                                    <path d=\"M10 17 10 3M3 10 17 10\"> </path>\n                                </svg> \n                                <span>Go to Top</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Card> */}\n                    {/* <Card body> */}\n                        {dismissingAlertShow && (\n                            <Alert variant=\"alert\" onClose={() => setDismissingAlertShow(false)} dismissible>\n                            <strong>Data goals is empty! </strong> You should add Parent Node.\n                            </Alert>\n                        )}\n                    {/* </Card> */}\n                    <Card className=\"mb-3\" body>\n                        \n                        <SortableTree\n                            className=\"mb-3\"\n                            treeData={treeData}\n                            onChange={handleTreeOnChange}\n                            isVirtualized= {false}\n                            // maxDepth={maxDepth}\n                            generateNodeProps={(rowInfo) => {\n                                const { node } = rowInfo;\n                                // console.log(node);\n                                return {\n                                    buttons: [\n                                    <button\n                                        type=\"button\"\n                                        key={node}\n                                        className=\"btn-xs btn-outline-default\"\n                                        style={{\n                                            verticalAlign: \"middle\",\n                                            background: node.type_goals.background !== null && node.type_goals.background !== \"\" ? node.type_goals.background : \"\",\n                                            color: node.type_goals.color !== null && node.type_goals.color !== \"\" ? node.type_goals.color : \"\",\n                                            width: \"50px\",\n                                        }}\n                                        onClick={() => alertNodeInfo(rowInfo)}\n                                    >\n                                        ℹ\n                                    </button>\n                                    ],\n                                    onClick: () => {\n                                        handleNodeClick(node);\n                                    },\n                                    style:\n                                    node === nodeClicked\n                                        ? {\n                                            border: \"3px solid yellow\",\n                                        }\n                                        : {\n                                            \n                                        }\n                                };\n                            }}\n                            />\n                            <ButtonGroup aria-label=\"Basic outlined example\">\n                                <button type=\"button\" onClick={() => handleClickRemapButton()} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                                    Submit New Map\n                                </button>\n                                <button type=\"button\" onClick={() => handleClickCancleButton()} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-warning\">\n                                    Cancel\n                                </button>\n                                {dismissingAlertShow && (\n                                    <button type=\"button\" onClick={() => handleClickAddParentButton()} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                                        Add Parent\n                                    </button>\n                                )}\n                            </ButtonGroup>\n                    </Card>\n                    </section>\n                {/* Title End */}\n                </Col>\n            </Row>\n            <Offcanvas show={show} onHide={handleClose} placement=\"end\" name=\"end\">\n                <Offcanvas.Header closeButton className=\"row\" style={{ backgroundColor:styleBackround, color: styleColor }}>\n                    <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Title</small>\n                    <Offcanvas.Title className=\"sm-12\">\n                        {canvas.title}\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body style={{background:\"var(--background-navcolor-dark)\"}}>\n                    <Card className=\"mb-3\" body style={{background:\"rgba(255,255,255,.05) !important\"}}>\n                        <Card.Header className=\"pt-0 pb-1\">\n                            <div className=\"row mt-0 mb-0 d-flex align-items-start justify-content-end justify-content-lg-start\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">PIC</small>\n                                <span className=\"col-md col-6 sm-6\">{canvas.firstName}</span>\n                                <span className=\"col-md col-6 sm-6\">{canvas.pic}</span>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Description</small>\n                                <span className=\"sm-12\"><Card.Text>{canvas.description}</Card.Text></span>\n                            </div>\n                        </Card.Body>\n                        <Card.Body>\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Progress</small>\n                                <span className=\"sm-12\"><Card.Text>{canvas.progress}</Card.Text></span>\n                            </div>\n                        </Card.Body>\n                        <Card.Footer className=\"pt-0 pb-1\">\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12 col-md col-6\">Start Date</small>\n                                <span className=\"col-md col-6 sm-12\"><Card.Text>{canvas.start_date}</Card.Text></span>\n                            </div>\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12 col-md col-6\">End Date</small>\n                                <span className=\"col-md col-6 sm-12\"><Card.Text>{canvas.due_date}</Card.Text></span>\n                            </div>\n                        </Card.Footer>\n                    </Card>\n                    <Card className=\"mb-3\" body style={{background:\"rgba(255,255,255,.05) !important\"}}>\n                        <Card.Header className=\"pt-0 pb-1\">\n                            <div className=\"row mt-0 mb-0 d-flex align-items-start justify-content-end justify-content-lg-start\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Indikator : </small>\n                            </div>\n                        </Card.Header>\n                        <Card.Body className=\"mb-n2 py-1\">\n                        {indData}\n                        </Card.Body>\n                    </Card>\n                    <div className=\"btn-group\">\n                        <button type=\"button\" onClick={() => {handleClickAddButton(canvas)}} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                            Add Child\n                        </button>\n                        <button type=\"button\" onClick={() => {handleClicUpdkButton(canvas)}} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-warning\">\n                            Update\n                        </button>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n            </div>\n        </div>\n    )\n\n};\n\nexport default TreeAdminFun;\n"]},"metadata":{},"sourceType":"module"}