{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeViewDabeng.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport OrganizationChart from \"@dabeng/react-orgchart\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { Signup } from '../services/signin';\nimport MyNode from \"../components/node/mynode\";\nimport { TreeView } from '../services/treeservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleClick = null;\n\nconst TreeViewDabeng = () => {\n  _s();\n\n  const {\n    currentUser,\n    isLogin\n  } = useSelector(state => state.auth);\n  const [goals, getGoals] = useState('');\n\n  const getAllGoals = () => {\n    const Signups = TreeView(currentUser.token).then(function (response) {\n      if (response) {\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          getGoals(response.responseData);\n          console.log(goals);\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllGoals();\n  }, []);\n  let ds = {\n    id: \"n1\",\n    name: \"Mr. Jonathan\",\n    title: \"general manager\",\n    children: [{\n      id: \"n2\",\n      name: \"Ms. Perera\",\n      title: \"department manager\"\n    }, {\n      id: \"n3\",\n      name: \"Ms. Juli\",\n      title: \"department manager\"\n    }, {\n      id: \"n9\",\n      name: \"Ms. Percy\",\n      title: \"department manager\"\n    }, {\n      id: \"n10\",\n      name: \"Mr. Markes\",\n      title: \"department manager\",\n      children: [{\n        id: \"n11\",\n        name: \"Mr. Markes\",\n        title: \"senior engineer\"\n      }]\n    }]\n  };\n\n  handleClick = () => {\n    // console.log('submit form', values);\n    const Signups = TreeView(currentUser.token).then(function (response) {\n      if (response) {\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          ds = response.responseData;\n          console.log(ds);\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n    });\n  };\n\n  const title = 'Tree Admin Page';\n  const description = 'An page for configure the tree view.';\n  const breadcrumbs = [{\n    to: '',\n    text: 'Home'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App2\",\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"scroll-section\",\n          id: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0 pb-0 display-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n              items: breadcrumbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"EmptyDiv\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OrganizationChart, {\n            datasource: ds,\n            chartClass: \"myChart\",\n            NodeTemplate: MyNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleClick,\n          children: \"Click Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeViewDabeng, \"SLDOHDF4JIf+XkRi5lbpYKEYWg4=\", false, function () {\n  return [useSelector];\n});\n\n_c = TreeViewDabeng;\nexport default TreeViewDabeng;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeViewDabeng\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeViewDabeng.js"],"names":["React","useEffect","useState","OrganizationChart","Row","Col","Card","HtmlHead","BreadcrumbList","useCustomLayout","MENU_PLACEMENT","LAYOUT","toast","useSelector","Signup","MyNode","TreeView","handleClick","TreeViewDabeng","currentUser","isLogin","state","auth","goals","getGoals","getAllGoals","Signups","token","then","response","responseCode","success","responseDesc","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","responseData","console","log","error","ds","id","name","title","children","description","breadcrumbs","to","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport OrganizationChart from \"@dabeng/react-orgchart\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport useCustomLayout from 'hooks/useCustomLayout';\nimport { MENU_PLACEMENT, LAYOUT } from 'constants.js';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { Signup } from '../services/signin';\nimport MyNode from \"../components/node/mynode\";\nimport { TreeView } from '../services/treeservice';\n\n\nlet handleClick = null;\n\nconst TreeViewDabeng = () => {\n    const { currentUser, isLogin } = useSelector((state) => state.auth);\n    const [goals, getGoals] = useState('');\n    const getAllGoals = () => {\n      const Signups  =  TreeView(currentUser.token).then(function(response) {\n        if(response) {\n          if(response.responseCode === 200) {\n            toast.success(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            getGoals(response.responseData);\n            console.log(goals);\n          }else{  \n            toast.error(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      });\n    }\n\n    useEffect(() => {\n      getAllGoals();\n    }, []);\n\n    let ds = {\n      id: \"n1\",\n      name: \"Mr. Jonathan\",\n      title: \"general manager\",\n      children: [\n        { id: \"n2\", name: \"Ms. Perera\", title: \"department manager\" },\n        {\n          id: \"n3\",\n          name: \"Ms. Juli\",\n          title: \"department manager\"\n        },\n        { id: \"n9\", name: \"Ms. Percy\", title: \"department manager\" },\n        {\n          id: \"n10\",\n          name: \"Mr. Markes\",\n          title: \"department manager\",\n          children: [{ id: \"n11\", name: \"Mr. Markes\", title: \"senior engineer\" }]\n        }\n      ]\n    };\n\n    handleClick = () => {\n      // console.log('submit form', values);\n      const Signups  =  TreeView(currentUser.token).then(function(response) {\n        if(response) {\n          if(response.responseCode === 200) {\n            toast.success(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            ds = response.responseData;\n            console.log(ds);\n          }else{  \n            toast.error(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      });\n    }\n\n\n    const title = 'Tree Admin Page';\n    const description = 'An page for configure the tree view.';\n\n    const breadcrumbs = [{ to: '', text: 'Home' }];\n  \n    return (\n        \n        <div className=\"App2\">\n            <HtmlHead title={title} description={description} />\n            <Row>\n                <Col>\n                    {/* Title Start */}\n                    <section className=\"scroll-section\" id=\"title\">\n                    <div className=\"page-title-container\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </div>\n                    {/* <Card className=\"mb-5\" body>\n                        <Card.Text>{description}</Card.Text> */}\n                        <div className=\"EmptyDiv\"> </div>\n                        <OrganizationChart\n                            datasource={ds}\n                            chartClass=\"myChart\"\n                            NodeTemplate={MyNode}\n                        />\n                        {/* </Card> */}\n                    </section>\n                {/* Title End */}\n                <button type=\"button\" onClick={handleClick}>\n                    Click Me\n                </button>\n                </Col>\n            </Row>\n        </div>\n      \n    );\n};\n  \n  export default TreeViewDabeng;"]},"metadata":{},"sourceType":"module"}