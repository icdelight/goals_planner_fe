{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useWindowSize = () => {\n  _s();\n\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    let resizeTimer = -1;\n\n    function handleResize() {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }, 50);\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      clearTimeout(resizeTimer);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowSize;\n};\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/hooks/useWindowSize.js"],"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","undefined","height","resizeTimer","handleResize","clearTimeout","setTimeout","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC;AAC3CK,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,WAAW,GAAG,CAAC,CAAnB;;AACA,aAASC,YAAT,GAAwB;AACtBC,MAAAA,YAAY,CAACF,WAAD,CAAZ;AACAA,MAAAA,WAAW,GAAGG,UAAU,CAAC,MAAM;AAC7BP,QAAAA,aAAa,CAAC;AAAEC,UAAAA,KAAK,EAAEO,MAAM,CAACC,UAAhB;AAA4BN,UAAAA,MAAM,EAAEK,MAAM,CAACE;AAA3C,SAAD,CAAb;AACD,OAFuB,EAErB,EAFqB,CAAxB;AAGD;;AACDF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACAA,IAAAA,YAAY;AAEZ,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACF,WAAD,CAAZ;AACAI,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCP,YAArC;AACD,KAHD;AAID,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAON,UAAP;AACD,CAvBM;;GAAMD,a","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    let resizeTimer = -1;\n    function handleResize() {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n      }, 50);\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      clearTimeout(resizeTimer);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowSize;\n};\n"]},"metadata":{},"sourceType":"module"}