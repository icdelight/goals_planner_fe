{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js';\nlet response = {\n  responseCode: 999,\n  responseDesc: \"\",\n  responseData: null\n};\nconst header = {\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n  }\n};\nexport const Signin = async (email, password, dispatch) => {\n  const result = await axios.post(`${URL_SERVICE}auth/signin`, {\n    user: email,\n    pass: password\n  }).then(res => {\n    console.log(res); //   console.log(res.data);\n\n    if (res) {\n      if (res.data) {\n        if (res.data.userData) {\n          if (res.data.userData.id && res.data.userData.fullname && res.data.userData.role && res.data.userData.name && res.data.tokens.access_token) {\n            const user = {\n              id: res.data.userData.id,\n              name: res.data.userData.fullname,\n              thumb: '/img/profile/profile-9.webp',\n              role: res.data.userData.role,\n              email: res.data.userData.name,\n              token: res.data.tokens.access_token\n            };\n            console.log(user);\n            dispatch(setCurrentUser(user));\n            authReducer.bind();\n            response = {\n              responseCode: res.data.statusCode,\n              responseDesc: res.data.message,\n              responseData: user\n            };\n          } else {\n            response = {\n              responseCode: 999,\n              responseDesc: 'Invalid response. 1',\n              responseData: null\n            };\n          }\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  }); // console.log(result);\n\n  return result;\n};\n_c = Signin;\nexport const Signup = async (name, email, password, dispatch) => {\n  const result = await axios.post(`${URL_SERVICE}auth/signup`, {\n    user: email,\n    pass: password\n  }).then(res => {\n    console.log(res); //   console.log(res.data);\n\n    if (res) {\n      if (res.data) {\n        if (res.data.userData) {\n          if (res.data.userData.id && res.data.userData.fullname && res.data.userData.role && res.data.userData.name && res.data.tokens.access_token) {\n            const user = {\n              id: res.data.userData.id,\n              name: res.data.userData.fullname,\n              thumb: '/img/profile/profile-9.webp',\n              role: res.data.userData.role,\n              email: res.data.userData.name,\n              token: res.data.tokens.access_token\n            };\n            console.log(user);\n            dispatch(setCurrentUser(user));\n            authReducer.bind();\n            response = {\n              responseCode: res.data.statusCode,\n              responseDesc: res.data.message,\n              responseData: user\n            };\n          } else {\n            response = {\n              responseCode: 999,\n              responseDesc: 'Invalid response. 1',\n              responseData: null\n            };\n          }\n        } else {\n          response = {\n            responseCode: 999,\n            responseDesc: 'Invalid response. 2',\n            responseData: null\n          };\n        }\n      } else {\n        response = {\n          responseCode: 999,\n          responseDesc: 'Invalid response. 3',\n          responseData: null\n        };\n      }\n    } else {\n      response = {\n        responseCode: 999,\n        responseDesc: 'Failled to parse response.',\n        responseData: null\n      };\n    }\n\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  }); // console.log(result);\n\n  return result;\n};\n_c2 = Signup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signin\");\n$RefreshReg$(_c2, \"Signup\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/services/signin.js"],"names":["React","axios","authReducer","setCurrentUser","LAYOUT","MENU_BEHAVIOUR","NAV_COLOR","MENU_PLACEMENT","RADIUS","THEME_COLOR","USER_ROLE","URL_SERVICE","response","responseCode","responseDesc","responseData","header","headers","Signin","email","password","dispatch","result","post","user","pass","then","res","console","log","data","userData","id","fullname","role","name","tokens","access_token","thumb","token","bind","statusCode","message","catch","error","status","request","Signup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport authReducer, { setCurrentUser } from 'auth/authSlice';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nimport { URL_SERVICE } from 'config.js'\n\n\nlet response = {\n    responseCode : 999,\n    responseDesc : \"\",\n    responseData : null,\n};\nconst header = {\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n};\n\nexport const Signin = async (email,password,dispatch) => {\n    const result = await axios.post( `${URL_SERVICE}auth/signin`, { user: email, pass: password })\n    .then(res => {\n      console.log(res);\n    //   console.log(res.data);\n        if(res) {\n            if(res.data) {\n                if(res.data.userData) {\n                    if(res.data.userData.id && res.data.userData.fullname && res.data.userData.role && res.data.userData.name && res.data.tokens.access_token) {\n                        const user = {\n                            id: res.data.userData.id,\n                            name: res.data.userData.fullname,\n                            thumb: '/img/profile/profile-9.webp',\n                            role: res.data.userData.role,\n                            email: res.data.userData.name,\n                            token: res.data.tokens.access_token,\n                        };\n                        console.log(user);\n                        dispatch(setCurrentUser(user));\n                        authReducer.bind();\n                        response = {\n                            responseCode : res.data.statusCode,\n                            responseDesc : res.data.message,\n                            responseData : user,\n                        };\n                    }else{\n                        response = {\n                            responseCode : 999,\n                            responseDesc : 'Invalid response. 1',\n                            responseData : null,\n                        };\n                    }\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    // console.log(result);\n    return result;\n}\n\nexport const Signup = async (name,email,password,dispatch) => {\n    const result = await axios.post( `${URL_SERVICE}auth/signup`, { user: email, pass: password })\n    .then(res => {\n      console.log(res);\n    //   console.log(res.data);\n        if(res) {\n            if(res.data) {\n                if(res.data.userData) {\n                    if(res.data.userData.id && res.data.userData.fullname && res.data.userData.role && res.data.userData.name && res.data.tokens.access_token) {\n                        const user = {\n                            id: res.data.userData.id,\n                            name: res.data.userData.fullname,\n                            thumb: '/img/profile/profile-9.webp',\n                            role: res.data.userData.role,\n                            email: res.data.userData.name,\n                            token: res.data.tokens.access_token,\n                        };\n                        console.log(user);\n                        dispatch(setCurrentUser(user));\n                        authReducer.bind();\n                        response = {\n                            responseCode : res.data.statusCode,\n                            responseDesc : res.data.message,\n                            responseData : user,\n                        };\n                    }else{\n                        response = {\n                            responseCode : 999,\n                            responseDesc : 'Invalid response. 1',\n                            responseData : null,\n                        };\n                    }\n                }else{\n                    response = {\n                        responseCode : 999,\n                        responseDesc : 'Invalid response. 2',\n                        responseData : null,\n                    };\n                }\n            }else{\n                response = {\n                    responseCode : 999,\n                    responseDesc : 'Invalid response. 3',\n                    responseData : null,\n                };\n            }\n        }else{\n            response = {\n                responseCode : 999,\n                responseDesc : 'Failled to parse response.',\n                responseData : null,\n            };\n        }\n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    // console.log(result);\n    return result;\n}"]},"metadata":{},"sourceType":"module"}