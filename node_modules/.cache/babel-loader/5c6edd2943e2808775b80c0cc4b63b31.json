{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\nlet response = {\n  responseCode: 999,\n  responseDesc: \"\",\n  responseData: null\n};\nconst header = {\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n  }\n};\nconst dispatch = useDispatch();\nexport const Signin = async (email, password) => {\n  const result = await axios.post(`http://localhost:8000/auth/signin`, {\n    user: email,\n    pass: password\n  }).then(res => {\n    console.log(res); //   console.log(res.data);\n\n    const user_res = {\n      id: 1,\n      name: 'Lisa Jackson',\n      thumb: '/img/profile/profile-9.webp',\n      role: USER_ROLE.Admin,\n      email: 'lisajackson@gmail.com'\n    };\n    dispatch(setCurrentUser(user_res));\n    response = {\n      responseCode: res.data.statusCode,\n      responseDesc: res.data.message,\n      responseData: null\n    };\n    return response;\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n      response = {\n        responseCode: error.response.status,\n        responseDesc: error.response.data.message,\n        responseData: null\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      // console.log(error.request);\n      response = {\n        responseCode: 999,\n        responseDesc: error.request,\n        responseData: null\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      // console.log('Error', error.message);\n      response = {\n        responseCode: 999,\n        responseDesc: `Something went wrong, ${error.message}`,\n        responseData: null\n      };\n    }\n\n    return response;\n  });\n  console.log(result);\n  return result;\n};\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/services/signin.js"],"names":["React","axios","useDispatch","useSelector","LAYOUT","MENU_BEHAVIOUR","NAV_COLOR","MENU_PLACEMENT","RADIUS","THEME_COLOR","USER_ROLE","response","responseCode","responseDesc","responseData","header","headers","dispatch","Signin","email","password","result","post","user","pass","then","res","console","log","user_res","id","name","thumb","role","Admin","setCurrentUser","data","statusCode","message","catch","error","status","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,SAAjC,EAA4CC,cAA5C,EAA4DC,MAA5D,EAAoEC,WAApE,EAAiFC,SAAjF,QAAkG,cAAlG;AAGA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,YAAY,EAAG,GADJ;AAEXC,EAAAA,YAAY,EAAG,EAFJ;AAGXC,EAAAA,YAAY,EAAG;AAHJ,CAAf;AAKA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADE,CAAf;AAKA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,OAAO,MAAMgB,MAAM,GAAG,OAAOC,KAAP,EAAaC,QAAb,KAA0B;AAC5C,QAAMC,MAAM,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAY,mCAAZ,EAAgD;AAAEC,IAAAA,IAAI,EAAEJ,KAAR;AAAeK,IAAAA,IAAI,EAAEJ;AAArB,GAAhD,EACpBK,IADoB,CACfC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADW,CAEb;;AACI,UAAMG,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAE,CADS;AAEbC,MAAAA,IAAI,EAAE,cAFO;AAGbC,MAAAA,KAAK,EAAE,6BAHM;AAIbC,MAAAA,IAAI,EAAEvB,SAAS,CAACwB,KAJH;AAKbf,MAAAA,KAAK,EAAE;AALM,KAAjB;AAOAF,IAAAA,QAAQ,CAACkB,cAAc,CAACN,QAAD,CAAf,CAAR;AACAlB,IAAAA,QAAQ,GAAG;AACPC,MAAAA,YAAY,EAAGc,GAAG,CAACU,IAAJ,CAASC,UADjB;AAEPxB,MAAAA,YAAY,EAAGa,GAAG,CAACU,IAAJ,CAASE,OAFjB;AAGPxB,MAAAA,YAAY,EAAG;AAHR,KAAX;AAMA,WAAOH,QAAP;AACH,GAnBoB,EAoBpB4B,KApBoB,CAoBb,UAASC,KAAT,EAAgB;AACpB,QAAIA,KAAK,CAAC7B,QAAV,EAAoB;AAChB;AACA;AACA;AACA;AACAA,MAAAA,QAAQ,GAAG;AACPC,QAAAA,YAAY,EAAG4B,KAAK,CAAC7B,QAAN,CAAe8B,MADvB;AAEP5B,QAAAA,YAAY,EAAG2B,KAAK,CAAC7B,QAAN,CAAeyB,IAAf,CAAoBE,OAF5B;AAGPxB,QAAAA,YAAY,EAAG;AAHR,OAAX;AAKH,KAVD,MAUO,IAAI0B,KAAK,CAACE,OAAV,EAAmB;AACtB;AACA;AACA/B,MAAAA,QAAQ,GAAG;AACPC,QAAAA,YAAY,EAAG,GADR;AAEPC,QAAAA,YAAY,EAAG2B,KAAK,CAACE,OAFd;AAGP5B,QAAAA,YAAY,EAAG;AAHR,OAAX;AAKH,KARM,MAQA;AACH;AACA;AACAH,MAAAA,QAAQ,GAAG;AACPC,QAAAA,YAAY,EAAG,GADR;AAEPC,QAAAA,YAAY,EAAI,yBAAwB2B,KAAK,CAACF,OAAQ,EAF/C;AAGPxB,QAAAA,YAAY,EAAG;AAHR,OAAX;AAKH;;AACD,WAAOH,QAAP;AACH,GAjDoB,CAArB;AAkDAgB,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,SAAOA,MAAP;AACH,CArDM;KAAMH,M","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LAYOUT, MENU_BEHAVIOUR, NAV_COLOR, MENU_PLACEMENT, RADIUS, THEME_COLOR, USER_ROLE } from 'constants.js';\n\n\nlet response = {\n    responseCode : 999,\n    responseDesc : \"\",\n    responseData : null,\n}\nconst header = {\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n};\nconst dispatch = useDispatch();\n\nexport const Signin = async (email,password) => {\n    const result = await axios.post(`http://localhost:8000/auth/signin`, { user: email, pass: password })\n    .then(res => {\n      console.log(res);\n    //   console.log(res.data);\n        const user_res = {\n            id: 1,\n            name: 'Lisa Jackson',\n            thumb: '/img/profile/profile-9.webp',\n            role: USER_ROLE.Admin,\n            email: 'lisajackson@gmail.com',\n        };\n        dispatch(setCurrentUser(user_res));\n        response = {\n            responseCode : res.data.statusCode,\n            responseDesc : res.data.message,\n            responseData : null,\n        };\n        \n        return response;\n    })\n    .catch( function(error) {\n        if (error.response) {\n            // Request made and server responded\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            response = {\n                responseCode : error.response.status,\n                responseDesc : error.response.data.message,\n                responseData : null,\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // console.log(error.request);\n            response = {\n                responseCode : 999,\n                responseDesc : error.request,\n                responseData : null,\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            // console.log('Error', error.message);\n            response = {\n                responseCode : 999,\n                responseDesc : `Something went wrong, ${error.message}`,\n                responseData : null,\n            };\n        }  \n        return response; \n    });\n    console.log(result);\n    return result;\n}"]},"metadata":{},"sourceType":"module"}