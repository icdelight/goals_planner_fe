{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/goals_planner_fe/goals_planner_fe/src/components/scrollspy/ScrollspyMobile.js\";\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyContent from './ScrollspyContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScrollspyToggle = /*#__PURE__*/React.forwardRef(_c = ({\n  children,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"a\", {\n  href: \"#/!\",\n  ref: ref,\n  className: \"spy-button text-white\",\n  onClick: e => {\n    e.preventDefault();\n    onClick(e);\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this));\n_c2 = ScrollspyToggle;\nScrollspyToggle.displayName = 'ScrollspyToggle';\n\nconst ScrollspyMobile = ({\n  items = []\n}) => {\n  if (items === null || items.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        as: ScrollspyToggle,\n        children: /*#__PURE__*/_jsxDEV(CsLineIcons, {\n          icon: \"menu-dropdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        as: \"ul\",\n        className: \"dropdown-menu-end\",\n        popperConfig: {\n          modifiers: [{\n            name: 'offset',\n            options: {\n              offset: [0, 5]\n            }\n          }]\n        },\n        children: /*#__PURE__*/_jsxDEV(ScrollspyContent, {\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = ScrollspyMobile;\nexport default _c4 = /*#__PURE__*/React.memo(ScrollspyMobile);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ScrollspyToggle$React.forwardRef\");\n$RefreshReg$(_c2, \"ScrollspyToggle\");\n$RefreshReg$(_c3, \"ScrollspyMobile\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/goals_planner_fe/goals_planner_fe/src/components/scrollspy/ScrollspyMobile.js"],"names":["React","Dropdown","CsLineIcons","ScrollspyContent","ScrollspyToggle","forwardRef","children","onClick","ref","e","preventDefault","displayName","ScrollspyMobile","items","length","modifiers","name","options","offset","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,EAAwBC,GAAxB,kBACvC;AACE,EAAA,IAAI,EAAC,KADP;AAEE,EAAA,GAAG,EAAEA,GAFP;AAGE,EAAA,SAAS,EAAC,uBAHZ;AAIE,EAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACE,CAAD,CAAP;AACD,GAPH;AAAA,YASGH;AATH;AAAA;AAAA;AAAA;AAAA,QADsB,CAAxB;MAAMF,e;AAaNA,eAAe,CAACO,WAAhB,GAA8B,iBAA9B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAC1C,MAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACC,MAAN,IAAgB,CAAtC,EAAyC;AACvC,wBAAO,qCAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,EAAE,EAAEV,eAArB;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD,CAAU,IAAV;AACE,QAAA,EAAE,EAAC,IADL;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,YAAY,EAAE;AACZW,UAAAA,SAAS,EAAE,CACT;AACEC,YAAAA,IAAI,EAAE,QADR;AAEEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AADD;AAFX,WADS;AADC,SAHhB;AAAA,+BAcE,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD,CA9BD;;MAAMD,e;AA+BN,kCAAeZ,KAAK,CAACmB,IAAN,CAAWP,eAAX,CAAf","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyContent from './ScrollspyContent';\n\nconst ScrollspyToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"#/!\"\n    ref={ref}\n    className=\"spy-button text-white\"\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\nScrollspyToggle.displayName = 'ScrollspyToggle';\n\nconst ScrollspyMobile = ({ items = [] }) => {\n  if (items === null || items.length <= 0) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Dropdown>\n        <Dropdown.Toggle as={ScrollspyToggle}>\n          <CsLineIcons icon=\"menu-dropdown\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          as=\"ul\"\n          className=\"dropdown-menu-end\"\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: [0, 5],\n                },\n              },\n            ],\n          }}\n        >\n          <ScrollspyContent items={items} />\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\nexport default React.memo(ScrollspyMobile);\n"]},"metadata":{},"sourceType":"module"}