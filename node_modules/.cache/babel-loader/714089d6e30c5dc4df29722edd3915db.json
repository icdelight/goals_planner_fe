{"ast":null,"code":"import React, { Component } from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nclass OverlayScrollbarsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this._osInstance = null;\n    this._osTargetRef = React.createRef();\n  }\n\n  osInstance() {\n    return this._osInstance;\n  }\n\n  osTarget() {\n    return this._osTargetRef.current || null;\n  }\n\n  componentDidMount() {\n    this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n    mergeHostClassNames(this._osInstance, this.props.className);\n  }\n\n  componentWillUnmount() {\n    if (OverlayScrollbars.valid(this._osInstance)) {\n      this._osInstance.destroy();\n\n      this._osInstance = null;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (OverlayScrollbars.valid(this._osInstance)) {\n      this._osInstance.options(this.props.options);\n\n      if (prevProps.className !== this.props.className) {\n        mergeHostClassNames(this._osInstance, this.props.className);\n      }\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          divProps = __rest(_a, [\"options\", \"extensions\", \"children\", \"className\"]);\n\n    return React.createElement(\"div\", Object.assign({\n      className: \"os-host\"\n    }, divProps, {\n      ref: this._osTargetRef\n    }), React.createElement(\"div\", {\n      className: \"os-resize-observer-host\"\n    }), React.createElement(\"div\", {\n      className: \"os-padding\"\n    }, React.createElement(\"div\", {\n      className: \"os-viewport\"\n    }, React.createElement(\"div\", {\n      className: \"os-content\"\n    }, this.props.children))), React.createElement(\"div\", {\n      className: \"os-scrollbar os-scrollbar-horizontal \"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-track\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-handle\"\n    }))), React.createElement(\"div\", {\n      className: \"os-scrollbar os-scrollbar-vertical\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-track\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-handle\"\n    }))), React.createElement(\"div\", {\n      className: \"os-scrollbar-corner\"\n    }));\n  }\n\n}\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    const {\n      host\n    } = osInstance.getElements();\n    const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n    const osClassNames = host.className.split(' ').filter(name => name.match(regex)).join(' ');\n    host.className = `${osClassNames} ${className || ''}`;\n  }\n}\n\nexport { OverlayScrollbarsComponent };","map":null,"metadata":{},"sourceType":"module"}