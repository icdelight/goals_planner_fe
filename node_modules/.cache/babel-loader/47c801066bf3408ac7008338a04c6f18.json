{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/layout/nav/sidebar-menu/SidebarMenuItems.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { USE_MULTI_LANGUAGE } from 'config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SidebarMenuItems = /*#__PURE__*/React.memo(_c = ({\n  menuItems = []\n}) => menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(SidebarMenuItem, {\n  id: item.path,\n  item: item\n}, `menu.${item.path}.${index}`, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 34\n}, this)));\n_c2 = SidebarMenuItems;\nSidebarMenuItems.displayName = 'SidebarMenuItems';\n\nconst SidebarMenuItem = ({\n  item,\n  id\n}) => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const {\n    formatMessage: f\n  } = useIntl();\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const getLabel = (icon, label) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [icon && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CsLineIcons, {\n        icon: icon,\n        className: \"cs-icon icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), ' ']\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"label\",\n      children: USE_MULTI_LANGUAGE ? f({\n        id: label\n      }) : label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  if (item.subs) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: item.path,\n        className: classNames({\n          active: isActive\n        }),\n        \"data-bs-target\": item.path,\n        children: getLabel(item.icon, item.label)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(SidebarMenuItems, {\n          menuItems: item.subs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (item.isExternal) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.path,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: getLabel(item.icon, item.label)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      to: item.path,\n      className: classNames({\n        active: isActive\n      }),\n      activeClassName: \"\",\n      children: getLabel(item.icon, item.label)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarMenuItem, \"omNN9+fMtJ80E4u1Q46UuXspWtc=\", false, function () {\n  return [useLocation, useIntl];\n});\n\n_c3 = SidebarMenuItem;\nexport default SidebarMenuItems;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SidebarMenuItems$React.memo\");\n$RefreshReg$(_c2, \"SidebarMenuItems\");\n$RefreshReg$(_c3, \"SidebarMenuItem\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/layout/nav/sidebar-menu/SidebarMenuItems.js"],"names":["React","classNames","NavLink","useLocation","useIntl","CsLineIcons","USE_MULTI_LANGUAGE","SidebarMenuItems","memo","menuItems","map","item","index","path","displayName","SidebarMenuItem","id","pathname","formatMessage","f","isActive","startsWith","indexOf","getLabel","icon","label","subs","active","isExternal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { USE_MULTI_LANGUAGE } from 'config.js';\n\nconst SidebarMenuItems = React.memo(({ menuItems = [] }) =>\n  menuItems.map((item, index) => <SidebarMenuItem key={`menu.${item.path}.${index}`} id={item.path} item={item} />)\n);\nSidebarMenuItems.displayName = 'SidebarMenuItems';\n\nconst SidebarMenuItem = ({ item, id }) => {\n  const { pathname } = useLocation();\n  const { formatMessage: f } = useIntl();\n\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const getLabel = (icon, label) => (\n    <>\n      {icon && (\n        <>\n          <CsLineIcons icon={icon} className=\"cs-icon icon\" />{' '}\n        </>\n      )}\n      <span className=\"label\">{USE_MULTI_LANGUAGE ? f({ id: label }) : label}</span>\n    </>\n  );\n\n  if (item.subs) {\n    return (\n      <li>\n        <NavLink to={item.path} className={classNames({ active: isActive })} data-bs-target={item.path}>\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n        <ul>\n          <SidebarMenuItems menuItems={item.subs} />\n        </ul>\n      </li>\n    );\n  }\n  if (item.isExternal) {\n    return (\n      <li key={id}>\n        <a href={item.path} target=\"_blank\" rel=\"noopener noreferrer\">\n          {getLabel(item.icon, item.label)}\n        </a>\n      </li>\n    );\n  }\n  return (\n    <li>\n      <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n        {getLabel(item.icon, item.label)}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default SidebarMenuItems;\n"]},"metadata":{},"sourceType":"module"}