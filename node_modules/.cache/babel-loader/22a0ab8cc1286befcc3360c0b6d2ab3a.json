{"ast":null,"code":"import { DIMENSION, MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js'; // Decides which type of menu to add based on the parameters or the current window size.\n// placementStatus:\n// 1 {selected: 'horizontal',  dimension: 'mobile',         html-data: 'horizontal', view: 'vertical'}\n// 2 {selected: 'horizontal',  dimension: 'tablet|desktop', html-data: 'horizontal', view: 'horizontal'}\n// 3 {selected: 'vertical',    dimension: 'mobile',         html-data: 'horizontal', view: 'vertical' }\n// 4 {selected: 'vertical',    dimension: 'tablet|desktop', html-data: 'vertical',   view: 'vertical' }\n\nexport const checkPlacement = ({\n  placement,\n  breakpoints\n}) => {\n  const windowWidth = window.innerWidth;\n\n  if (placement === MENU_PLACEMENT.Horizontal) {\n    // Adding vertical menu for mobile\n    if (breakpoints.horizontalMobile > windowWidth) {\n      return {\n        status: 1,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical\n      };\n    } // Adding horizontal menu for desktop\n\n\n    return {\n      status: 2,\n      placementHtmlData: MENU_PLACEMENT.Horizontal,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Horizontal\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Vertical) {\n    // Adding vertical menu for mobile\n    if (breakpoints.verticalMobile > windowWidth) {\n      return {\n        status: 3,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical\n      };\n    } // Adding vertical menu for desktop\n\n\n    return {\n      status: 4,\n      placementHtmlData: MENU_PLACEMENT.Vertical,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Vertical\n    };\n  }\n\n  return {\n    status: 0,\n    placementHtmlData: '',\n    dimensionHtmlData: '',\n    view: ''\n  };\n}; // Decides which type of menu behaviour to init based on the parameters or the current window size.\n//  behaviourStatus:\n//  1 {selected: 'unpinned', placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'unpinned'}\n//  2 {selected: 'unpinned', placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  3 {selected: 'pinned',   placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'pinned'}\n//  4 {selected: 'pinned',   placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  5 {selected: 'unpinned', placement: 'horizontal', dimension: 'all',             html-data: 'unpinned'}\n//  6 {selected: 'pinned',   placement: 'horizontal', dimension: 'all',             html-data: 'pinned'}\n\nexport const checkBehaviour = ({\n  placement,\n  behaviour,\n  breakpoints\n}) => {\n  const windowWidth = window.innerWidth; // Vertical rules\n\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 1,\n        // A small fix to make sure nav config at Vertical No Semi Hidden overrides theme settings.\n        behaviourHtmlData: breakpoints.verticalUnpinned !== breakpoints.verticalMobile ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned\n      };\n    } // Tablet\n\n\n    return {\n      status: 2,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Pinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 3,\n        behaviourHtmlData: MENU_BEHAVIOUR.Pinned\n      };\n    } // Tablet\n\n\n    return {\n      status: 4,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned\n    };\n  } // Horizontal rules\n\n\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    return {\n      status: 5,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Pinned) {\n    return {\n      status: 6,\n      behaviourHtmlData: MENU_BEHAVIOUR.Pinned\n    };\n  }\n\n  return {\n    status: 0,\n    behaviourHtmlData: ''\n  };\n}; // Using popperjs to align user,language and notification dropdowns in the menu\n\nexport const dropdownPositionFixInMenu = ({\n  style,\n  placement,\n  isMobile\n}) => {\n  let xPlacement = 'bottom-end';\n  let {\n    transform\n  } = style;\n\n  if ((placement === MENU_PLACEMENT.Vertical || isMobile) && style && style.transform) {\n    transform = style.transform.replace(/(\\d+)px/, '15px');\n\n    if (window.innerHeight <= 450) {\n      // transform = transform.replace(/, (\\d+)px/, ', 15px');\n      xPlacement = 'top-end';\n    }\n  }\n\n  return {\n    xPlacement,\n    transform\n  };\n};\nexport const isDeeplyDiffPlacementStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  if (a.placementHtmlData !== b.placementHtmlData) return true;\n  if (a.dimensionHtmlData !== b.dimensionHtmlData) return true; // noinspection RedundantIfStatementJS\n\n  if (a.view !== b.view) return true;\n  return false;\n};\nexport const isDeeplyDiffBehaviourStatus = (a, b) => {\n  if (a.status !== b.status) return true; // noinspection RedundantIfStatementJS\n\n  if (a.behaviourHtmlData !== b.behaviourHtmlData) return true;\n  return false;\n};","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/layout/nav/main-menu/helper.js"],"names":["DIMENSION","MENU_BEHAVIOUR","MENU_PLACEMENT","checkPlacement","placement","breakpoints","windowWidth","window","innerWidth","Horizontal","horizontalMobile","status","placementHtmlData","dimensionHtmlData","Mobile","view","Vertical","Desktop","verticalMobile","checkBehaviour","behaviour","Unpinned","verticalUnpinned","behaviourHtmlData","Pinned","dropdownPositionFixInMenu","style","isMobile","xPlacement","transform","replace","innerHeight","isDeeplyDiffPlacementStatus","a","b","isDeeplyDiffBehaviourStatus"],"mappings":"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","sourcesContent":["import { DIMENSION, MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\n// Decides which type of menu to add based on the parameters or the current window size.\n// placementStatus:\n// 1 {selected: 'horizontal',  dimension: 'mobile',         html-data: 'horizontal', view: 'vertical'}\n// 2 {selected: 'horizontal',  dimension: 'tablet|desktop', html-data: 'horizontal', view: 'horizontal'}\n// 3 {selected: 'vertical',    dimension: 'mobile',         html-data: 'horizontal', view: 'vertical' }\n// 4 {selected: 'vertical',    dimension: 'tablet|desktop', html-data: 'vertical',   view: 'vertical' }\n\nexport const checkPlacement = ({ placement, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  if (placement === MENU_PLACEMENT.Horizontal) {\n    // Adding vertical menu for mobile\n    if (breakpoints.horizontalMobile > windowWidth) {\n      return {\n        status: 1,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding horizontal menu for desktop\n    return {\n      status: 2,\n      placementHtmlData: MENU_PLACEMENT.Horizontal,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Horizontal,\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Vertical) {\n    // Adding vertical menu for mobile\n    if (breakpoints.verticalMobile > windowWidth) {\n      return {\n        status: 3,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding vertical menu for desktop\n    return {\n      status: 4,\n      placementHtmlData: MENU_PLACEMENT.Vertical,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Vertical,\n    };\n  }\n  return { status: 0, placementHtmlData: '', dimensionHtmlData: '', view: '' };\n};\n\n// Decides which type of menu behaviour to init based on the parameters or the current window size.\n//  behaviourStatus:\n//  1 {selected: 'unpinned', placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'unpinned'}\n//  2 {selected: 'unpinned', placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  3 {selected: 'pinned',   placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'pinned'}\n//  4 {selected: 'pinned',   placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  5 {selected: 'unpinned', placement: 'horizontal', dimension: 'all',             html-data: 'unpinned'}\n//  6 {selected: 'pinned',   placement: 'horizontal', dimension: 'all',             html-data: 'pinned'}\nexport const checkBehaviour = ({ placement, behaviour, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  // Vertical rules\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 1,\n        // A small fix to make sure nav config at Vertical No Semi Hidden overrides theme settings.\n        behaviourHtmlData: breakpoints.verticalUnpinned !== breakpoints.verticalMobile ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 2,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Pinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 3,\n        behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 4,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n\n  // Horizontal rules\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    return {\n      status: 5,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Pinned) {\n    return {\n      status: 6,\n      behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n    };\n  }\n  return { status: 0, behaviourHtmlData: '' };\n};\n\n// Using popperjs to align user,language and notification dropdowns in the menu\nexport const dropdownPositionFixInMenu = ({ style, placement, isMobile }) => {\n  let xPlacement = 'bottom-end';\n  let { transform } = style;\n  if ((placement === MENU_PLACEMENT.Vertical || isMobile) && style && style.transform) {\n    transform = style.transform.replace(/(\\d+)px/, '15px');\n    if (window.innerHeight <= 450) {\n      // transform = transform.replace(/, (\\d+)px/, ', 15px');\n      xPlacement = 'top-end';\n    }\n  }\n  return { xPlacement, transform };\n};\n\nexport const isDeeplyDiffPlacementStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  if (a.placementHtmlData !== b.placementHtmlData) return true;\n  if (a.dimensionHtmlData !== b.dimensionHtmlData) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.view !== b.view) return true;\n  return false;\n};\nexport const isDeeplyDiffBehaviourStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.behaviourHtmlData !== b.behaviourHtmlData) return true;\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}