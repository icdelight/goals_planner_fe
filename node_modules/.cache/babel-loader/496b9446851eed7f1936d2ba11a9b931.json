{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/components/scrollspy/Scrollspy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { scrollspySetItems } from './scrollspySlice';\nimport ScrollspyContent from './ScrollspyContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Scrollspy = ({\n  items = [],\n  width = ''\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    hash\n  } = useLocation();\n  useEffect(() => {\n    document.documentElement.setAttribute('data-scrollspy', 'true');\n\n    if (hash) {\n      setTimeout(() => {\n        try {\n          document.querySelector(hash).scrollIntoView();\n        } catch (e) {\n          console.info(`[${hash}] element not found.`);\n        }\n      }, 30);\n    }\n\n    return () => {\n      document.documentElement.removeAttribute('data-scrollspy');\n    };\n  }, [hash]);\n  useEffect(() => {\n    dispatch(scrollspySetItems(items));\n    return () => {\n      dispatch(scrollspySetItems([]));\n    };\n  }, [items, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: \"auto\",\n      className: \"d-none d-lg-block\",\n      id: \"scrollSpyMenu\",\n      style: {\n        width\n      },\n      children: /*#__PURE__*/_jsxDEV(ScrollspyContent, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Scrollspy, \"9n8dewBCk8aTXw7V4EeacPlp3LA=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = Scrollspy;\nexport default _c2 = /*#__PURE__*/React.memo(Scrollspy);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Scrollspy\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/components/scrollspy/Scrollspy.js"],"names":["React","useEffect","Col","useDispatch","useLocation","scrollspySetItems","ScrollspyContent","Scrollspy","items","width","dispatch","hash","document","documentElement","setAttribute","setTimeout","querySelector","scrollIntoView","e","console","info","removeAttribute","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA,KAAK,GAAG;AAAtB,CAAD,KAAgC;AAAA;;AAChD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAWP,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,gBAAtC,EAAwD,MAAxD;;AACA,QAAIH,IAAJ,EAAU;AACRI,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AACFH,UAAAA,QAAQ,CAACI,aAAT,CAAuBL,IAAvB,EAA6BM,cAA7B;AACD,SAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,IAAR,CAAc,IAAGT,IAAK,sBAAtB;AACD;AACF,OANS,EAMP,EANO,CAAV;AAOD;;AACD,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACC,eAAT,CAAyBQ,eAAzB,CAAyC,gBAAzC;AACD,KAFD;AAGD,GAdQ,EAcN,CAACV,IAAD,CAdM,CAAT;AAgBAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,iBAAiB,CAACG,KAAD,CAAlB,CAAR;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACL,iBAAiB,CAAC,EAAD,CAAlB,CAAR;AACD,KAFD;AAGD,GALQ,EAKN,CAACG,KAAD,EAAQE,QAAR,CALM,CAAT;AAOA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,mBAAzB;AAA6C,MAAA,EAAE,EAAC,eAAhD;AAAgE,MAAA,KAAK,EAAE;AAAED,QAAAA;AAAF,OAAvE;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAjCD;;GAAMD,S;UACaJ,W,EACAC,W;;;KAFbG,S;AAmCN,kCAAeP,KAAK,CAACsB,IAAN,CAAWf,SAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { scrollspySetItems } from './scrollspySlice';\nimport ScrollspyContent from './ScrollspyContent';\n\nconst Scrollspy = ({ items = [], width = '' }) => {\n  const dispatch = useDispatch();\n  const { hash } = useLocation();\n  useEffect(() => {\n    document.documentElement.setAttribute('data-scrollspy', 'true');\n    if (hash) {\n      setTimeout(() => {\n        try {\n          document.querySelector(hash).scrollIntoView();\n        } catch (e) {\n          console.info(`[${hash}] element not found.`);\n        }\n      }, 30);\n    }\n    return () => {\n      document.documentElement.removeAttribute('data-scrollspy');\n    };\n  }, [hash]);\n\n  useEffect(() => {\n    dispatch(scrollspySetItems(items));\n    return () => {\n      dispatch(scrollspySetItems([]));\n    };\n  }, [items, dispatch]);\n\n  return (\n    <>\n      <Col md=\"auto\" className=\"d-none d-lg-block\" id=\"scrollSpyMenu\" style={{ width }}>\n        <ScrollspyContent items={items} />\n      </Col>\n    </>\n  );\n};\n\nexport default React.memo(Scrollspy);\n"]},"metadata":{},"sourceType":"module"}