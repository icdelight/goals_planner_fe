{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeAdminFun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SortableTree from \"react-sortable-tree\";\nimport { Row, Col, Card, Form } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { TreeAdmin } from '../services/treeservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TreeAdminFun = () => {\n  _s();\n\n  const {\n    currentUser,\n    isLogin\n  } = useSelector(state => state.auth);\n  const [treeData, getGoals] = useState('');\n  const [canvas, setCanvas] = useState('');\n  const [isLoading, setLoading] = useState(true);\n  const [nodeClicked, clickNode] = useState(true);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const getAllGoals = () => {\n    let result = null;\n    const Signups = TreeAdmin(currentUser.token).then(function (response) {\n      if (response) {\n        if (response.responseCode === 200) {\n          toast.success(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // console.log(response.responseData);\n\n          result = response.responseData;\n          console.log(result);\n          getGoals(result);\n          setLoading(false);\n        } else {\n          toast.error(response.responseDesc, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      }\n    });\n  };\n\n  const handleNodeClick = node => {\n    // setState({\n    //     // nodeClicked: node\n    // });\n    clickNode(node);\n  };\n\n  const handleTreeOnChange = treeDataS => {\n    // setState({ treeData });\n    getGoals(treeDataS);\n  };\n\n  const alertNodeInfo = ({\n    node,\n    path,\n    treeIndex\n  }) => {\n    console.log(node);\n    console.log(path);\n    console.log(treeIndex);\n    const objectString = Object.keys(node).map(k => k === \"children\" ? \"children: Array\" : `${k}: '${node[k]}'`).join(\",\\n   \"); // alert(\n    //   \"Info passed to the button generator:\\n\\n\" +\n    //     `node: {\\n   ${objectString}\\n},\\n` +\n    //     `path: [${path.join(\", \")}],\\n` +\n    //     `treeIndex: ${treeIndex}`\n    // );\n\n    setCanvas(node);\n    handleShow();\n  };\n\n  const loopParseData = (data, parent) => {\n    let resJson = \"\";\n\n    if (data) {\n      data.forEach(function (d, idx, arr) {\n        if (d.expanded) {\n          // this.loopParseData(d);\n          console.log(`${d.title}, id : ${d.id}, parent : ${parent} Parent of : `);\n          resJson += `${d.title} Parent of : `;\n          loopParseData(d.children, d.id);\n        } else {\n          resJson += `${d.title}, id : ${d.id}, parent : ${parent}`;\n          console.log(`${d.title}, id : ${d.id}, parent : ${parent}`);\n        }\n      });\n    }\n  };\n\n  const handleClickButton = () => {\n    // const { treeData } = this.state;\n    // const loopData = '';\n    // console.log(treeData.keys(\"children\"));\n    // treeData.forEach(\n    //     function(d) {\n    //         console.log(d);\n    //         if(d.expanded) {\n    //         }\n    //     }\n    // );\n    loopParseData(treeData, 0);\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    getAllGoals();\n  }, []);\n  const maxDepth = 3;\n  const title = 'Tree Admin Page';\n  const description = 'An page for configure the tree view.';\n  const breadcrumbs = [{\n    to: '',\n    text: 'Home'\n  }];\n  const validationSchema = Yup.object().shape({\n    searchField: Yup.string().required('Search is required')\n  });\n  const initialValues = {\n    searchField: ''\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = formik;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(HtmlHead, {\n      title: title,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"scroll-section\",\n          id: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0 pb-0 display-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(BreadcrumbList, {\n              items: breadcrumbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-2\",\n            body: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"g-0 row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-start justify-content-end justify-content-lg-start col-md col-12 mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                  id: \"searchForm\",\n                  className: \"tooltip-end-bottom me-lg-auto w-100 w-md-auto search-input-container border border-separator \",\n                  onSubmit: handleSubmit,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      id: \"searchField\",\n                      className: \"\",\n                      placeholder: \"Search Node\",\n                      value: values.searchField,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      id: \"button-addon\",\n                      type: \"submit\",\n                      className: \"btn btn-outline-secondary\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"search-magnifier-icon pe-none\",\n                        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          width: \"20\",\n                          height: \"20\",\n                          viewBox: \"0 0 20 20\",\n                          fill: \"none\",\n                          stroke: \"currentColor\",\n                          strokeWidth: \"1.5\",\n                          strokeLinecap: \"round\",\n                          strokeLinejoin: \"round\",\n                          className: \"cs-icon search \",\n                          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                            cx: \"9\",\n                            cy: \"9\",\n                            r: \"7\",\n                            children: \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                            d: \"M14 14L17.5 17.5\",\n                            children: \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 173,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-icon btn-icon-start ms-1 btn btn-outline-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"20\",\n                    height: \"20\",\n                    viewBox: \"0 0 20 20\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"1.5\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    className: \"cs-icon plus \",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M10 17 10 3M3 10 17 10\",\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Go to Top\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-3\",\n            body: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Only 5 Level can be showed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SortableTree, {\n              className: \"mb-3\",\n              treeData: treeData,\n              onChange: handleTreeOnChange,\n              isVirtualized: false,\n              maxDepth: maxDepth,\n              generateNodeProps: rowInfo => {\n                const {\n                  node\n                } = rowInfo;\n                return {\n                  buttons: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn-xs btn-outline-success\",\n                    style: {\n                      verticalAlign: \"middle\"\n                    },\n                    onClick: () => alertNodeInfo(rowInfo),\n                    children: \"\\u2139\"\n                  }, node, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 37\n                  }, this)],\n                  onClick: () => {\n                    handleNodeClick(node);\n                  },\n                  style: node === nodeClicked ? {\n                    border: \"3px solid yellow\"\n                  } : {}\n                };\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleClickButton,\n              className: \"btn-icon btn-icon-start ms-1 btn btn-outline-primary\",\n              children: \"Submit Tree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              variant: \"primary\",\n              onClick: handleShow,\n              children: \"Launch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      name: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"passwordHelpBlock\",\n          className: \"form-text text-muted sm-12\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          className: \"sm-12\",\n          children: canvas.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        style: {\n          background: \"var(--background-navcolor-dark)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3\",\n          body: true,\n          style: {\n            background: \"rgba(255,255,255,.05) !important\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"pt-0 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-0 mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passwordHelpBlock\",\n                className: \"form-text text-muted sm-12\",\n                children: \"PIC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sm-12\",\n                children: canvas.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-0 mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passwordHelpBlock\",\n                className: \"form-text text-muted sm-12\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sm-12\",\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: canvas.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeAdminFun, \"j+7aRhQfoho3KNmuN3GyZGWh7m4=\", false, function () {\n  return [useSelector, useFormik];\n});\n\n_c = TreeAdminFun;\nexport default TreeAdminFun;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeAdminFun\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/views/TreeAdminFun.js"],"names":["React","useEffect","useState","SortableTree","Row","Col","Card","Form","Offcanvas","Yup","useFormik","HtmlHead","BreadcrumbList","toast","useSelector","TreeAdmin","TreeAdminFun","currentUser","isLogin","state","auth","treeData","getGoals","canvas","setCanvas","isLoading","setLoading","nodeClicked","clickNode","show","setShow","handleClose","handleShow","getAllGoals","result","Signups","token","then","response","responseCode","success","responseDesc","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","responseData","console","log","error","handleNodeClick","node","handleTreeOnChange","treeDataS","alertNodeInfo","path","treeIndex","objectString","Object","keys","map","k","join","loopParseData","data","parent","resJson","forEach","d","idx","arr","expanded","title","id","children","handleClickButton","onSubmit","values","maxDepth","description","breadcrumbs","to","text","validationSchema","object","shape","searchField","string","required","initialValues","formik","handleSubmit","handleChange","touched","errors","height","rowInfo","buttons","verticalAlign","onClick","style","border","background","firstName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SortableTree from \"react-sortable-tree\";\nimport { Row, Col, Card , Form} from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { TreeAdmin } from '../services/treeservice';\n\n\nconst TreeAdminFun = () => {\n    const { currentUser, isLogin } = useSelector((state) => state.auth);\n    const [treeData, getGoals] = useState('');\n    const [canvas, setCanvas] = useState('');\n    const [isLoading, setLoading] = useState(true);\n    const [nodeClicked, clickNode] = useState(true);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const getAllGoals = () => {\n      \n      let result = null;\n      const Signups  =  TreeAdmin(currentUser.token).then(function(response) {\n        if(response) {\n          if(response.responseCode === 200) {\n            toast.success(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            // console.log(response.responseData);\n            result = response.responseData;\n            console.log(result);\n            getGoals(result);\n            setLoading(false);\n          }else{  \n            toast.error(response.responseDesc, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      });\n    }\n\n    const handleNodeClick = (node) => {\n        // setState({\n        //     // nodeClicked: node\n            \n        // });\n        clickNode(node);\n    };\n\n    const handleTreeOnChange = (treeDataS) => {\n        // setState({ treeData });\n        getGoals(treeDataS);\n    };\n\n    const alertNodeInfo = ({ node, path, treeIndex }) => {\n        console.log(node);\n        console.log(path);\n        console.log(treeIndex);\n        const objectString = Object.keys(node)\n          .map((k) => (k === \"children\" ? \"children: Array\" : `${k}: '${node[k]}'`))\n          .join(\",\\n   \");\n      \n        // alert(\n        //   \"Info passed to the button generator:\\n\\n\" +\n        //     `node: {\\n   ${objectString}\\n},\\n` +\n        //     `path: [${path.join(\", \")}],\\n` +\n        //     `treeIndex: ${treeIndex}`\n        // );\n        setCanvas(node);\n        handleShow();\n    };\n\n    const loopParseData = (data,parent) => {\n        let resJson = \"\";\n        if(data) {\n            data.forEach(\n                function(d,idx,arr) {\n                    if(d.expanded) {\n                        // this.loopParseData(d);\n                        console.log(`${d.title}, id : ${d.id}, parent : ${parent} Parent of : `);\n                        resJson += `${d.title} Parent of : `;\n                        loopParseData(d.children,d.id);\n                    }else{\n                        resJson += `${d.title}, id : ${d.id}, parent : ${parent}`;\n                        console.log(`${d.title}, id : ${d.id}, parent : ${parent}`);\n                    }\n                }\n            );\n        }\n    }\n\n    const handleClickButton = () => {\n        // const { treeData } = this.state;\n        // const loopData = '';\n        // console.log(treeData.keys(\"children\"));\n        // treeData.forEach(\n        //     function(d) {\n        //         console.log(d);\n        //         if(d.expanded) {\n                    \n        //         }\n        //     }\n        // );\n        loopParseData(treeData,0);\n\n    };\n    \n    const onSubmit = (values) => {\n        console.log(values);\n    };\n\n\n    useEffect(() => {\n        getAllGoals();\n    }, []);\n    \n    const maxDepth = 3; \n    const title = 'Tree Admin Page';\n    const description = 'An page for configure the tree view.';\n    const breadcrumbs = [{ to: '', text: 'Home' }];\n    const validationSchema = Yup.object().shape({\n        searchField: Yup.string().required('Search is required'),\n    });\n    const initialValues = { searchField: '' };\n    const formik = useFormik({ initialValues, validationSchema, onSubmit });\n    const { handleSubmit, handleChange, values, touched, errors } = formik;\n\n    if (isLoading) {\n        return <div className=\"App\">Loading...</div>;\n    }\n\n    return (\n        <div className=\"App\" style={{ height: 500 }}>\n            <HtmlHead title={title} description={description} />\n            <Row>\n                <Col>\n                    {/* Title Start */}\n                    <section className=\"scroll-section\" id=\"title\">\n                    <div className=\"page-title-container\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </div>\n                    <Card className=\"mb-2\" body>\n                        <Card.Text>{description}</Card.Text>\n\n                        <div className=\"g-0 row\">\n                            <div className=\"d-flex align-items-start justify-content-end justify-content-lg-start col-md col-12 mb-1\">\n                                <form id=\"searchForm\" className=\"tooltip-end-bottom me-lg-auto w-100 w-md-auto search-input-container border border-separator \" onSubmit={handleSubmit}>\n                                <div className=\"input-group\">\n                                <Form.Control id=\"searchField\" className=\"\" placeholder=\"Search Node\" value={values.searchField} onChange={handleChange} />\n                                <button id=\"button-addon\" type=\"submit\" className=\"btn btn-outline-secondary\">\n                                    <span className=\"search-magnifier-icon pe-none\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"cs-icon search \">\n                                        <circle cx=\"9\" cy=\"9\" r=\"7\"> </circle>\n                                        <path d=\"M14 14L17.5 17.5\"> </path>\n                                        </svg>\n                                    </span>\n                                </button>\n                                </div>\n                                </form> \n                                <button type=\"button\" className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"cs-icon plus \">\n                                    <path d=\"M10 17 10 3M3 10 17 10\"> </path>\n                                </svg> \n                                <span>Go to Top</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Card>\n                    <Card className=\"mb-3\" body>\n                        <Card.Text>Only 5 Level can be showed.</Card.Text>\n                        <SortableTree\n                            className=\"mb-3\"\n                            treeData={treeData}\n                            onChange={handleTreeOnChange}\n                            isVirtualized= {false}\n                            maxDepth={maxDepth}\n                            generateNodeProps={(rowInfo) => {\n                                const { node } = rowInfo;\n                                return {\n                                    buttons: [\n                                    <button\n                                        type=\"button\"\n                                        key={node}\n                                        className=\"btn-xs btn-outline-success\"\n                                        style={{\n                                        verticalAlign: \"middle\"\n                                        }}\n                                        onClick={() => alertNodeInfo(rowInfo)}\n                                    >\n                                        ℹ\n                                    </button>\n                                    ],\n                                    onClick: () => {\n                                        handleNodeClick(node);\n                                    },\n                                    style:\n                                    node === nodeClicked\n                                        ? {\n                                            border: \"3px solid yellow\"\n                                        }\n                                        : {}\n                                };\n                            }}\n                            />\n                            <button type=\"button\" onClick={handleClickButton} className=\"btn-icon btn-icon-start ms-1 btn btn-outline-primary\">\n                                Submit Tree\n                            </button>\n                            <button type=\"button\" variant=\"primary\" onClick={handleShow}>\n                                Launch\n                            </button>\n                    </Card>\n                    </section>\n                {/* Title End */}\n                </Col>\n            </Row>\n            <Offcanvas show={show} onHide={handleClose} placement=\"end\" name=\"end\">\n                <Offcanvas.Header closeButton className=\"row\">\n                    <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Title</small>\n                    <Offcanvas.Title className=\"sm-12\">\n                        {canvas.title}\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body style={{background:\"var(--background-navcolor-dark)\"}}>\n                    <Card className=\"mb-3\" body style={{background:\"rgba(255,255,255,.05) !important\"}}>\n                        <Card.Header className=\"pt-0 pb-1\">\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">PIC</small>\n                                <span className=\"sm-12\">{canvas.firstName}</span>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"row mt-0 mb-0\">\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted sm-12\">Description</small>\n                                <span className=\"sm-12\"><Card.Text>{canvas.description}</Card.Text></span>\n                            </div>\n                            \n                        </Card.Body>\n                    </Card>\n                    \n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    )\n\n};\n\nexport default TreeAdminFun;\n"]},"metadata":{},"sourceType":"module"}