{"ast":null,"code":"import { IS_AUTH_GUARD_ACTIVE, DEFAULT_PATHS } from 'config.js';\n\nconst userHasRole = (routeRoles, userRole) => {\n  if (!userRole) return false;\n  return routeRoles.includes(userRole);\n};\n\nconst clearRoute = route => {\n  const item = {};\n  ['path', 'to', 'exact', 'component', 'redirect'].forEach(key => {\n    if (route[key]) item[key] = route[key];\n  });\n  return item;\n};\n\nconst clearMenuItem = menuItem => {\n  const item = {};\n  ['path', 'label', 'icon', 'isExternal', 'subs', 'mega', 'megaParent'].forEach(key => {\n    if (menuItem[key]) item[key] = menuItem[key];\n  });\n  return item;\n};\n\nconst clearFlattedMenuItem = menuItem => {\n  const item = {};\n  ['path', 'label', 'isExternal'].forEach(key => {\n    if (menuItem[key]) item[key] = menuItem[key];\n  });\n  return item;\n};\n\nexport const convertToRoutes = ({\n  data = [],\n  isLogin = false,\n  userRole = null,\n  authGuardActive = IS_AUTH_GUARD_ACTIVE,\n  unauthorizedPath = DEFAULT_PATHS.UNAUTHORIZED,\n  loginPath = DEFAULT_PATHS.LOGIN,\n  invalidAccessPath = DEFAULT_PATHS.INVALID_ACCESS,\n  noLayout = false\n}) => {\n  let items = [];\n\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n\n  console.log('data', data);\n  console.log('islogin', isLogin);\n  const routes = [];\n  return () => {\n    const itemMapper = item => {\n      const tempItem = { ...item\n      };\n      if (item.hideInRoute) return itemMapper({});\n      if (item.subs) tempItem.exact = true;\n      /* Authentication Guard */\n\n      if (authGuardActive) {\n        if (tempItem.roles) tempItem.protected = true;\n\n        if (tempItem.publicOnly) {\n          delete tempItem.roles;\n          delete tempItem.protected;\n        }\n\n        if (tempItem.protected) {\n          if (!isLogin) {\n            tempItem.redirect = true;\n            tempItem.to = {\n              pathname: loginPath,\n              state: {\n                from: tempItem.path\n              }\n            };\n          } else if (tempItem.roles) {\n            if (!userHasRole(tempItem.roles, userRole)) {\n              tempItem.redirect = true;\n              tempItem.to = {\n                pathname: unauthorizedPath,\n                state: {\n                  from: tempItem.path\n                }\n              };\n            }\n          }\n        } else if (tempItem.publicOnly && isLogin) {\n          tempItem.redirect = true;\n          tempItem.to = {\n            pathname: invalidAccessPath,\n            state: {\n              from: tempItem.path\n            }\n          };\n        }\n      }\n\n      if (Object.keys(tempItem).length > 0 && !item.isExternal) {\n        if (item.noLayout && noLayout) {\n          routes.push(clearRoute({ ...tempItem,\n            exact: true\n          }));\n        }\n\n        if (!noLayout && item.noLayout !== true) {\n          routes.push(clearRoute(tempItem));\n        }\n      }\n\n      if (item.subs) {\n        return item.subs.map(sub => {\n          const controlledSub = { ...sub,\n            path: tempItem.path + sub.path\n          };\n\n          if (authGuardActive) {\n            if (tempItem.protected) controlledSub.protected = true;\n\n            if (tempItem.roles) {\n              if (!sub.roles) controlledSub.roles = tempItem.roles;else {\n                // common roles..\n                controlledSub.roles = tempItem.roles.filter(x => sub.roles.includes(x));\n\n                if (controlledSub.roles && controlledSub.roles.length === 0) {\n                  controlledSub.inaccessible = true;\n                  console.log(`This route(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`, controlledSub);\n                }\n              }\n            } else if (tempItem.publicOnly) {\n              controlledSub.publicOnly = true;\n            }\n\n            if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n            if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n            return itemMapper({});\n          }\n\n          return itemMapper(controlledSub);\n        });\n      }\n\n      return tempItem;\n    };\n\n    items.map(itemMapper);\n    return routes;\n  };\n};\nexport const convertToMenuItems = ({\n  data = [],\n  authGuardActive = IS_AUTH_GUARD_ACTIVE,\n  isLogin = false,\n  userRole = null\n}) => {\n  let items = [];\n\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n\n  const itemMapper = item => {\n    const tempItem = { ...item\n    };\n\n    if (authGuardActive) {\n      /* Authentication Guard */\n      if (tempItem.roles) tempItem.protected = true;\n\n      if (tempItem.publicOnly) {\n        delete tempItem.roles;\n        delete tempItem.protected;\n      }\n\n      if (tempItem.protected) {\n        if (!isLogin) {\n          return {};\n        }\n\n        if (tempItem.roles) {\n          if (!userHasRole(tempItem.roles, userRole)) {\n            return {};\n          }\n        }\n      } else if (tempItem.publicOnly && isLogin) {\n        return {};\n      }\n    }\n\n    if (tempItem.subs) {\n      tempItem.subs = item.subs.map(sub => {\n        const controlledSub = { ...sub,\n          path: tempItem.path + sub.path\n        };\n        if (tempItem.mega || tempItem.megaParent) controlledSub.megaParent = true;\n\n        if (authGuardActive) {\n          if (tempItem.protected) controlledSub.protected = true;\n\n          if (tempItem.roles) {\n            if (!sub.roles) controlledSub.roles = tempItem.roles;else {\n              // common roles..\n              controlledSub.roles = tempItem.roles.filter(x => sub.roles.includes(x));\n\n              if (controlledSub.roles && controlledSub.roles.length === 0) {\n                controlledSub.inaccessible = true;\n                console.log(`This menu item(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`, controlledSub);\n              }\n            }\n          } else if (tempItem.publicOnly) {\n            controlledSub.publicOnly = true;\n          }\n\n          if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n          if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n          return itemMapper({});\n        }\n\n        return itemMapper(controlledSub);\n      }).filter(x => Object.keys(x).length > 0);\n      if (tempItem.subs.length === 0) delete tempItem.subs;\n    }\n\n    if (tempItem.label && !item.hideInMenu) return clearMenuItem(tempItem);\n    return {};\n  };\n\n  return items.map(itemMapper).filter(x => Object.keys(x).length > 0);\n};\nexport const convertToSearchItems = ({\n  data = [],\n  authGuardActive = IS_AUTH_GUARD_ACTIVE,\n  isLogin = false,\n  userRole = null\n}) => {\n  let items = [];\n\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n\n  const menuItems = [];\n  return () => {\n    const itemMapper = item => {\n      let tempItem = { ...item\n      };\n\n      if (tempItem.hideInMenu || tempItem.isExternal || tempItem.hideInRoute) {\n        return {};\n      }\n\n      if (authGuardActive) {\n        /* Authentication Guard */\n        if (tempItem.roles) tempItem.protected = true;\n\n        if (tempItem.publicOnly) {\n          delete tempItem.roles;\n          delete tempItem.protected;\n        }\n\n        if (tempItem.protected) {\n          if (!isLogin) {\n            tempItem = {};\n          } else if (tempItem.roles) {\n            if (!userHasRole(tempItem.roles, userRole)) {\n              tempItem = {};\n            }\n          }\n        } else if (tempItem.publicOnly && isLogin) {\n          tempItem = {};\n        }\n      }\n\n      if (Object.keys(tempItem).length > 0 && tempItem.label) menuItems.push(clearFlattedMenuItem(tempItem));\n\n      if (item.subs) {\n        return item.subs.map(sub => {\n          const controlledSub = { ...sub,\n            path: tempItem.path + sub.path\n          };\n\n          if (authGuardActive) {\n            if (tempItem.protected) controlledSub.protected = true;\n\n            if (tempItem.roles) {\n              if (!sub.roles) controlledSub.roles = tempItem.roles;else {\n                // common roles..\n                controlledSub.roles = tempItem.roles.filter(x => sub.roles.includes(x));\n\n                if (controlledSub.roles && controlledSub.roles.length === 0) {\n                  controlledSub.inaccessible = true;\n                  console.log(`This menu item(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`, controlledSub);\n                }\n              }\n            } else if (tempItem.publicOnly) {\n              controlledSub.publicOnly = true;\n            }\n\n            if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n            if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n            return itemMapper({});\n          }\n\n          return itemMapper(controlledSub);\n        });\n      }\n\n      return tempItem;\n    };\n\n    items.map(itemMapper);\n    return menuItems;\n  };\n};\nexport const getRoutes = ({\n  data,\n  isLogin,\n  userRole\n}) => convertToRoutes({\n  data,\n  isLogin,\n  userRole,\n  authGuardActive: IS_AUTH_GUARD_ACTIVE,\n  unauthorizedPath: DEFAULT_PATHS.UNAUTHORIZED,\n  loginPath: DEFAULT_PATHS.LOGIN,\n  invalidAccessPath: DEFAULT_PATHS.INVALID_ACCESS,\n  noLayout: false\n})();\nexport const getLayoutlessRoutes = ({\n  data\n}) => convertToRoutes({\n  data,\n  noLayout: true\n})();\nexport const getMenuItems = ({\n  data,\n  isLogin,\n  userRole\n}) => convertToMenuItems({\n  data,\n  isLogin,\n  userRole,\n  authGuardActive: IS_AUTH_GUARD_ACTIVE\n});\nexport const getSearchItems = ({\n  data,\n  isLogin,\n  userRole\n}) => convertToSearchItems({\n  data,\n  isLogin,\n  userRole,\n  authGuardActive: IS_AUTH_GUARD_ACTIVE\n});","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/routing/helper.js"],"names":["IS_AUTH_GUARD_ACTIVE","DEFAULT_PATHS","userHasRole","routeRoles","userRole","includes","clearRoute","route","item","forEach","key","clearMenuItem","menuItem","clearFlattedMenuItem","convertToRoutes","data","isLogin","authGuardActive","unauthorizedPath","UNAUTHORIZED","loginPath","LOGIN","invalidAccessPath","INVALID_ACCESS","noLayout","items","Array","isArray","sidebarItems","mainMenuItems","console","log","routes","itemMapper","tempItem","hideInRoute","subs","exact","roles","protected","publicOnly","redirect","to","pathname","state","from","path","Object","keys","length","isExternal","push","map","sub","controlledSub","filter","x","inaccessible","convertToMenuItems","mega","megaParent","label","hideInMenu","convertToSearchItems","menuItems","getRoutes","getLayoutlessRoutes","getMenuItems","getSearchItems"],"mappings":"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","sourcesContent":["import { IS_AUTH_GUARD_ACTIVE, DEFAULT_PATHS } from 'config.js';\n\nconst userHasRole = (routeRoles, userRole) => {\n  if (!userRole) return false;\n  return routeRoles.includes(userRole);\n};\n\nconst clearRoute = (route) => {\n  const item = {};\n  ['path', 'to', 'exact', 'component', 'redirect'].forEach((key) => {\n    if (route[key]) item[key] = route[key];\n  });\n  return item;\n};\nconst clearMenuItem = (menuItem) => {\n  const item = {};\n  ['path', 'label', 'icon', 'isExternal', 'subs', 'mega', 'megaParent'].forEach((key) => {\n    if (menuItem[key]) item[key] = menuItem[key];\n  });\n  return item;\n};\nconst clearFlattedMenuItem = (menuItem) => {\n  const item = {};\n  ['path', 'label', 'isExternal'].forEach((key) => {\n    if (menuItem[key]) item[key] = menuItem[key];\n  });\n  return item;\n};\n\nexport const convertToRoutes = ({\n  data = [],\n  isLogin = false,\n  userRole = null,\n  authGuardActive = IS_AUTH_GUARD_ACTIVE,\n  unauthorizedPath = DEFAULT_PATHS.UNAUTHORIZED,\n  loginPath = DEFAULT_PATHS.LOGIN,\n  invalidAccessPath = DEFAULT_PATHS.INVALID_ACCESS,\n  noLayout = false,\n}) => {\n\n  let items = [];\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n  console.log('data',data);\n  console.log('islogin',isLogin);\n  const routes = [];\n  return () => {\n    const itemMapper = (item) => {\n      const tempItem = { ...item };\n      if (item.hideInRoute) return itemMapper({});\n\n      if (item.subs) tempItem.exact = true;\n\n      /* Authentication Guard */\n      if (authGuardActive) {\n        if (tempItem.roles) tempItem.protected = true;\n        if (tempItem.publicOnly) {\n          delete tempItem.roles;\n          delete tempItem.protected;\n        }\n        if (tempItem.protected) {\n          if (!isLogin) {\n            tempItem.redirect = true;\n            tempItem.to = {\n              pathname: loginPath,\n              state: { from: tempItem.path },\n            };\n          } else if (tempItem.roles) {\n            if (!userHasRole(tempItem.roles, userRole)) {\n              tempItem.redirect = true;\n              tempItem.to = {\n                pathname: unauthorizedPath,\n                state: { from: tempItem.path },\n              };\n            }\n          }\n        } else if (tempItem.publicOnly && isLogin) {\n          tempItem.redirect = true;\n          tempItem.to = {\n            pathname: invalidAccessPath,\n            state: { from: tempItem.path },\n          };\n        }\n      }\n\n      if (Object.keys(tempItem).length > 0 && !item.isExternal) {\n        if (item.noLayout && noLayout) {\n          routes.push(clearRoute({ ...tempItem, exact: true }));\n        }\n        if (!noLayout && item.noLayout !== true) {\n          routes.push(clearRoute(tempItem));\n        }\n      }\n\n      if (item.subs) {\n        return item.subs.map((sub) => {\n          const controlledSub = { ...sub, path: tempItem.path + sub.path };\n          if (authGuardActive) {\n            if (tempItem.protected) controlledSub.protected = true;\n            if (tempItem.roles) {\n              if (!sub.roles) controlledSub.roles = tempItem.roles;\n              else {\n                // common roles..\n                controlledSub.roles = tempItem.roles.filter((x) => sub.roles.includes(x));\n\n                if (controlledSub.roles && controlledSub.roles.length === 0) {\n                  controlledSub.inaccessible = true;\n                  console.log(\n                    `This route(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`,\n                    controlledSub\n                  );\n                }\n              }\n            } else if (tempItem.publicOnly) {\n              controlledSub.publicOnly = true;\n            }\n            if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n\n            if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n            return itemMapper({});\n          }\n          return itemMapper(controlledSub);\n        });\n      }\n      return tempItem;\n    };\n    items.map(itemMapper);\n    return routes;\n  };\n};\n\nexport const convertToMenuItems = ({ data = [], authGuardActive = IS_AUTH_GUARD_ACTIVE, isLogin = false, userRole = null }) => {\n  let items = [];\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n\n  const itemMapper = (item) => {\n    const tempItem = { ...item };\n\n    if (authGuardActive) {\n      /* Authentication Guard */\n      if (tempItem.roles) tempItem.protected = true;\n\n      if (tempItem.publicOnly) {\n        delete tempItem.roles;\n        delete tempItem.protected;\n      }\n\n      if (tempItem.protected) {\n        if (!isLogin) {\n          return {};\n        }\n        if (tempItem.roles) {\n          if (!userHasRole(tempItem.roles, userRole)) {\n            return {};\n          }\n        }\n      } else if (tempItem.publicOnly && isLogin) {\n        return {};\n      }\n    }\n\n    if (tempItem.subs) {\n      tempItem.subs = item.subs\n        .map((sub) => {\n          const controlledSub = { ...sub, path: tempItem.path + sub.path };\n          if (tempItem.mega || tempItem.megaParent) controlledSub.megaParent = true;\n\n          if (authGuardActive) {\n            if (tempItem.protected) controlledSub.protected = true;\n\n            if (tempItem.roles) {\n              if (!sub.roles) controlledSub.roles = tempItem.roles;\n              else {\n                // common roles..\n                controlledSub.roles = tempItem.roles.filter((x) => sub.roles.includes(x));\n\n                if (controlledSub.roles && controlledSub.roles.length === 0) {\n                  controlledSub.inaccessible = true;\n                  console.log(\n                    `This menu item(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`,\n                    controlledSub\n                  );\n                }\n              }\n            } else if (tempItem.publicOnly) {\n              controlledSub.publicOnly = true;\n            }\n            if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n\n            if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n            return itemMapper({});\n          }\n          return itemMapper(controlledSub);\n        })\n        .filter((x) => Object.keys(x).length > 0);\n\n      if (tempItem.subs.length === 0) delete tempItem.subs;\n    }\n    if (tempItem.label && !item.hideInMenu) return clearMenuItem(tempItem);\n    return {};\n  };\n  return items.map(itemMapper).filter((x) => Object.keys(x).length > 0);\n};\n\nexport const convertToSearchItems = ({ data = [], authGuardActive = IS_AUTH_GUARD_ACTIVE, isLogin = false, userRole = null }) => {\n  let items = [];\n  if (Array.isArray(data)) {\n    items = data;\n  } else {\n    items = [...data.sidebarItems, ...data.mainMenuItems];\n  }\n\n  const menuItems = [];\n\n  return () => {\n    const itemMapper = (item) => {\n      let tempItem = { ...item };\n      if (tempItem.hideInMenu || tempItem.isExternal || tempItem.hideInRoute) {\n        return {};\n      }\n      if (authGuardActive) {\n        /* Authentication Guard */\n        if (tempItem.roles) tempItem.protected = true;\n\n        if (tempItem.publicOnly) {\n          delete tempItem.roles;\n          delete tempItem.protected;\n        }\n\n        if (tempItem.protected) {\n          if (!isLogin) {\n            tempItem = {};\n          } else if (tempItem.roles) {\n            if (!userHasRole(tempItem.roles, userRole)) {\n              tempItem = {};\n            }\n          }\n        } else if (tempItem.publicOnly && isLogin) {\n          tempItem = {};\n        }\n      }\n\n      if (Object.keys(tempItem).length > 0 && tempItem.label) menuItems.push(clearFlattedMenuItem(tempItem));\n\n      if (item.subs) {\n        return item.subs.map((sub) => {\n          const controlledSub = { ...sub, path: tempItem.path + sub.path };\n\n          if (authGuardActive) {\n            if (tempItem.protected) controlledSub.protected = true;\n\n            if (tempItem.roles) {\n              if (!sub.roles) controlledSub.roles = tempItem.roles;\n              else {\n                // common roles..\n                controlledSub.roles = tempItem.roles.filter((x) => sub.roles.includes(x));\n\n                if (controlledSub.roles && controlledSub.roles.length === 0) {\n                  controlledSub.inaccessible = true;\n                  console.log(\n                    `This menu item(${controlledSub.path}) is inaccessible. Please check the roles you defined in the hierarchical structure.`,\n                    controlledSub\n                  );\n                }\n              }\n            } else if (tempItem.publicOnly) {\n              controlledSub.publicOnly = true;\n            }\n            if (controlledSub.roles && controlledSub.roles.length === 0) delete controlledSub.roles;\n\n            if (!controlledSub.inaccessible) return itemMapper(controlledSub);\n            return itemMapper({});\n          }\n          return itemMapper(controlledSub);\n        });\n      }\n      return tempItem;\n    };\n    items.map(itemMapper);\n    return menuItems;\n  };\n};\n\nexport const getRoutes = ({ data, isLogin, userRole }) =>\n  convertToRoutes({\n    data,\n    isLogin,\n    userRole,\n    authGuardActive: IS_AUTH_GUARD_ACTIVE,\n    unauthorizedPath: DEFAULT_PATHS.UNAUTHORIZED,\n    loginPath: DEFAULT_PATHS.LOGIN,\n    invalidAccessPath: DEFAULT_PATHS.INVALID_ACCESS,\n    noLayout: false,\n  })();\n\nexport const getLayoutlessRoutes = ({ data }) => convertToRoutes({ data, noLayout: true })();\nexport const getMenuItems = ({ data, isLogin, userRole }) => convertToMenuItems({ data, isLogin, userRole, authGuardActive: IS_AUTH_GUARD_ACTIVE });\n\nexport const getSearchItems = ({ data, isLogin, userRole }) => convertToSearchItems({ data, isLogin, userRole, authGuardActive: IS_AUTH_GUARD_ACTIVE });\n"]},"metadata":{},"sourceType":"module"}