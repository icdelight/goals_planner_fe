{"ast":null,"code":"var _jsxFileName = \"/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/layout/nav/main-menu/MainMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { MENU_PLACEMENT, MENU_BEHAVIOUR } from 'constants.js';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { getMenuItems } from 'routing/helper';\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useWindowScroll } from 'hooks/useWindowScroll';\nimport routesAndMenuItems from 'routes.js';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport MainMenuItems from './MainMenuItems';\nimport { menuChangeAttrMenuAnimate, menuChangeAttrMobile, menuChangeBehaviourStatus, menuChangeCollapseAll, menuChangeNavClasses, menuChangePinButtonEnable, menuChangePlacementStatus } from './menuSlice';\nimport { checkBehaviour, checkPlacement, isDeeplyDiffBehaviourStatus, isDeeplyDiffPlacementStatus } from './helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainMenu = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    placement,\n    behaviour,\n    placementStatus,\n    behaviourStatus,\n    attrMobile,\n    breakpoints,\n    useSidebar\n  } = useSelector(state => state.menu);\n  const {\n    isLogin,\n    currentUser\n  } = useSelector(state => state.auth);\n  const scrolled = useWindowScroll();\n  const {\n    width\n  } = useWindowSize();\n  const menuItemsMemo = useMemo(() => getMenuItems({\n    data: attrMobile && useSidebar ? routesAndMenuItems : routesAndMenuItems.mainMenuItems,\n    isLogin,\n    userRole: currentUser.role\n  }), [isLogin, currentUser, attrMobile, useSidebar]);\n  useEffect(() => {\n    dispatch(menuChangeAttrMenuAnimate(''));\n    dispatch(layoutShowingNavMenu(''));\n\n    if (placementStatus.status === 2 || placementStatus.status === 4) {\n      // Switching back from the mobile menu layout fast\n      dispatch(menuChangeNavClasses({}));\n      dispatch(menuChangeAttrMobile(false));\n    } // Prevents menu animation to make a fast switch\n\n\n    if (behaviourStatus.status === 1) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 2) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(false));\n    } else if (behaviourStatus.status === 3) {\n      dispatch(menuChangePinButtonEnable(true));\n      dispatch(menuChangeCollapseAll(false));\n    } else if (behaviourStatus.status === 4) {\n      dispatch(menuChangePinButtonEnable(false));\n      dispatch(menuChangeCollapseAll(true));\n    } else if (behaviourStatus.status === 5) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 6) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    } // eslint-disable-next-line\n\n  }, [behaviourStatus, placementStatus]);\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n\n    return () => {}; // eslint-disable-next-line\n  }, [attrMobile]);\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && !attrMobile && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned) {\n      if (scrolled) {\n        dispatch(menuChangeAttrMenuAnimate('hidden')); // Hiding all dropdowns to make sure they are closed when menu collapses\n\n        document.documentElement.click();\n      } else {\n        dispatch(menuChangeAttrMenuAnimate(''));\n      }\n    }\n\n    return () => {}; // eslint-disable-next-line\n  }, [scrolled]);\n  const getMenuStatus = useCallback((pBreakpoints, pPlacement, pBehaviour) => {\n    if (pBreakpoints) {\n      const placementStatusCB = checkPlacement({\n        placement: pPlacement,\n        breakpoints: pBreakpoints\n      });\n      const behaviourStatusCB = checkBehaviour({\n        placement: placementStatusCB.placementHtmlData,\n        behaviour: pBehaviour,\n        breakpoints: pBreakpoints\n      });\n\n      if (isDeeplyDiffPlacementStatus(placementStatusCB, placementStatus)) {\n        dispatch(menuChangePlacementStatus(placementStatusCB));\n      }\n\n      if (isDeeplyDiffBehaviourStatus(behaviourStatusCB, behaviourStatus)) {\n        dispatch(menuChangeBehaviourStatus(behaviourStatusCB));\n      }\n    } // eslint-disable-next-line\n\n  }, [behaviourStatus, placementStatus, breakpoints]);\n  useEffect(() => {\n    if (width && placement && behaviour && breakpoints) {\n      getMenuStatus(breakpoints, placement, behaviour);\n    } // eslint-disable-next-line\n\n  }, [width, breakpoints, placement, behaviour]); // Initializes the horizontal menu\n  // Customizes dropdown clicks to prevent auto closing and making sure all sub menus are closed when parent is closed\n\n  if (menuItemsMemo) {\n    if (placementStatus.view === MENU_PLACEMENT.Horizontal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-container flex-grow-1\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"menu\",\n          className: classNames('menu show'),\n          children: /*#__PURE__*/_jsxDEV(MainMenuItems, {\n            menuItems: menuItemsMemo,\n            menuPlacement: placementStatus.view\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    } // Vertical menu scrollbar init\n\n\n    return /*#__PURE__*/_jsxDEV(OverlayScrollbarsComponent, {\n      options: {\n        scrollbars: {\n          autoHide: 'leave',\n          autoHideDelay: 600\n        },\n        overflowBehavior: {\n          x: 'hidden',\n          y: 'scroll'\n        }\n      },\n      className: \"menu-container flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"menu\",\n        className: classNames('menu show'),\n        children: /*#__PURE__*/_jsxDEV(MainMenuItems, {\n          menuItems: menuItemsMemo,\n          menuPlacement: placementStatus.view\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(MainMenu, \"Mk/NmDyO2DKjBQYpSpT44dKxBiM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useWindowScroll, useWindowSize];\n});\n\n_c = MainMenu;\nexport default _c2 = /*#__PURE__*/React.memo(MainMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/harmadini/Work/Free/React/Acorn-React-Admin-Template-1.0.2/Source/acorn-react-starter-project/src/layout/nav/main-menu/MainMenu.js"],"names":["React","useCallback","useEffect","useMemo","useDispatch","useSelector","classNames","MENU_PLACEMENT","MENU_BEHAVIOUR","OverlayScrollbarsComponent","getMenuItems","useWindowSize","useWindowScroll","routesAndMenuItems","layoutShowingNavMenu","MainMenuItems","menuChangeAttrMenuAnimate","menuChangeAttrMobile","menuChangeBehaviourStatus","menuChangeCollapseAll","menuChangeNavClasses","menuChangePinButtonEnable","menuChangePlacementStatus","checkBehaviour","checkPlacement","isDeeplyDiffBehaviourStatus","isDeeplyDiffPlacementStatus","MainMenu","dispatch","placement","behaviour","placementStatus","behaviourStatus","attrMobile","breakpoints","useSidebar","state","menu","isLogin","currentUser","auth","scrolled","width","menuItemsMemo","data","mainMenuItems","userRole","role","status","placementHtmlData","Vertical","behaviourHtmlData","Unpinned","Horizontal","document","documentElement","click","getMenuStatus","pBreakpoints","pPlacement","pBehaviour","placementStatusCB","behaviourStatusCB","view","scrollbars","autoHide","autoHideDelay","overflowBehavior","x","y","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { MENU_PLACEMENT, MENU_BEHAVIOUR } from 'constants.js';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { getMenuItems } from 'routing/helper';\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useWindowScroll } from 'hooks/useWindowScroll';\nimport routesAndMenuItems from 'routes.js';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport MainMenuItems from './MainMenuItems';\nimport {\n  menuChangeAttrMenuAnimate,\n  menuChangeAttrMobile,\n  menuChangeBehaviourStatus,\n  menuChangeCollapseAll,\n  menuChangeNavClasses,\n  menuChangePinButtonEnable,\n  menuChangePlacementStatus,\n} from './menuSlice';\nimport { checkBehaviour, checkPlacement, isDeeplyDiffBehaviourStatus, isDeeplyDiffPlacementStatus } from './helper';\n\nconst MainMenu = () => {\n  const dispatch = useDispatch();\n  const { placement, behaviour, placementStatus, behaviourStatus, attrMobile, breakpoints, useSidebar } = useSelector((state) => state.menu);\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const scrolled = useWindowScroll();\n  const { width } = useWindowSize();\n\n  const menuItemsMemo = useMemo(\n    () =>\n      getMenuItems({\n        data: attrMobile && useSidebar ? routesAndMenuItems : routesAndMenuItems.mainMenuItems,\n        isLogin,\n        userRole: currentUser.role,\n      }),\n    [isLogin, currentUser, attrMobile, useSidebar]\n  );\n\n  useEffect(() => {\n    dispatch(menuChangeAttrMenuAnimate(''));\n    dispatch(layoutShowingNavMenu(''));\n\n    if (placementStatus.status === 2 || placementStatus.status === 4) {\n      // Switching back from the mobile menu layout fast\n      dispatch(menuChangeNavClasses({}));\n      dispatch(menuChangeAttrMobile(false));\n    }\n    // Prevents menu animation to make a fast switch\n    if (behaviourStatus.status === 1) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 2) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(false));\n    } else if (behaviourStatus.status === 3) {\n      dispatch(menuChangePinButtonEnable(true));\n      dispatch(menuChangeCollapseAll(false));\n    } else if (behaviourStatus.status === 4) {\n      dispatch(menuChangePinButtonEnable(false));\n      dispatch(menuChangeCollapseAll(true));\n    } else if (behaviourStatus.status === 5) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 6) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    }\n    // eslint-disable-next-line\n  }, [behaviourStatus, placementStatus]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [attrMobile]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && !attrMobile && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned) {\n      if (scrolled) {\n        dispatch(menuChangeAttrMenuAnimate('hidden'));\n        // Hiding all dropdowns to make sure they are closed when menu collapses\n        document.documentElement.click();\n      } else {\n        dispatch(menuChangeAttrMenuAnimate(''));\n      }\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [scrolled]);\n\n  const getMenuStatus = useCallback(\n    (pBreakpoints, pPlacement, pBehaviour) => {\n      if (pBreakpoints) {\n        const placementStatusCB = checkPlacement({ placement: pPlacement, breakpoints: pBreakpoints });\n        const behaviourStatusCB = checkBehaviour({ placement: placementStatusCB.placementHtmlData, behaviour: pBehaviour, breakpoints: pBreakpoints });\n\n        if (isDeeplyDiffPlacementStatus(placementStatusCB, placementStatus)) {\n          dispatch(menuChangePlacementStatus(placementStatusCB));\n        }\n        if (isDeeplyDiffBehaviourStatus(behaviourStatusCB, behaviourStatus)) {\n          dispatch(menuChangeBehaviourStatus(behaviourStatusCB));\n        }\n      }\n      // eslint-disable-next-line\n  }, [behaviourStatus,placementStatus,breakpoints]);\n\n  useEffect(() => {\n    if (width && placement && behaviour && breakpoints) {\n      getMenuStatus(breakpoints, placement, behaviour);\n    }\n    // eslint-disable-next-line\n  }, [width, breakpoints, placement, behaviour]);\n\n  // Initializes the horizontal menu\n  // Customizes dropdown clicks to prevent auto closing and making sure all sub menus are closed when parent is closed\n  if (menuItemsMemo) {\n    if (placementStatus.view === MENU_PLACEMENT.Horizontal) {\n      return (\n        <div className=\"menu-container flex-grow-1\">\n          <ul id=\"menu\" className={classNames('menu show')}>\n            <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n          </ul>\n        </div>\n      );\n    }\n    // Vertical menu scrollbar init\n    return (\n      <OverlayScrollbarsComponent\n        options={{\n          scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n          overflowBehavior: { x: 'hidden', y: 'scroll' },\n        }}\n        className=\"menu-container flex-grow-1\"\n      >\n        <ul id=\"menu\" className={classNames('menu show')}>\n          <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n        </ul>\n      </OverlayScrollbarsComponent>\n    );\n  }\n  return <></>;\n};\n\nexport default React.memo(MainMenu);\n"]},"metadata":{},"sourceType":"module"}